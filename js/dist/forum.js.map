{"version":3,"sources":["webpack://@aradeid/flarum-references/webpack/bootstrap","webpack://@aradeid/flarum-references/./forum.js","webpack://@aradeid/flarum-references/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@aradeid/flarum-references/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@aradeid/flarum-references/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@aradeid/flarum-references/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@aradeid/flarum-references/./node_modules/@babel/runtime/regenerator/index.js","webpack://@aradeid/flarum-references/./node_modules/orderedmap/index.es.js","webpack://@aradeid/flarum-references/../src/commands.js","webpack://@aradeid/flarum-references/../src/inputrules.js","webpack://@aradeid/flarum-references/../src/rules.js","webpack://@aradeid/flarum-references/../src/rulebuilders.js","webpack://@aradeid/flarum-references/../src/diff.js","webpack://@aradeid/flarum-references/../src/fragment.js","webpack://@aradeid/flarum-references/../src/comparedeep.js","webpack://@aradeid/flarum-references/../src/mark.js","webpack://@aradeid/flarum-references/../src/replace.js","webpack://@aradeid/flarum-references/../src/resolvedpos.js","webpack://@aradeid/flarum-references/../src/node.js","webpack://@aradeid/flarum-references/../src/content.js","webpack://@aradeid/flarum-references/../src/schema.js","webpack://@aradeid/flarum-references/../src/from_dom.js","webpack://@aradeid/flarum-references/../src/to_dom.js","webpack://@aradeid/flarum-references/../src/schema-list.js","webpack://@aradeid/flarum-references/../src/selection.js","webpack://@aradeid/flarum-references/../src/transaction.js","webpack://@aradeid/flarum-references/../src/state.js","webpack://@aradeid/flarum-references/../src/plugin.js","webpack://@aradeid/flarum-references/../src/map.js","webpack://@aradeid/flarum-references/../src/transform.js","webpack://@aradeid/flarum-references/../src/step.js","webpack://@aradeid/flarum-references/../src/replace_step.js","webpack://@aradeid/flarum-references/../src/structure.js","webpack://@aradeid/flarum-references/../src/mark_step.js","webpack://@aradeid/flarum-references/./node_modules/regenerator-runtime/runtime.js","webpack://@aradeid/flarum-references/./node_modules/tiptap-commands/dist/commands.esm.js","webpack://@aradeid/flarum-references/./node_modules/tiptap-utils/dist/utils.esm.js","webpack://@aradeid/flarum-references/./src/forum/InsertReferenceDropdown.js","webpack://@aradeid/flarum-references/./src/forum/components/BookRefModal.js","webpack://@aradeid/flarum-references/./src/forum/components/DefaultRefModal.js","webpack://@aradeid/flarum-references/./src/forum/components/JournalRefModal.js","webpack://@aradeid/flarum-references/./src/forum/components/NewsRefModal.js","webpack://@aradeid/flarum-references/./src/forum/components/ReferencesModal.js","webpack://@aradeid/flarum-references/./src/forum/components/SiteRefModal.js","webpack://@aradeid/flarum-references/./src/forum/index.js","webpack://@aradeid/flarum-references/external \"flarum.core.compat['app']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/components/Button']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/components/TextEditor']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/components/Tooltip']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/extend']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['common/utils/styleSelectedText']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['components/Button']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['components/ComposerBody']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['components/Modal']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['components/TextEditorButton']\"","webpack://@aradeid/flarum-references/external \"flarum.core.compat['forum/components/CommentPost']\""],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_extends","Object","assign","target","i","length","source","prototype","hasOwnProperty","call","_inheritsLoose","subClass","superClass","create","constructor","setPrototypeOf","_setPrototypeOf","o","p","__proto__","module","exports","require","OrderedMap","content","find","get","found","update","newKey","remove","slice","push","splice","addToStart","concat","addToEnd","addBefore","place","without","forEach","f","prepend","map","from","size","subtract","append","result","prop","orderedmap","deleteSelection","state","dispatch","selection","empty","tr","scrollIntoView","joinBackward","view","$cursor","endOfTextblock","parentOffset","let","$cut","findCutBefore","range","blockRange","liftTarget","lift","before","nodeBefore","type","spec","isolating","deleteBarrier","parent","textblockAt","NodeSelection","isSelectable","delStep","replaceStep","doc","after","Slice","to","step","setSelection","Selection","findFrom","mapping","pos","nodeSize","isAtom","depth","node","side","only","firstChild","lastChild","isTextblock","childCount","selectNodeBackward","$head","$pos","index","joinForward","findCutAfter","nodeAfter","selectNodeForward","joinUp","sel","nodeSel","point","canJoin","joinPoint","join","joinDown","$from","$to","newlineInCode","code","sameParent","$anchor","insertText","defaultBlockAt","match","edgeCount","edge","hasRequiredAttrs","exitCode","above","indexAfter","contentMatchAt","canReplaceWith","replaceWith","createAndFill","near","createParagraphNear","AllSelection","inlineContent","insert","TextSelection","liftEmptyBlock","end","canSplit","split","splitBlock","isBlock","atEnd","deflt","types","can","first","$first","setNodeMarkup","splitBlockKeepMarks","marks","storedMarks","ensureMarks","selectParentNode","same","sharedDepth","selectAll","joinMaybeClear","compatibleContent","canReplace","clearIncompatible","conn","canDelAfter","findWrapping","matchType","validEnd","wrap","Fragment","copy","ReplaceAroundStep","joinAt","selAfter","at","afterText","afterDepth","selectTextblockSide","isInline","start","selectTextblockStart","selectTextblockEnd","wrapIn","nodeType","attrs","wrapping","setBlockType","applicable","nodesBetween","hasMarkup","markApplies","ranges","allowsMarkType","v","toggleMark","markType","isInSet","removeStoredMark","addStoredMark","has","rangeHasMark","removeMark","spaceStart","isText","exec","text","spaceEnd","addMark","wrapDispatchForJoin","isJoinable","isGeneric","maps","j","_s","_e","joinable","maybeChild","indexOf","child","sort","a","b","autoJoin","command","Array","isArray","name","chainCommands","commands","backspace","del","pcBaseKeymap","macBaseKeymap","Home","End","const","mac","navigator","test","platform","os","baseKeymap","InputRule","handler","stringHandler","string","offset","lastIndexOf","cutOff","MAX_MATCH","inputRules","ref","plugin","Plugin","init","prev","stored","getMeta","selectionSet","docChanged","props","handleTextInput","run","rules","handleDOMEvents","compositionend","setTimeout","isInputRules","composing","textBefore","textBetween","Math","max","setMeta","transform","undoInputRule","plugins","undoable","getState","toUndo","steps","invert","docs","schema","emDash","ellipsis","openDoubleQuote","closeDoubleQuote","openSingleQuote","closeSingleQuote","smartQuotes","wrappingInputRule","regexp","getAttrs","joinPredicate","Function","$start","textblockTypeInputRule","findDiffStart","childA","childB","sameMarkup","inner","findDiffEnd","posA","posB","iA","iB","minSize","min","nodeStart","descendants","blockSeparator","leafText","separated","isLeaf","other","last","withText","cut","cutByIndex","replaceChild","current","eq","prototypeAccessors","RangeError","otherPos","findIndex","round","retIndex","curPos","cur","toString","toStringInner","toJSON","n","fromJSON","nodeFromJSON","fromArray","array","joined","nodes","compareDeep","Mark","addToSet","set","placed","excludes","rank","removeFromSet","obj","_","json","sameSet","setFrom","none","ReplaceError","message","Error","openStart","openEnd","insertAt","fragment","insertInto","removeBetween","removeRange","maxOpen","openIsolating","offsetTo","indexTo","dist","replace","replaceOuter","close","replaceTwoWay","prepareSliceForReplace","replaceThreeWay","checkJoin","main","sub","$before","$after","addNode","addRange","$end","startIndex","endIndex","textOffset","validContent","$along","extra","resolveNoCache","ResolvedPos","path","resolveDepth","val","dOff","posAtIndex","tmp","inclusive","marksAcross","next","pred","d","NodeRange","str","rem","resolveCached","resolveCache","cached","resolveCachePos","resolveCacheSize","prototypeAccessors$1","emptyAttrs","Node","startPos","textContent","defaultAttrs","mark","includeParents","nodeAt","childAfter","childBefore","toDebugString","wrapMarks","contentMatch","matchFragment","replacement","one","two","allowsMarks","canAppend","check","m","markFromJSON","TextNode","super","JSON","stringify","base","ContentMatch","wrapCache","parse","nodeTypes","stream","TokenStream","expr","parseExpr","dfa","nfa","checkForDeadEnds","frag","defaultType","compatible","fillBefore","toEnd","seen","search","finished","tp","computed","computeWrapping","active","via","shift","reverse","scan","out","inline","tokens","pop","eat","tok","SyntaxError","exprs","parseExprSeq","parseExprSubscript","parseExprAtom","parseExprRange","parseNum","Number","resolveName","typeName","groups","connect","compile","term","edges","reduce","loop","cmp","nullFrom","labeled","explore","states","known","work","dead","defaults","attrName","attr","hasDefault","computeAttrs","built","given","initAttrs","Attribute","NodeType","group","markSet","atom","whitespace","isRequired","createChecked","allowedMarks","topType","topNode","options","MarkType","excluded","instance","Schema","contentExprCache","contentExpr","markExpr","gatherMarks","excl","bind","topNodeType","wrappings","ok","DOMParser","tags","styles","rule","tag","this","style","normalizeLists","some","r","dom","context","ParseContext","addAll","finish","parseSlice","matchTag","matches","namespace","namespaceURI","matchesContext","matchStyle","charCodeAt","schemaRules","priority","nextPriority","parseDOM","loop$1","fromSchema","domParser","blockTags","address","article","aside","blockquote","canvas","dd","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","li","noscript","ol","output","pre","section","table","tfoot","ul","ignoreTags","head","object","script","title","listTags","OPT_PRESERVE_WS","OPT_PRESERVE_WS_FULL","OPT_OPEN_LEFT","wsOptionsFor","preserveWhitespace","NodeContext","pendingMarks","solid","activeMarks","stashMarks","fill","popFromStashMark","applyPending","nextType","pending","markMayApply","inlineContext","parentNode","nodeName","toLowerCase","parser","open","isOpen","topContext","topOptions","topMatch","findPositions","needsBlock","top","addDOM","addTextNode","getAttribute","readStyles","parseStyles","addPendingMark","addElement","removePendingMark","nodeValue","domNodeBefore","previousSibling","insertNode","findInText","findInside","matchAfter","ruleID","normalizeList","ruleFromNode","ignore","ignoreFallback","skip","closeParent","sync","oldNeedsBlock","leafFallback","addElementByRule","consuming","ownerDocument","createTextNode","findPlace","continueAfter","enter","startIn","getContent","contentDOM","contentElement","querySelector","findAround","childNodes","nextSibling","findAtPoint","route","cx","enterInner","block","textblockFromContext","closeExtra","preserveWS","topOpen","currentPos","contains","compareDocumentPosition","textNode","parts","option","useRoot","minDepth","part","$context","findSameMarkInSet","upto","level","stashMark","prevItem","appendChild","selector","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","re","trim","DOMSerializer","serializeFragment","createDocumentFragment","keep","rendered","spanning","add","markDOM","serializeMark","serializeNodeInner","renderSpec","onContent","serializeNode","toDOM","structure","xmlNS","tagName","space","createElementNS","createElement","setAttributeNS","setAttribute","innerContent","domSerializer","nodesFromSchema","marksFromSchema","gatherToDOM","document","window","olDOM","ulDOM","liDOM","orderedList","order","hasAttribute","bulletList","listItem","defining","addListNodes","itemContent","listGroup","ordered_list","bullet_list","list_item","wrapInList","listType","doJoin","outerRange","$insert","doWrapInList","wrappers","joinBefore","splitDepth","splitPos","e","splitListItem","itemType","grandParent","depthBefore","depthAfter","liftListItem","liftToOuterList","liftOutOfList","endOfList","list","item","atStart","indexBefore","sinkListItem","nestedBefore","classesById","SelectionRange","anchor","lastNode","lastParent","mapFrom","replaceRange","selectionToInsertionEnd","deleteRange","replaceRangeWith","dir","textOnly","findSelectionIn","bias","cls","jsonID","id","selectionClass","getBookmark","between","visible","TextBookmark","dPos","mapResult","deleted","NodeBookmark","selectable","AllBookmark","startLen","ReplaceStep","_from","_to","_newFrom","newTo","UPDATED_SEL","UPDATED_MARKS","UPDATED_SCROLL","Transaction","time","Date","now","curSelection","curSelectionFor","updated","meta","setStoredMarks","storedMarksSet","addStep","setTime","replaceSelection","replaceSelectionWith","inheritMarks","scrolledIntoView","Transform","FieldDesc","desc","baseFields","config","_marks","_old","Configuration","fields","pluginsByKey","EditorState","applyTransaction","filterTransaction","rootTr","transactions","trs","newState","applyInner","haveNew","appendTransaction","oldState","newInstance","field","applyListeners","$config","reconfigure","pluginFields","addApplyListener","removeApplyListener","bindProps","createKey","keys","PluginKey","lower16","factor16","pow","makeRecover","recoverIndex","recoverOffset","MapResult","recover","StepMap","inverted","diff","assoc","_map","simple","oldIndex","newIndex","oldSize","newSize","touches","oldStart","newStart","Mapping","mirror","appendMap","mirrors","setMirror","appendMapping","startSize","mirr","getMirror","appendMappingInverted","totalSize","inverse","corr","TransformError","maybeStep","failed","getMap","mustOverride","stepsByID","Step","_doc","_mapping","merge","_other","stepType","stepClass","StepResult","fail","fromReplace","contentBetween","gapFrom","gapTo","gap","inserted","canCut","gapStart","gapEnd","splitting","innerRange","around","findWrappingOutside","findWrappingInside","withAttrs","outer","inside","lastType","innerMatch","canChangeType","startM","endM","newNode","typesAfter","innerType","rest","baseType","typeAfter","insertPoint","dropPoint","pass","insertPos","fits","mapFragment","mapped","AddMarkStep","oldSlice","RemoveMarkStep","removed","added","removing","adding","newSet","s","matched","toRemove","parentType","delSteps","allowed","fitsTrivially","Fitter","fit","unplaced","frontier","findFittable","placeNodes","openMore","dropNode","moveInline","mustMoveInline","placedSize","sliceDepth","contentAt","frontierDepth","inject","openAtEnd","dropFromFragment","closeFrontierNode","openFrontierNode","taken","openEndCount","closeNodeStart","addToFragment","contentAfterFits","findCloseLevel","dropInner","move","count","invalidMarks","targetDepths","coveredDepths","preferredTarget","unshift","preferredTargetIndex","leftNodes","preferredDepth","openDepth","targetDepth","expand","closeFragment","startSteps","oldOpen","newOpen","covered","runtime","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","method","isGeneratorFunction","genFun","ctor","awrap","__await","AsyncIterator","PromiseImpl","invoke","record","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","skipTempReset","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","getMarksBetween","markInputRule","markEnd","markStart","matchStart","matchEnd","textStart","textEnd","excludedMarks","filter","nodeInputRule","pasteRule","transformPasted","markPasteRule","isLink","x","getMarkRange","replaceText","setInlineBlockType","splitToDefaultListItem","keepItem","toggleBlockType","toggletype","isActive","nodeIsActive","isList","todo_list","toggleList","parentList","findParentNode","toggleWrap","updateMark","ref$1","createCell","cellType","cellContent","getTableNodeTypes","tableNodeTypes","roles","tableRole","createTable","rowsCount","colsCount","withHeaderRow","headerCells","cells","cell","headerCell","header_cell","rows","row","equalNodeType","flatten","descend","findChildren","predicate","findBlockNodes","findParentNodeClosestToPos","isNodeSelection","findSelectedNodeOfType","getMarkAttrs","markItem","link","endPos","getNodeAttrs","nodeItem","markIsActive","nodeEqualsType","includes","InsertReferenceDropdown","buttonClassName","oninit","vnode","Stream","href","selectionEmpty","oncreate","$","on","is","app","modal","show","SafariModalHack","tooltip","vnodeContent","toArray","onsubmit","stopPropagation","focus","select","getButtonContent","children","icon","getMenu","items","preventDefault","trigger","composer","editor","ItemList","translator","trans","extractText","linkAttrs","styleSelectedText","el","prefix","suffix","onEditorUpdate","markActive","toggleClass","markAttrs","Dropdown","BookRefModal","allReferences","referenceId","author","year","editura","className","placeholder","oninput","removeRedStyle","required","pattern","Button","component","onclick","addReference","requiredFields","k","validity","valid","removeAttribute","areSetRequiredFields","setProperty","date","flarum","extensions","insertAtCursor","position","getSelectionRange","moveCursorTo","menuState","editorView","outerText","setEnter","getDate","getMonth","getFullYear","setSelectionRange","console","log","Modal","DefaultRefModal","JournalRefModal","bidi","NewsRefModal","createAt","siteName","ReferencesModal","SiteRefModal","initializers","ProseMirrorEditorDriver","proseMirror","extend","TextEditor","Tooltip","ComposerBody","sidebarMenu","linkControl","fetch","body","url","response","listItems","CommentPost","baseUrl","forum","attribute","postBody","element","elements","querySelectorAll","classList","startsWith","isFile","separateId","addEventListener","reference","getElementById","behavior"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","module.exports = require(\"regenerator-runtime\");\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","import {joinPoint, canJoin, findWrapping, liftTarget, canSplit, ReplaceAroundStep, replaceStep} from \"prosemirror-transform\"\nimport {Slice, Fragment} from \"prosemirror-model\"\nimport {Selection, TextSelection, NodeSelection, AllSelection} from \"prosemirror-state\"\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Delete the selection, if there is one.\nexport function deleteSelection(state, dispatch) {\n  if (state.selection.empty) return false\n  if (dispatch) dispatch(state.tr.deleteSelection().scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and at the start of a textblock, try to\n// reduce the distance between that block and the one before it—if\n// there's a block directly before it that can be joined, join them.\n// If not, try to move the selected block closer to the next one in\n// the document structure by lifting it out of its parent or moving it\n// into a parent of the previous block. Will use the view for accurate\n// (bidi-aware) start-of-textblock detection if given.\nexport function joinBackward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n                        : $cursor.parentOffset > 0))\n    return false\n\n  let $cut = findCutBefore($cursor)\n\n  // If there is no node before this, try to lift\n  if (!$cut) {\n    let range = $cursor.blockRange(), target = range && liftTarget(range)\n    if (target == null) return false\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  let before = $cut.nodeBefore\n  // Apply the joining algorithm\n  if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n    return true\n\n  // If the node below has no content and the node above is\n  // selectable, delete the node below and select the one above.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n    let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty)\n    if (delStep.slice.size < delStep.to - delStep.from) {\n      if (dispatch) {\n        let tr = state.tr.step(delStep)\n        tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  // If the node before is an atom, delete it\n  if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\nfunction textblockAt(node, side, only) {\n  for (; node; node = (side == \"start\" ? node.firstChild : node.lastChild)) {\n    if (node.isTextblock) return true\n    if (only && node.childCount != 1) return false\n  }\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the start of a textblock, select\n// the node before that textblock, if possible. This is intended to be\n// bound to keys like backspace, after\n// [`joinBackward`](#commands.joinBackward) or other deleting\n// commands, as a fall-back behavior when the schema doesn't allow\n// deletion at the selected point.\nexport function selectNodeBackward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0) return false\n    $cut = findCutBefore($head)\n  }\n  let node = $cut && $cut.nodeBefore\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView())\n  return true\n}\n\nfunction findCutBefore($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    if ($pos.index(i) > 0) return $pos.doc.resolve($pos.before(i + 1))\n    if ($pos.node(i).type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and the cursor is at the end of a\n// textblock, try to reduce or remove the boundary between that block\n// and the one after it, either by joining them or by moving the other\n// block closer to this one in the tree structure. Will use the view\n// for accurate start-of-textblock detection if given.\nexport function joinForward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n                        : $cursor.parentOffset < $cursor.parent.content.size))\n    return false\n\n  let $cut = findCutAfter($cursor)\n\n  // If there is no node after this, there's nothing to do\n  if (!$cut) return false\n\n  let after = $cut.nodeAfter\n  // Try the joining algorithm\n  if (deleteBarrier(state, $cut, dispatch)) return true\n\n  // If the node above has no content and the node below is\n  // selectable, delete the node above and select the one below.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n    let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty)\n    if (delStep.slice.size < delStep.to - delStep.from) {\n      if (dispatch) {\n        let tr = state.tr.step(delStep)\n        tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                        : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  // If the next node is an atom, delete it\n  if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the end of a textblock, select\n// the node coming after that textblock, if possible. This is intended\n// to be bound to keys like delete, after\n// [`joinForward`](#commands.joinForward) and similar deleting\n// commands, to provide a fall-back behavior when the schema doesn't\n// allow deletion at the selected point.\nexport function selectNodeForward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n      return false\n    $cut = findCutAfter($head)\n  }\n  let node = $cut && $cut.nodeAfter\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView())\n  return true\n}\n\nfunction findCutAfter($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    let parent = $pos.node(i)\n    if ($pos.index(i) + 1 < parent.childCount) return $pos.doc.resolve($pos.after(i + 1))\n    if (parent.type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block or, if there is a text selection, the\n// closest ancestor block of the selection that can be joined, with\n// the sibling above it.\nexport function joinUp(state, dispatch) {\n  let sel = state.selection, nodeSel = sel instanceof NodeSelection, point\n  if (nodeSel) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.from)) return false\n    point = sel.from\n  } else {\n    point = joinPoint(state.doc, sel.from, -1)\n    if (point == null) return false\n  }\n  if (dispatch) {\n    let tr = state.tr.join(point)\n    if (nodeSel) tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block, or the closest ancestor of the selection\n// that can be joined, with the sibling after it.\nexport function joinDown(state, dispatch) {\n  let sel = state.selection, point\n  if (sel instanceof NodeSelection) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.to)) return false\n    point = sel.to\n  } else {\n    point = joinPoint(state.doc, sel.to, 1)\n    if (point == null) return false\n  }\n  if (dispatch)\n    dispatch(state.tr.join(point).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Lift the selected block, or the closest ancestor block of the\n// selection that can be lifted, out of its parent node.\nexport function lift(state, dispatch) {\n  let {$from, $to} = state.selection\n  let range = $from.blockRange($to), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the selection is in a node whose type has a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, replace the\n// selection with a newline character.\nexport function newlineInCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  if (dispatch) dispatch(state.tr.insertText(\"\\n\").scrollIntoView())\n  return true\n}\n\nfunction defaultBlockAt(match) {\n  for (let i = 0; i < match.edgeCount; i++) {\n    let {type} = match.edge(i)\n    if (type.isTextblock && !type.hasRequiredAttrs()) return type\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// When the selection is in a node with a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, create a\n// default block after the code block, and move the cursor there.\nexport function exitCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after))\n  if (!above.canReplaceWith(after, after, type)) return false\n  if (dispatch) {\n    let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill())\n    tr.setSelection(Selection.near(tr.doc.resolve(pos), 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If a block node is selected, create an empty paragraph before (if\n// it is its parent's first child) or after it.\nexport function createParagraphNear(state, dispatch) {\n  let sel = state.selection, {$from, $to} = sel\n  if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent) return false\n  let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()))\n  if (!type || !type.isTextblock) return false\n  if (dispatch) {\n    let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos\n    let tr = state.tr.insert(side, type.createAndFill())\n    tr.setSelection(TextSelection.create(tr.doc, side + 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the cursor is in an empty textblock that can be lifted, lift the\n// block.\nexport function liftEmptyBlock(state, dispatch) {\n  let {$cursor} = state.selection\n  if (!$cursor || $cursor.parent.content.size) return false\n  if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n    let before = $cursor.before()\n    if (canSplit(state.doc, before)) {\n      if (dispatch) dispatch(state.tr.split(before).scrollIntoView())\n      return true\n    }\n  }\n  let range = $cursor.blockRange(), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Split the parent block of the selection. If the selection is a text\n// selection, also delete its content.\nexport function splitBlock(state, dispatch) {\n  let {$from, $to} = state.selection\n  if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) return false\n    if (dispatch) dispatch(state.tr.split($from.pos).scrollIntoView())\n    return true\n  }\n\n  if (!$from.parent.isBlock) return false\n\n  if (dispatch) {\n    let atEnd = $to.parentOffset == $to.parent.content.size\n    let tr = state.tr\n    if (state.selection instanceof TextSelection || state.selection instanceof AllSelection) tr.deleteSelection()\n    let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n    let types = atEnd && deflt ? [{type: deflt}] : null\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n    if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{type: deflt}])) {\n      types = [{type: deflt}]\n      can = true\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n      if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n        let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first)\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n      }\n    }\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Acts like [`splitBlock`](#commands.splitBlock), but without\n// resetting the set of active marks at the cursor.\nexport function splitBlockKeepMarks(state, dispatch) {\n  return splitBlock(state, dispatch && (tr => {\n    let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n    if (marks) tr.ensureMarks(marks)\n    dispatch(tr)\n  }))\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Move the selection to the node wrapping the current selection, if\n// any. (Will not select the document node.)\nexport function selectParentNode(state, dispatch) {\n  let {$from, to} = state.selection, pos\n  let same = $from.sharedDepth(to)\n  if (same == 0) return false\n  pos = $from.before(same)\n  if (dispatch) dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)))\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Select the whole document.\nexport function selectAll(state, dispatch) {\n  if (dispatch) dispatch(state.tr.setSelection(new AllSelection(state.doc)))\n  return true\n}\n\nfunction joinMaybeClear(state, $pos, dispatch) {\n  let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index()\n  if (!before || !after || !before.type.compatibleContent(after.type)) return false\n  if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n    if (dispatch) dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView())\n    return true\n  }\n  if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n    return false\n  if (dispatch)\n    dispatch(state.tr\n             .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n             .join($pos.pos)\n             .scrollIntoView())\n  return true\n}\n\nfunction deleteBarrier(state, $cut, dispatch) {\n  let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match\n  if (before.type.spec.isolating || after.type.spec.isolating) return false\n  if (joinMaybeClear(state, $cut, dispatch)) return true\n\n  let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1)\n  if (canDelAfter &&\n      (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n      match.matchType(conn[0] || after.type).validEnd) {\n    if (dispatch) {\n      let end = $cut.pos + after.nodeSize, wrap = Fragment.empty\n      for (let i = conn.length - 1; i >= 0; i--)\n        wrap = Fragment.from(conn[i].create(null, wrap))\n      wrap = Fragment.from(before.copy(wrap))\n      let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true))\n      let joinAt = end + 2 * conn.length\n      if (canJoin(tr.doc, joinAt)) tr.join(joinAt)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  let selAfter = Selection.findFrom($cut, 1)\n  let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range)\n  if (target != null && target >= $cut.depth) {\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n    let at = before, wrap = []\n    for (;;) {\n      wrap.push(at)\n      if (at.isTextblock) break\n      at = at.lastChild\n    }\n    let afterText = after, afterDepth = 1\n    for (; !afterText.isTextblock; afterText = afterText.firstChild) afterDepth++\n    if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n      if (dispatch) {\n        let end = Fragment.empty\n        for (let i = wrap.length - 1; i >= 0; i--) end = Fragment.from(wrap[i].copy(end))\n        let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize,\n                                                     $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth,\n                                                     new Slice(end, wrap.length, 0), 0, true))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction selectTextblockSide(side) {\n  return function(state, dispatch) {\n    let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to\n    let depth = $pos.depth\n    while ($pos.node(depth).isInline) {\n      if (!depth) return false\n      depth--\n    }\n    if (!$pos.node(depth).isTextblock) return false\n    if (dispatch)\n      dispatch(state.tr.setSelection(TextSelection.create(\n        state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))))\n    return true\n  }\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Moves the cursor to the start of current text block.\nexport const selectTextblockStart = selectTextblockSide(-1)\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Moves the cursor to the end of current text block.\nexport const selectTextblockEnd = selectTextblockSide(1)\n\n// Parameterized commands\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Wrap the selection in a node of the given type with the given\n// attributes.\nexport function wrapIn(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return false\n    if (dispatch) dispatch(state.tr.wrap(range, wrapping).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that tries to set the selected textblocks to the\n// given node type with the given attributes.\nexport function setBlockType(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {from, to} = state.selection\n    let applicable = false\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (applicable) return false\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) return\n      if (node.type == nodeType) {\n        applicable = true\n      } else {\n        let $pos = state.doc.resolve(pos), index = $pos.index()\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType)\n      }\n    })\n    if (!applicable) return false\n    if (dispatch) dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView())\n    return true\n  }\n}\n\nfunction markApplies(doc, ranges, type) {\n  for (let i = 0; i < ranges.length; i++) {\n    let {$from, $to} = ranges[i]\n    let can = $from.depth == 0 ? doc.type.allowsMarkType(type) : false\n    doc.nodesBetween($from.pos, $to.pos, node => {\n      if (can) return false\n      can = node.inlineContent && node.type.allowsMarkType(type)\n    })\n    if (can) return true\n  }\n  return false\n}\n\n// :: (MarkType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command function that toggles the given mark with the\n// given attributes. Will return `false` when the current selection\n// doesn't support that mark. This will remove the mark if any marks\n// of that type exist in the selection, or add it otherwise. If the\n// selection is empty, this applies to the [stored\n// marks](#state.EditorState.storedMarks) instead of a range of the\n// document.\nexport function toggleMark(markType, attrs) {\n  return function(state, dispatch) {\n    let {empty, $cursor, ranges} = state.selection\n    if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType)) return false\n    if (dispatch) {\n      if ($cursor) {\n        if (markType.isInSet(state.storedMarks || $cursor.marks()))\n          dispatch(state.tr.removeStoredMark(markType))\n        else\n          dispatch(state.tr.addStoredMark(markType.create(attrs)))\n      } else {\n        let has = false, tr = state.tr\n        for (let i = 0; !has && i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          has = state.doc.rangeHasMark($from.pos, $to.pos, markType)\n        }\n        for (let i = 0; i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          if (has) {\n            tr.removeMark($from.pos, $to.pos, markType)\n          } else {\n            let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore\n            let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0\n            let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0\n            if (from + spaceStart < to) { from += spaceStart; to -= spaceEnd }\n            tr.addMark(from, to, markType.create(attrs))\n          }\n        }\n        dispatch(tr.scrollIntoView())\n      }\n    }\n    return true\n  }\n}\n\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n  return tr => {\n    if (!tr.isGeneric) return dispatch(tr)\n\n    let ranges = []\n    for (let i = 0; i < tr.mapping.maps.length; i++) {\n      let map = tr.mapping.maps[i]\n      for (let j = 0; j < ranges.length; j++)\n        ranges[j] = map.map(ranges[j])\n      map.forEach((_s, _e, from, to) => ranges.push(from, to))\n    }\n\n    // Figure out which joinable points exist inside those ranges,\n    // by checking all node boundaries in their parent nodes.\n    let joinable = []\n    for (let i = 0; i < ranges.length; i += 2) {\n      let from = ranges[i], to = ranges[i + 1]\n      let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth)\n      for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n        let after = parent.maybeChild(index)\n        if (!after) break\n        if (index && joinable.indexOf(pos) == -1) {\n          let before = parent.child(index - 1)\n          if (before.type == after.type && isJoinable(before, after))\n            joinable.push(pos)\n        }\n        pos += after.nodeSize\n      }\n    }\n    // Join the joinable points\n    joinable.sort((a, b) => a - b)\n    for (let i = joinable.length - 1; i >= 0; i--) {\n      if (canJoin(tr.doc, joinable[i])) tr.join(joinable[i])\n    }\n    dispatch(tr)\n  }\n}\n\n// :: ((state: EditorState, ?(tr: Transaction)) → bool, union<(before: Node, after: Node) → bool, [string]>) → (state: EditorState, ?(tr: Transaction)) → bool\n// Wrap a command so that, when it produces a transform that causes\n// two joinable nodes to end up next to each other, those are joined.\n// Nodes are considered joinable when they are of the same type and\n// when the `isJoinable` predicate returns true for them or, if an\n// array of strings was passed, if their node type name is in that\n// array.\nexport function autoJoin(command, isJoinable) {\n  if (Array.isArray(isJoinable)) {\n    let types = isJoinable\n    isJoinable = node => types.indexOf(node.type.name) > -1\n  }\n  return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, isJoinable), view)\n}\n\n// :: (...[(EditorState, ?(tr: Transaction), ?EditorView) → bool]) → (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// Combine a number of command functions into a single function (which\n// calls them one by one until one returns true).\nexport function chainCommands(...commands) {\n  return function(state, dispatch, view) {\n    for (let i = 0; i < commands.length; i++)\n      if (commands[i](state, dispatch, view)) return true\n    return false\n  }\n}\n\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward)\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward)\n\n// :: Object\n// A basic keymap containing bindings not specific to any schema.\n// Binds the following keys (when multiple commands are listed, they\n// are chained with [`chainCommands`](#commands.chainCommands)):\n//\n// * **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n// * **Mod-Enter** to `exitCode`\n// * **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n// * **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-a** to `selectAll`\nexport let pcBaseKeymap = {\n  \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n  \"Mod-Enter\": exitCode,\n  \"Backspace\": backspace,\n  \"Mod-Backspace\": backspace,\n  \"Shift-Backspace\": backspace,\n  \"Delete\": del,\n  \"Mod-Delete\": del,\n  \"Mod-a\": selectAll\n}\n\n// :: Object\n// A copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n// **Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n// **Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\n// Ctrl-Delete.\nexport let macBaseKeymap = {\n  \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n  \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n  \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n  \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Ctrl-a\": selectTextblockStart,\n  \"Ctrl-e\": selectTextblockEnd\n}\nfor (let key in pcBaseKeymap) macBaseKeymap[key] = pcBaseKeymap[key]\n\npcBaseKeymap.Home = selectTextblockStart\npcBaseKeymap.End = selectTextblockEnd\n\n// declare global: os, navigator\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false\n\n// :: Object\n// Depending on the detected platform, this will hold\n// [`pcBasekeymap`](#commands.pcBaseKeymap) or\n// [`macBaseKeymap`](#commands.macBaseKeymap).\nexport let baseKeymap = mac ? macBaseKeymap : pcBaseKeymap\n","import {Plugin} from \"prosemirror-state\"\n\n// ::- Input rules are regular expressions describing a piece of text\n// that, when typed, causes something to happen. This might be\n// changing two dashes into an emdash, wrapping a paragraph starting\n// with `\"> \"` into a blockquote, or something entirely different.\nexport class InputRule {\n  // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n  // Create an input rule. The rule applies when the user typed\n  // something and the text directly in front of the cursor matches\n  // `match`, which should end with `$`.\n  //\n  // The `handler` can be a string, in which case the matched text, or\n  // the first matched group in the regexp, is replaced by that\n  // string.\n  //\n  // Or a it can be a function, which will be called with the match\n  // array produced by\n  // [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n  // as well as the start and end of the matched range, and which can\n  // return a [transaction](#state.Transaction) that describes the\n  // rule's effect, or null to indicate the input was not handled.\n  constructor(match, handler) {\n    this.match = match\n    this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler\n  }\n}\n\nfunction stringHandler(string) {\n  return function(state, match, start, end) {\n    let insert = string\n    if (match[1]) {\n      let offset = match[0].lastIndexOf(match[1])\n      insert += match[0].slice(offset + match[1].length)\n      start += offset\n      let cutOff = start - end\n      if (cutOff > 0) {\n        insert = match[0].slice(offset - cutOff, offset) + insert\n        start = end\n      }\n    }\n    return state.tr.insertText(insert, start, end)\n  }\n}\n\nconst MAX_MATCH = 500\n\n// :: (config: {rules: [InputRule]}) → Plugin\n// Create an input rules plugin. When enabled, it will cause text\n// input that matches any of the given rules to trigger the rule's\n// action.\nexport function inputRules({rules}) {\n  let plugin = new Plugin({\n    state: {\n      init() { return null },\n      apply(tr, prev) {\n        let stored = tr.getMeta(this)\n        if (stored) return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      }\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            let {$cursor} = view.state.selection\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin)\n          })\n        }\n      }\n    },\n\n    isInputRules: true\n  })\n  return plugin\n}\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) return false\n  let state = view.state, $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code) return false\n  let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset,\n                                            null, \"\\ufffc\") + text\n  for (let i = 0; i < rules.length; i++) {\n    let match = rules[i].match.exec(textBefore)\n    let tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to)\n    if (!tr) continue\n    view.dispatch(tr.setMeta(plugin, {transform: tr, from, to, text}))\n    return true\n  }\n  return false\n}\n\n// :: (EditorState, ?(Transaction)) → bool\n// This is a command that will undo an input rule, if applying such a\n// rule was the last thing that the user did.\nexport function undoInputRule(state, dispatch) {\n  let plugins = state.plugins\n  for (let i = 0; i < plugins.length; i++) {\n    let plugin = plugins[i], undoable\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        let tr = state.tr, toUndo = undoable.transform\n        for (let j = toUndo.steps.length - 1; j >= 0; j--)\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        if (undoable.text) {\n          let marks = tr.doc.resolve(undoable.from).marks()\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n        dispatch(tr)\n      }\n      return true\n    }\n  }\n  return false\n}\n","import {InputRule} from \"./inputrules\"\n\n// :: InputRule Converts double dashes to an emdash.\nexport const emDash = new InputRule(/--$/, \"—\")\n// :: InputRule Converts three dots to an ellipsis character.\nexport const ellipsis = new InputRule(/\\.\\.\\.$/, \"…\")\n// :: InputRule “Smart” opening double quotes.\nexport const openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\")\n// :: InputRule “Smart” closing double quotes.\nexport const closeDoubleQuote = new InputRule(/\"$/, \"”\")\n// :: InputRule “Smart” opening single quotes.\nexport const openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\")\n// :: InputRule “Smart” closing single quotes.\nexport const closeSingleQuote = new InputRule(/'$/, \"’\")\n\n// :: [InputRule] Smart-quote related input rules.\nexport const smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote]\n","import {InputRule} from \"./inputrules\"\nimport {findWrapping, canJoin} from \"prosemirror-transform\"\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>, ?([string], Node) → bool) → InputRule\n// Build an input rule for automatically wrapping a textblock when a\n// given string is typed. The `regexp` argument is\n// directly passed through to the `InputRule` constructor. You'll\n// probably want the regexp to start with `^`, so that the pattern can\n// only occur at the start of a textblock.\n//\n// `nodeType` is the type of node to wrap in. If it needs attributes,\n// you can either pass them directly, or pass a function that will\n// compute them from the regular expression match.\n//\n// By default, if there's a node with the same type above the newly\n// wrapped node, the rule will try to [join](#transform.Transform.join) those\n// two nodes. You can pass a join predicate, which takes a regular\n// expression match and the node before the wrapped node, and can\n// return a boolean to indicate whether a join should happen.\nexport function wrappingInputRule(regexp, nodeType, getAttrs, joinPredicate) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    let tr = state.tr.delete(start, end)\n    let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return null\n    tr.wrap(range, wrapping)\n    let before = tr.doc.resolve(start - 1).nodeBefore\n    if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n        (!joinPredicate || joinPredicate(match, before)))\n      tr.join(start - 1)\n    return tr\n  })\n}\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>) → InputRule\n// Build an input rule that changes the type of a textblock when the\n// matched text is typed into it. You'll usually want to start your\n// regexp with `^` to that it is only matched at the start of a\n// textblock. The optional `getAttrs` parameter can be used to compute\n// the new node's attributes, and works the same as in the\n// `wrappingInputRule` function.\nexport function textblockTypeInputRule(regexp, nodeType, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let $start = state.doc.resolve(start)\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) return null\n    return state.tr\n      .delete(start, end)\n      .setBlockType(start, start, nodeType, attrs)\n  })\n}\n","export function findDiffStart(a, b, pos) {\n  for (let i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      return a.childCount == b.childCount ? null : pos\n\n    let childA = a.child(i), childB = b.child(i)\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) return pos\n\n    if (childA.isText && childA.text != childB.text) {\n      for (let j = 0; childA.text[j] == childB.text[j]; j++)\n        pos++\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffStart(childA.content, childB.content, pos + 1)\n      if (inner != null) return inner\n    }\n    pos += childA.nodeSize\n  }\n}\n\nexport function findDiffEnd(a, b, posA, posB) {\n  for (let iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      return iA == iB ? null : {a: posA, b: posB}\n\n    let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize\n    if (childA == childB) {\n      posA -= size; posB -= size\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) return {a: posA, b: posB}\n\n    if (childA.isText && childA.text != childB.text) {\n      let same = 0, minSize = Math.min(childA.text.length, childB.text.length)\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1)\n      if (inner) return inner\n    }\n    posA -= size; posB -= size\n  }\n}\n","import {findDiffStart, findDiffEnd} from \"./diff\"\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nexport class Fragment {\n  constructor(content, size) {\n    this.content = content\n    // :: number\n    // The size of the fragment, which is the total of the size of its\n    // content nodes.\n    this.size = size || 0\n    if (size == null) for (let i = 0; i < content.length; i++)\n      this.size += content[i].nodeSize\n  }\n\n  // :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes between the given two\n  // positions (relative to start of this fragment). Doesn't descend\n  // into a node when the callback returns `false`.\n  nodesBetween(from, to, f, nodeStart = 0, parent) {\n    for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n        let start = pos + 1\n        child.nodesBetween(Math.max(0, from - start),\n                           Math.min(child.content.size, to - start),\n                           f, nodeStart + start)\n      }\n      pos = end\n    }\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. The callback\n  // may return `false` to prevent traversal of a given node's children.\n  descendants(f) {\n    this.nodesBetween(0, this.size, f)\n  }\n\n  // :: (number, number, ?string, ?union<string, (leafNode: Node) → string>) → string\n  // Extract the text between `from` and `to`. See the same method on\n  // [`Node`](#model.Node.textBetween).\n  textBetween(from, to, blockSeparator, leafText) {\n    let text = \"\", separated = true\n    this.nodesBetween(from, to, (node, pos) => {\n      if (node.isText) {\n        text += node.text.slice(Math.max(from, pos) - pos, to - pos)\n        separated = !blockSeparator\n      } else if (node.isLeaf && leafText) {\n        text += typeof leafText === 'function' ? leafText(node): leafText\n        separated = !blockSeparator\n      } else if (!separated && node.isBlock) {\n        text += blockSeparator\n        separated = true\n      }\n    }, 0)\n    return text\n  }\n\n  // :: (Fragment) → Fragment\n  // Create a new fragment containing the combined content of this\n  // fragment and the other.\n  append(other) {\n    if (!other.size) return this\n    if (!this.size) return other\n    let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0\n    if (last.isText && last.sameMarkup(first)) {\n      content[content.length - 1] = last.withText(last.text + first.text)\n      i = 1\n    }\n    for (; i < other.content.length; i++) content.push(other.content[i])\n    return new Fragment(content, this.size + other.size)\n  }\n\n  // :: (number, ?number) → Fragment\n  // Cut out the sub-fragment between the two given positions.\n  cut(from, to) {\n    if (to == null) to = this.size\n    if (from == 0 && to == this.size) return this\n    let result = [], size = 0\n    if (to > from) for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from) {\n        if (pos < from || end > to) {\n          if (child.isText)\n            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos))\n          else\n            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1))\n        }\n        result.push(child)\n        size += child.nodeSize\n      }\n      pos = end\n    }\n    return new Fragment(result, size)\n  }\n\n  cutByIndex(from, to) {\n    if (from == to) return Fragment.empty\n    if (from == 0 && to == this.content.length) return this\n    return new Fragment(this.content.slice(from, to))\n  }\n\n  // :: (number, Node) → Fragment\n  // Create a new fragment in which the node at the given index is\n  // replaced by the given node.\n  replaceChild(index, node) {\n    let current = this.content[index]\n    if (current == node) return this\n    let copy = this.content.slice()\n    let size = this.size + node.nodeSize - current.nodeSize\n    copy[index] = node\n    return new Fragment(copy, size)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by prepending the given node to this\n  // fragment.\n  addToStart(node) {\n    return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by appending the given node to this\n  // fragment.\n  addToEnd(node) {\n    return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n  }\n\n  // :: (Fragment) → bool\n  // Compare this fragment to another one.\n  eq(other) {\n    if (this.content.length != other.content.length) return false\n    for (let i = 0; i < this.content.length; i++)\n      if (!this.content[i].eq(other.content[i])) return false\n    return true\n  }\n\n  // :: ?Node\n  // The first child of the fragment, or `null` if it is empty.\n  get firstChild() { return this.content.length ? this.content[0] : null }\n\n  // :: ?Node\n  // The last child of the fragment, or `null` if it is empty.\n  get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null }\n\n  // :: number\n  // The number of child nodes in this fragment.\n  get childCount() { return this.content.length }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raise an error when the\n  // index is out of range.\n  child(index) {\n    let found = this.content[index]\n    if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this)\n    return found\n  }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) {\n    return this.content[index]\n  }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) {\n    for (let i = 0, p = 0; i < this.content.length; i++) {\n      let child = this.content[i]\n      f(child, p, i)\n      p += child.nodeSize\n    }\n  }\n\n  // :: (Fragment) → ?number\n  // Find the first position at which this fragment and another\n  // fragment differ, or `null` if they are the same.\n  findDiffStart(other, pos = 0) {\n    return findDiffStart(this, other, pos)\n  }\n\n  // :: (Fragment) → ?{a: number, b: number}\n  // Find the first position, searching from the end, at which this\n  // fragment and the given fragment differ, or `null` if they are the\n  // same. Since this position will not be the same in both nodes, an\n  // object with two separate positions is returned.\n  findDiffEnd(other, pos = this.size, otherPos = other.size) {\n    return findDiffEnd(this, other, pos, otherPos)\n  }\n\n  // : (number, ?number) → {index: number, offset: number}\n  // Find the index and inner offset corresponding to a given relative\n  // position in this fragment. The result object will be reused\n  // (overwritten) the next time the function is called. (Not public.)\n  findIndex(pos, round = -1) {\n    if (pos == 0) return retIndex(0, pos)\n    if (pos == this.size) return retIndex(this.content.length, pos)\n    if (pos > this.size || pos < 0) throw new RangeError(`Position ${pos} outside of fragment (${this})`)\n    for (let i = 0, curPos = 0;; i++) {\n      let cur = this.child(i), end = curPos + cur.nodeSize\n      if (end >= pos) {\n        if (end == pos || round > 0) return retIndex(i + 1, end)\n        return retIndex(i, curPos)\n      }\n      curPos = end\n    }\n  }\n\n  // :: () → string\n  // Return a debugging string that describes this fragment.\n  toString() { return \"<\" + this.toStringInner() + \">\" }\n\n  toStringInner() { return this.content.join(\", \") }\n\n  // :: () → ?Object\n  // Create a JSON-serializeable representation of this fragment.\n  toJSON() {\n    return this.content.length ? this.content.map(n => n.toJSON()) : null\n  }\n\n  // :: (Schema, ?Object) → Fragment\n  // Deserialize a fragment from its JSON representation.\n  static fromJSON(schema, value) {\n    if (!value) return Fragment.empty\n    if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\")\n    return new Fragment(value.map(schema.nodeFromJSON))\n  }\n\n  // :: ([Node]) → Fragment\n  // Build a fragment from an array of nodes. Ensures that adjacent\n  // text nodes with the same marks are joined together.\n  static fromArray(array) {\n    if (!array.length) return Fragment.empty\n    let joined, size = 0\n    for (let i = 0; i < array.length; i++) {\n      let node = array[i]\n      size += node.nodeSize\n      if (i && node.isText && array[i - 1].sameMarkup(node)) {\n        if (!joined) joined = array.slice(0, i)\n        joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text)\n      } else if (joined) {\n        joined.push(node)\n      }\n    }\n    return new Fragment(joined || array, size)\n  }\n\n  // :: (?union<Fragment, Node, [Node]>) → Fragment\n  // Create a fragment from something that can be interpreted as a set\n  // of nodes. For `null`, it returns the empty fragment. For a\n  // fragment, the fragment itself. For a node or array of nodes, a\n  // fragment containing those nodes.\n  static from(nodes) {\n    if (!nodes) return Fragment.empty\n    if (nodes instanceof Fragment) return nodes\n    if (Array.isArray(nodes)) return this.fromArray(nodes)\n    if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize)\n    throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                         (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n  }\n}\n\nconst found = {index: 0, offset: 0}\nfunction retIndex(index, offset) {\n  found.index = index\n  found.offset = offset\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0)\n","export function compareDeep(a, b) {\n  if (a === b) return true\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) return false\n  let array = Array.isArray(a)\n  if (Array.isArray(b) != array) return false\n  if (array) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) if (!compareDeep(a[i], b[i])) return false\n  } else {\n    for (let p in a) if (!(p in b) || !compareDeep(a[p], b[p])) return false\n    for (let p in b) if (!(p in a)) return false\n  }\n  return true\n}\n","import {MarkType, Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {AddMarkStep, RemoveMarkStep} from \"./mark_step\"\nimport {ReplaceStep} from \"./replace_step\"\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  let removed = [], added = [], removing = null, adding = null\n  this.doc.nodesBetween(from, to, (node, pos, parent) => {\n    if (!node.isInline) return\n    let marks = node.marks\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to)\n      let newSet = mark.addToSet(marks)\n\n      for (let i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            removing.to = end\n          else\n            removed.push(removing = new RemoveMarkStep(start, end, marks[i]))\n        }\n      }\n\n      if (adding && adding.to == start)\n        adding.to = end\n      else\n        added.push(adding = new AddMarkStep(start, end, mark))\n    }\n  })\n\n  removed.forEach(s => this.step(s))\n  added.forEach(s => this.step(s))\n  return this\n}\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark = null) {\n  let matched = [], step = 0\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isInline) return\n    step++\n    let toRemove = null\n    if (mark instanceof MarkType) {\n      let set = node.marks, found\n      while (found = mark.isInSet(set)) {\n        ;(toRemove || (toRemove = [])).push(found)\n        set = found.removeFromSet(set)\n      }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) toRemove = [mark]\n    } else {\n      toRemove = node.marks\n    }\n    if (toRemove && toRemove.length) {\n      let end = Math.min(pos + node.nodeSize, to)\n      for (let i = 0; i < toRemove.length; i++) {\n        let style = toRemove[i], found\n        for (let j = 0; j < matched.length; j++) {\n          let m = matched[j]\n          if (m.step == step - 1 && style.eq(matched[j].style)) found = m\n        }\n        if (found) {\n          found.to = end\n          found.step = step\n        } else {\n          matched.push({style, from: Math.max(pos, from), to: end, step})\n        }\n      }\n    }\n  })\n  matched.forEach(m => this.step(new RemoveMarkStep(m.from, m.to, m.style)))\n  return this\n}\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match = parentType.contentMatch) {\n  let node = this.doc.nodeAt(pos)\n  let delSteps = [], cur = pos + 1\n  for (let i = 0; i < node.childCount; i++) {\n    let child = node.child(i), end = cur + child.nodeSize\n    let allowed = match.matchType(child.type, child.attrs)\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, Slice.empty))\n    } else {\n      match = allowed\n      for (let j = 0; j < child.marks.length; j++) if (!parentType.allowsMarkType(child.marks[j].type))\n        this.step(new RemoveMarkStep(cur, end, child.marks[j]))\n    }\n    cur = end\n  }\n  if (!match.validEnd) {\n    let fill = match.fillBefore(Fragment.empty, true)\n    this.replace(cur, cur, new Slice(fill, 0, 0))\n  }\n  for (let i = delSteps.length - 1; i >= 0; i--) this.step(delSteps[i])\n  return this\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\n\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\nimport {Transform} from \"./transform\"\nimport {insertPoint} from \"./structure\"\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nexport function replaceStep(doc, from, to = from, slice = Slice.empty) {\n  if (from == to && !slice.size) return null\n\n  let $from = doc.resolve(from), $to = doc.resolve(to)\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) return new ReplaceStep(from, to, slice)\n  return new Fitter($from, $to, slice).fit()\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to = from, slice = Slice.empty) {\n  let step = replaceStep(this.doc, from, to, slice)\n  if (step) this.step(step)\n  return this\n}\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new Slice(Fragment.from(content), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, Slice.empty)\n}\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n}\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n  constructor($from, $to, slice) {\n    this.$to = $to\n    this.$from = $from\n    this.unplaced = slice\n\n    this.frontier = []\n    for (let i = 0; i <= $from.depth; i++) {\n      let node = $from.node(i)\n      this.frontier.push({\n        type: node.type,\n        match: node.contentMatchAt($from.indexAfter(i))\n      })\n    }\n\n    this.placed = Fragment.empty\n    for (let i = $from.depth; i > 0; i--)\n      this.placed = Fragment.from($from.node(i).copy(this.placed))\n  }\n\n  get depth() { return this.frontier.length - 1 }\n\n  fit() {\n    // As long as there's unplaced content, try to place some of it.\n    // If that fails, either increase the open score of the unplaced\n    // slice, or drop nodes from it, and then try again.\n    while (this.unplaced.size) {\n      let fit = this.findFittable()\n      if (fit) this.placeNodes(fit)\n      else this.openMore() || this.dropNode()\n    }\n    // When there's inline content directly after the frontier _and_\n    // directly after `this.$to`, we must generate a `ReplaceAround`\n    // step that pulls that content into the node after the frontier.\n    // That means the fitting must be done to the end of the textblock\n    // node after `this.$to`, not `this.$to` itself.\n    let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth\n    let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline))\n    if (!$to) return null\n\n    // If closing to `$to` succeeded, create a step\n    let content = this.placed, openStart = $from.depth, openEnd = $to.depth\n    while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n      content = content.firstChild.content\n      openStart--; openEnd--\n    }\n    let slice = new Slice(content, openStart, openEnd)\n    if (moveInline > -1)\n      return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize)\n    if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n      return new ReplaceStep($from.pos, $to.pos, slice)\n  }\n\n  // Find a position on the start spine of `this.unplaced` that has\n  // content that can be moved somewhere on the frontier. Returns two\n  // depths, one for the slice and one for the frontier.\n  findFittable() {\n    // Only try wrapping nodes (pass 2) after finding a place without\n    // wrapping failed.\n    for (let pass = 1; pass <= 2; pass++) {\n      for (let sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n        let fragment, parent\n        if (sliceDepth) {\n          parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild\n          fragment = parent.content\n        } else {\n          fragment = this.unplaced.content\n        }\n        let first = fragment.firstChild\n        for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n          let {type, match} = this.frontier[frontierDepth], wrap, inject\n          // In pass 1, if the next node matches, or there is no next\n          // node but the parents look compatible, we've found a\n          // place.\n          if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                            : type.compatibleContent(parent.type)))\n            return {sliceDepth, frontierDepth, parent, inject}\n          // In pass 2, look for a set of wrapping nodes that make\n          // `first` fit here.\n          else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n            return {sliceDepth, frontierDepth, parent, wrap}\n          // Don't continue looking further up if the parent node\n          // would fit here.\n          if (parent && match.matchType(parent.type)) break\n        }\n      }\n    }\n  }\n\n  openMore() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (!inner.childCount || inner.firstChild.isLeaf) return false\n    this.unplaced = new Slice(content, openStart + 1,\n                              Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0))\n    return true\n  }\n\n  dropNode() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (inner.childCount <= 1 && openStart > 0) {\n      let openAtEnd = content.size - openStart <= openStart + inner.size\n      this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1,\n                                openAtEnd ? openStart - 1 : openEnd)\n    } else {\n      this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd)\n    }\n  }\n\n  // : ({sliceDepth: number, frontierDepth: number, parent: ?Node, wrap: ?[NodeType], inject: ?Fragment})\n  // Move content from the unplaced slice at `sliceDepth` to the\n  // frontier node at `frontierDepth`. Close that frontier node when\n  // applicable.\n  placeNodes({sliceDepth, frontierDepth, parent, inject, wrap}) {\n    while (this.depth > frontierDepth) this.closeFrontierNode()\n    if (wrap) for (let i = 0; i < wrap.length; i++) this.openFrontierNode(wrap[i])\n\n    let slice = this.unplaced, fragment = parent ? parent.content : slice.content\n    let openStart = slice.openStart - sliceDepth\n    let taken = 0, add = []\n    let {match, type} = this.frontier[frontierDepth]\n    if (inject) {\n      for (let i = 0; i < inject.childCount; i++) add.push(inject.child(i))\n      match = match.matchFragment(inject)\n    }\n    // Computes the amount of (end) open nodes at the end of the\n    // fragment. When 0, the parent is open, but no more. When\n    // negative, nothing is open.\n    let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd)\n    // Scan over the fragment, fitting as many child nodes as\n    // possible.\n    while (taken < fragment.childCount) {\n      let next = fragment.child(taken), matches = match.matchType(next.type)\n      if (!matches) break\n      taken++\n      if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n        match = matches\n        add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0,\n                                taken == fragment.childCount ? openEndCount : -1))\n      }\n    }\n    let toEnd = taken == fragment.childCount\n    if (!toEnd) openEndCount = -1\n\n    this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add))\n    this.frontier[frontierDepth].match = match\n\n    // If the parent types match, and the entire node was moved, and\n    // it's not open, close this frontier node right away.\n    if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n      this.closeFrontierNode()\n\n    // Add new frontier nodes for any open nodes at the end.\n    for (let i = 0, cur = fragment; i < openEndCount; i++) {\n      let node = cur.lastChild\n      this.frontier.push({type: node.type, match: node.contentMatchAt(node.childCount)})\n      cur = node.content\n    }\n\n    // Update `this.unplaced`. Drop the entire node from which we\n    // placed it we got to its end, otherwise just drop the placed\n    // nodes.\n    this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n      : sliceDepth == 0 ? Slice.empty\n      : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1),\n                  sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1)\n  }\n\n  mustMoveInline() {\n    if (!this.$to.parent.isTextblock || this.$to.end() == this.$to.pos) return -1\n    let top = this.frontier[this.depth], level\n    if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n        (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth)) return -1\n\n    let {depth} = this.$to, after = this.$to.after(depth)\n    while (depth > 1 && after == this.$to.end(--depth)) ++after\n    return after\n  }\n\n  findCloseLevel($to) {\n    scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n      let {match, type} = this.frontier[i]\n      let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1))\n      let fit = contentAfterFits($to, i, type, match, dropInner)\n      if (!fit) continue\n      for (let d = i - 1; d >= 0; d--) {\n        let {match, type} = this.frontier[d]\n        let matches = contentAfterFits($to, d, type, match, true)\n        if (!matches || matches.childCount) continue scan\n      }\n      return {depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to}\n    }\n  }\n\n  close($to) {\n    let close = this.findCloseLevel($to)\n    if (!close) return null\n\n    while (this.depth > close.depth) this.closeFrontierNode()\n    if (close.fit.childCount) this.placed = addToFragment(this.placed, close.depth, close.fit)\n    $to = close.move\n    for (let d = close.depth + 1; d <= $to.depth; d++) {\n      let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d))\n      this.openFrontierNode(node.type, node.attrs, add)\n    }\n    return $to\n  }\n\n  openFrontierNode(type, attrs, content) {\n    let top = this.frontier[this.depth]\n    top.match = top.match.matchType(type)\n    this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)))\n    this.frontier.push({type, match: type.contentMatch})\n  }\n\n  closeFrontierNode() {\n    let open = this.frontier.pop()\n    let add = open.match.fillBefore(Fragment.empty, true)\n    if (add.childCount) this.placed = addToFragment(this.placed, this.frontier.length, add)\n  }\n}\n\nfunction dropFromFragment(fragment, depth, count) {\n  if (depth == 0) return fragment.cutByIndex(count)\n  return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)))\n}\n\nfunction addToFragment(fragment, depth, content) {\n  if (depth == 0) return fragment.append(content)\n  return fragment.replaceChild(fragment.childCount - 1,\n                               fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)))\n}\n\nfunction contentAt(fragment, depth) {\n  for (let i = 0; i < depth; i++) fragment = fragment.firstChild.content\n  return fragment\n}\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  if (openStart <= 0) return node\n  let frag = node.content\n  if (openStart > 1)\n    frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0))\n  if (openStart > 0) {\n    frag = node.type.contentMatch.fillBefore(frag).append(frag)\n    if (openEnd <= 0) frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true))\n  }\n  return node.copy(frag)\n}\n\nfunction contentAfterFits($to, depth, type, match, open) {\n  let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth)\n  if (index == node.childCount && !type.compatibleContent(node.type)) return null\n  let fit = match.fillBefore(node.content, true, index)\n  return fit && !invalidMarks(type, node.content, index) ? fit : null\n}\n\nfunction invalidMarks(type, fragment, start) {\n  for (let i = start; i < fragment.childCount; i++)\n    if (!type.allowsMarks(fragment.child(i).marks)) return true\n  return false\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  if (!slice.size) return this.deleteRange(from, to)\n\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  if (fitsTrivially($from, $to, slice))\n    return this.step(new ReplaceStep(from, to, slice))\n\n  let targetDepths = coveredDepths($from, this.doc.resolve(to))\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) targetDepths.pop()\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  let preferredTarget = -($from.depth + 1)\n  targetDepths.unshift(preferredTarget)\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    let spec = $from.node(d).type.spec\n    if (spec.defining || spec.isolating) break\n    if (targetDepths.indexOf(d) > -1) preferredTarget = d\n    else if ($from.before(d) == pos) targetDepths.splice(1, 0, -d)\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  let preferredTargetIndex = targetDepths.indexOf(preferredTarget)\n\n  let leftNodes = [], preferredDepth = slice.openStart\n  for (let content = slice.content, i = 0;; i++) {\n    let node = content.firstChild\n    leftNodes.push(node)\n    if (i == slice.openStart) break\n    content = node.content\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    preferredDepth -= 1\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    preferredDepth -= 2\n\n  for (let j = slice.openStart; j >= 0; j--) {\n    let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1)\n    let insert = leftNodes[openDepth]\n    if (!insert) continue\n    for (let i = 0; i < targetDepths.length; i++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth }\n      let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1)\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        return this.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd))\n    }\n  }\n\n  let startSteps = this.steps.length\n  for (let i = targetDepths.length - 1; i >= 0; i--) {\n    this.replace(from, to, slice)\n    if (this.steps.length > startSteps) break\n    let depth = targetDepths[i]\n    if (depth < 0) continue\n    from = $from.before(depth); to = $to.after(depth)\n  }\n  return this\n}\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    let first = fragment.firstChild\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)))\n  }\n  if (depth > newOpen) {\n    let match = parent.contentMatchAt(0)\n    let start = match.fillBefore(fragment).append(fragment)\n    fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true))\n  }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    let point = insertPoint(this.doc, from, node.type)\n    if (point != null) from = to = point\n  }\n  return this.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  let covered = coveredDepths($from, $to)\n  for (let i = 0; i < covered.length; i++) {\n    let depth = covered[i], last = i == covered.length - 1\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      return this.delete($from.start(depth), $to.end(depth))\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      return this.delete($from.before(depth), $to.after(depth))\n  }\n  for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n      return this.delete($from.before(d), to)\n  }\n  return this.delete(from, to)\n}\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  let result = [], minDepth = Math.min($from.depth, $to.depth)\n  for (let d = minDepth; d >= 0; d--) {\n    let start = $from.start(d)\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) break\n    if (start == $to.start(d) ||\n        (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n         d && $to.start(d - 1) == start - 1))\n      result.push(d)\n  }\n  return result\n}\n","import {Mark} from \"./mark\"\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nexport class ResolvedPos {\n  constructor(pos, path, parentOffset) {\n    // :: number The position that was resolved.\n    this.pos = pos\n    this.path = path\n    // :: number\n    // The number of levels the parent node is from the root. If this\n    // position points directly into the root node, it is 0. If it\n    // points into a top-level paragraph, 1, and so on.\n    this.depth = path.length / 3 - 1\n    // :: number The offset this position has into its parent node.\n    this.parentOffset = parentOffset\n  }\n\n  resolveDepth(val) {\n    if (val == null) return this.depth\n    if (val < 0) return this.depth + val\n    return val\n  }\n\n  // :: Node\n  // The parent node that the position points into. Note that even if\n  // a position points into a text node, that node is not considered\n  // the parent—text nodes are ‘flat’ in this model, and have no content.\n  get parent() { return this.node(this.depth) }\n\n  // :: Node\n  // The root node in which the position was resolved.\n  get doc() { return this.node(0) }\n\n  // :: (?number) → Node\n  // The ancestor node at the given level. `p.node(p.depth)` is the\n  // same as `p.parent`.\n  node(depth) { return this.path[this.resolveDepth(depth) * 3] }\n\n  // :: (?number) → number\n  // The index into the ancestor at the given level. If this points at\n  // the 3rd node in the 2nd paragraph on the top level, for example,\n  // `p.index(0)` is 1 and `p.index(1)` is 2.\n  index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1] }\n\n  // :: (?number) → number\n  // The index pointing after this position into the ancestor at the\n  // given level.\n  indexAfter(depth) {\n    depth = this.resolveDepth(depth)\n    return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the start of the node at the given\n  // level.\n  start(depth) {\n    depth = this.resolveDepth(depth)\n    return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the end of the node at the given\n  // level.\n  end(depth) {\n    depth = this.resolveDepth(depth)\n    return this.start(depth) + this.node(depth).content.size\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly before the wrapping node at the\n  // given level, or, when `depth` is `this.depth + 1`, the original\n  // position.\n  before(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position before the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly after the wrapping node at the\n  // given level, or the original position when `depth` is `this.depth + 1`.\n  after(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position after the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n  }\n\n  // :: number\n  // When this position points into a text node, this returns the\n  // distance between the position and the start of the text node.\n  // Will be zero for positions that point between nodes.\n  get textOffset() { return this.pos - this.path[this.path.length - 1] }\n\n  // :: ?Node\n  // Get the node directly after the position, if any. If the position\n  // points into a text node, only the part of that node after the\n  // position is returned.\n  get nodeAfter() {\n    let parent = this.parent, index = this.index(this.depth)\n    if (index == parent.childCount) return null\n    let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index)\n    return dOff ? parent.child(index).cut(dOff) : child\n  }\n\n  // :: ?Node\n  // Get the node directly before the position, if any. If the\n  // position points into a text node, only the part of that node\n  // before the position is returned.\n  get nodeBefore() {\n    let index = this.index(this.depth)\n    let dOff = this.pos - this.path[this.path.length - 1]\n    if (dOff) return this.parent.child(index).cut(0, dOff)\n    return index == 0 ? null : this.parent.child(index - 1)\n  }\n\n  // :: (number, ?number) → number\n  // Get the position at the given index in the parent node at the\n  // given depth (which defaults to `this.depth`).\n  posAtIndex(index, depth) {\n    depth = this.resolveDepth(depth)\n    let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n    for (let i = 0; i < index; i++) pos += node.child(i).nodeSize\n    return pos\n  }\n\n  // :: () → [Mark]\n  // Get the marks at this position, factoring in the surrounding\n  // marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n  // position is at the start of a non-empty node, the marks of the\n  // node after it (if any) are returned.\n  marks() {\n    let parent = this.parent, index = this.index()\n\n    // In an empty parent, return the empty array\n    if (parent.content.size == 0) return Mark.none\n\n    // When inside a text node, just return the text node's marks\n    if (this.textOffset) return parent.child(index).marks\n\n    let main = parent.maybeChild(index - 1), other = parent.maybeChild(index)\n    // If the `after` flag is true of there is no node before, make\n    // the node after this position the main reference.\n    if (!main) { let tmp = main; main = other; other = tmp }\n\n    // Use all marks in the main node, except those that have\n    // `inclusive` set to false and are not present in the other node.\n    let marks = main.marks\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n        marks = marks[i--].removeFromSet(marks)\n\n    return marks\n  }\n\n  // :: (ResolvedPos) → ?[Mark]\n  // Get the marks after the current position, if any, except those\n  // that are non-inclusive and not present at position `$end`. This\n  // is mostly useful for getting the set of marks to preserve after a\n  // deletion. Will return `null` if this position is at the end of\n  // its parent node or its parent node isn't a textblock (in which\n  // case no marks should be preserved).\n  marksAcross($end) {\n    let after = this.parent.maybeChild(this.index())\n    if (!after || !after.isInline) return null\n\n    let marks = after.marks, next = $end.parent.maybeChild($end.index())\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n        marks = marks[i--].removeFromSet(marks)\n    return marks\n  }\n\n  // :: (number) → number\n  // The depth up to which this position and the given (non-resolved)\n  // position share the same parent nodes.\n  sharedDepth(pos) {\n    for (let depth = this.depth; depth > 0; depth--)\n      if (this.start(depth) <= pos && this.end(depth) >= pos) return depth\n    return 0\n  }\n\n  // :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n  // Returns a range based on the place where this position and the\n  // given position diverge around block content. If both point into\n  // the same textblock, for example, a range around that textblock\n  // will be returned. If they point into different blocks, the range\n  // around those blocks in their shared ancestor is returned. You can\n  // pass in an optional predicate that will be called with a parent\n  // node to see if a range into that parent is acceptable.\n  blockRange(other = this, pred) {\n    if (other.pos < this.pos) return other.blockRange(this)\n    for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n      if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n        return new NodeRange(this, other, d)\n  }\n\n  // :: (ResolvedPos) → bool\n  // Query whether the given position shares the same parent node.\n  sameParent(other) {\n    return this.pos - this.parentOffset == other.pos - other.parentOffset\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the greater of this and the given position.\n  max(other) {\n    return other.pos > this.pos ? other : this\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the smaller of this and the given position.\n  min(other) {\n    return other.pos < this.pos ? other : this\n  }\n\n  toString() {\n    let str = \"\"\n    for (let i = 1; i <= this.depth; i++)\n      str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1)\n    return str + \":\" + this.parentOffset\n  }\n\n  static resolve(doc, pos) {\n    if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\")\n    let path = []\n    let start = 0, parentOffset = pos\n    for (let node = doc;;) {\n      let {index, offset} = node.content.findIndex(parentOffset)\n      let rem = parentOffset - offset\n      path.push(node, index, start + offset)\n      if (!rem) break\n      node = node.child(index)\n      if (node.isText) break\n      parentOffset = rem - 1\n      start += offset + 1\n    }\n    return new ResolvedPos(pos, path, parentOffset)\n  }\n\n  static resolveCached(doc, pos) {\n    for (let i = 0; i < resolveCache.length; i++) {\n      let cached = resolveCache[i]\n      if (cached.pos == pos && cached.doc == doc) return cached\n    }\n    let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos)\n    resolveCachePos = (resolveCachePos + 1) % resolveCacheSize\n    return result\n  }\n}\n\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nexport class NodeRange {\n  // :: (ResolvedPos, ResolvedPos, number)\n  // Construct a node range. `$from` and `$to` should point into the\n  // same node until at least the given `depth`, since a node range\n  // denotes an adjacent set of nodes in a single parent node.\n  constructor($from, $to, depth) {\n    // :: ResolvedPos A resolved position along the start of the\n    // content. May have a `depth` greater than this object's `depth`\n    // property, since these are the positions that were used to\n    // compute the range, not re-resolved positions directly at its\n    // boundaries.\n    this.$from = $from\n    // :: ResolvedPos A position along the end of the content. See\n    // caveat for [`$from`](#model.NodeRange.$from).\n    this.$to = $to\n    // :: number The depth of the node that this range points into.\n    this.depth = depth\n  }\n\n  // :: number The position at the start of the range.\n  get start() { return this.$from.before(this.depth + 1) }\n  // :: number The position at the end of the range.\n  get end() { return this.$to.after(this.depth + 1) }\n\n  // :: Node The parent node that the range points into.\n  get parent() { return this.$from.node(this.depth) }\n  // :: number The start index of the range in the parent node.\n  get startIndex() { return this.$from.index(this.depth) }\n  // :: number The end index of the range in the parent node.\n  get endIndex() { return this.$to.indexAfter(this.depth) }\n}\n","import {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {Slice, replace} from \"./replace\"\nimport {ResolvedPos} from \"./resolvedpos\"\nimport {compareDeep} from \"./comparedeep\"\n\nconst emptyAttrs = Object.create(null)\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nexport class Node {\n  constructor(type, attrs, content, marks) {\n    // :: NodeType\n    // The type of node that this is.\n    this.type = type\n\n    // :: Object\n    // An object mapping attribute names to values. The kind of\n    // attributes allowed and required are\n    // [determined](#model.NodeSpec.attrs) by the node type.\n    this.attrs = attrs\n\n    // :: Fragment\n    // A container holding the node's children.\n    this.content = content || Fragment.empty\n\n    // :: [Mark]\n    // The marks (things like whether it is emphasized or part of a\n    // link) applied to this node.\n    this.marks = marks || Mark.none\n  }\n\n  // text:: ?string\n  // For text nodes, this contains the node's text content.\n\n  // :: number\n  // The size of this node, as defined by the integer-based [indexing\n  // scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n  // amount of characters. For other leaf nodes, it is one. For\n  // non-leaf nodes, it is the size of the content plus two (the start\n  // and end token).\n  get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size }\n\n  // :: number\n  // The number of children that the node has.\n  get childCount() { return this.content.childCount }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raises an error when the\n  // index is out of range.\n  child(index) { return this.content.child(index) }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) { return this.content.maybeChild(index) }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) { this.content.forEach(f) }\n\n  // :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes recursively between\n  // the given two positions that are relative to start of this node's\n  // content. The callback is invoked with the node, its\n  // parent-relative position, its parent node, and its child index.\n  // When the callback returns false for a given node, that node's\n  // children will not be recursed over. The last parameter can be\n  // used to specify a starting position to count from.\n  nodesBetween(from, to, f, startPos = 0) {\n    this.content.nodesBetween(from, to, f, startPos, this)\n  }\n\n  // :: ((node: Node, pos: number, parent: Node, index: number) → ?bool)\n  // Call the given callback for every descendant node. Doesn't\n  // descend into a node when the callback returns `false`.\n  descendants(f) {\n    this.nodesBetween(0, this.content.size, f)\n  }\n\n  // :: string\n  // Concatenates all the text nodes found in this fragment and its\n  // children.\n  get textContent() { return this.textBetween(0, this.content.size, \"\") }\n\n  // :: (number, number, ?string, ?union<string, ?(leafNode: Node) -> string>) → string\n  // Get all text between positions `from` and `to`. When\n  // `blockSeparator` is given, it will be inserted to separate text\n  // from different block nodes. When `leafText` is given, it'll be\n  // inserted for every non-text leaf node encountered.\n  textBetween(from, to, blockSeparator, leafText) {\n    return this.content.textBetween(from, to, blockSeparator, leafText)\n  }\n\n  // :: ?Node\n  // Returns this node's first child, or `null` if there are no\n  // children.\n  get firstChild() { return this.content.firstChild }\n\n  // :: ?Node\n  // Returns this node's last child, or `null` if there are no\n  // children.\n  get lastChild() { return this.content.lastChild }\n\n  // :: (Node) → bool\n  // Test whether two nodes represent the same piece of document.\n  eq(other) {\n    return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n  }\n\n  // :: (Node) → bool\n  // Compare the markup (type, attributes, and marks) of this node to\n  // those of another. Returns `true` if both have the same markup.\n  sameMarkup(other) {\n    return this.hasMarkup(other.type, other.attrs, other.marks)\n  }\n\n  // :: (NodeType, ?Object, ?[Mark]) → bool\n  // Check whether this node's markup correspond to the given type,\n  // attributes, and marks.\n  hasMarkup(type, attrs, marks) {\n    return this.type == type &&\n      compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n      Mark.sameSet(this.marks, marks || Mark.none)\n  }\n\n  // :: (?Fragment) → Node\n  // Create a new node with the same markup as this node, containing\n  // the given content (or empty, if no content is given).\n  copy(content = null) {\n    if (content == this.content) return this\n    return new this.constructor(this.type, this.attrs, content, this.marks)\n  }\n\n  // :: ([Mark]) → Node\n  // Create a copy of this node, with the given set of marks instead\n  // of the node's own marks.\n  mark(marks) {\n    return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n  }\n\n  // :: (number, ?number) → Node\n  // Create a copy of this node with only the content between the\n  // given positions. If `to` is not given, it defaults to the end of\n  // the node.\n  cut(from, to) {\n    if (from == 0 && to == this.content.size) return this\n    return this.copy(this.content.cut(from, to))\n  }\n\n  // :: (number, ?number) → Slice\n  // Cut out the part of the document between the given positions, and\n  // return it as a `Slice` object.\n  slice(from, to = this.content.size, includeParents = false) {\n    if (from == to) return Slice.empty\n\n    let $from = this.resolve(from), $to = this.resolve(to)\n    let depth = includeParents ? 0 : $from.sharedDepth(to)\n    let start = $from.start(depth), node = $from.node(depth)\n    let content = node.content.cut($from.pos - start, $to.pos - start)\n    return new Slice(content, $from.depth - depth, $to.depth - depth)\n  }\n\n  // :: (number, number, Slice) → Node\n  // Replace the part of the document between the given positions with\n  // the given slice. The slice must 'fit', meaning its open sides\n  // must be able to connect to the surrounding content, and its\n  // content nodes must be valid children for the node they are placed\n  // into. If any of this is violated, an error of type\n  // [`ReplaceError`](#model.ReplaceError) is thrown.\n  replace(from, to, slice) {\n    return replace(this.resolve(from), this.resolve(to), slice)\n  }\n\n  // :: (number) → ?Node\n  // Find the node directly after the given position.\n  nodeAt(pos) {\n    for (let node = this;;) {\n      let {index, offset} = node.content.findIndex(pos)\n      node = node.maybeChild(index)\n      if (!node) return null\n      if (offset == pos || node.isText) return node\n      pos -= offset + 1\n    }\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node after the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childAfter(pos) {\n    let {index, offset} = this.content.findIndex(pos)\n    return {node: this.content.maybeChild(index), index, offset}\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node before the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childBefore(pos) {\n    if (pos == 0) return {node: null, index: 0, offset: 0}\n    let {index, offset} = this.content.findIndex(pos)\n    if (offset < pos) return {node: this.content.child(index), index, offset}\n    let node = this.content.child(index - 1)\n    return {node, index: index - 1, offset: offset - node.nodeSize}\n  }\n\n  // :: (number) → ResolvedPos\n  // Resolve the given position in the document, returning an\n  // [object](#model.ResolvedPos) with information about its context.\n  resolve(pos) { return ResolvedPos.resolveCached(this, pos) }\n\n  resolveNoCache(pos) { return ResolvedPos.resolve(this, pos) }\n\n  // :: (number, number, union<Mark, MarkType>) → bool\n  // Test whether a given mark or mark type occurs in this document\n  // between the two given positions.\n  rangeHasMark(from, to, type) {\n    let found = false\n    if (to > from) this.nodesBetween(from, to, node => {\n      if (type.isInSet(node.marks)) found = true\n      return !found\n    })\n    return found\n  }\n\n  // :: bool\n  // True when this is a block (non-inline node)\n  get isBlock() { return this.type.isBlock }\n\n  // :: bool\n  // True when this is a textblock node, a block node with inline\n  // content.\n  get isTextblock() { return this.type.isTextblock }\n\n  // :: bool\n  // True when this node allows inline content.\n  get inlineContent() { return this.type.inlineContent }\n\n  // :: bool\n  // True when this is an inline node (a text node or a node that can\n  // appear among text).\n  get isInline() { return this.type.isInline }\n\n  // :: bool\n  // True when this is a text node.\n  get isText() { return this.type.isText }\n\n  // :: bool\n  // True when this is a leaf node.\n  get isLeaf() { return this.type.isLeaf }\n\n  // :: bool\n  // True when this is an atom, i.e. when it does not have directly\n  // editable content. This is usually the same as `isLeaf`, but can\n  // be configured with the [`atom` property](#model.NodeSpec.atom) on\n  // a node's spec (typically used when the node is displayed as an\n  // uneditable [node view](#view.NodeView)).\n  get isAtom() { return this.type.isAtom }\n\n  // :: () → string\n  // Return a string representation of this node for debugging\n  // purposes.\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    let name = this.type.name\n    if (this.content.size)\n      name += \"(\" + this.content.toStringInner() + \")\"\n    return wrapMarks(this.marks, name)\n  }\n\n  // :: (number) → ContentMatch\n  // Get the content match in this node at the given index.\n  contentMatchAt(index) {\n    let match = this.type.contentMatch.matchFragment(this.content, 0, index)\n    if (!match) throw new Error(\"Called contentMatchAt on a node with invalid content\")\n    return match\n  }\n\n  // :: (number, number, ?Fragment, ?number, ?number) → bool\n  // Test whether replacing the range between `from` and `to` (by\n  // child index) with the given replacement fragment (which defaults\n  // to the empty fragment) would leave the node's content valid. You\n  // can optionally pass `start` and `end` indices into the\n  // replacement fragment.\n  canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n    let one = this.contentMatchAt(from).matchFragment(replacement, start, end)\n    let two = one && one.matchFragment(this.content, to)\n    if (!two || !two.validEnd) return false\n    for (let i = start; i < end; i++) if (!this.type.allowsMarks(replacement.child(i).marks)) return false\n    return true\n  }\n\n  // :: (number, number, NodeType, ?[Mark]) → bool\n  // Test whether replacing the range `from` to `to` (by index) with a\n  // node of the given type would leave the node's content valid.\n  canReplaceWith(from, to, type, marks) {\n    if (marks && !this.type.allowsMarks(marks)) return false\n    let start = this.contentMatchAt(from).matchType(type)\n    let end = start && start.matchFragment(this.content, to)\n    return end ? end.validEnd : false\n  }\n\n  // :: (Node) → bool\n  // Test whether the given node's content could be appended to this\n  // node. If that node is empty, this will only return true if there\n  // is at least one node type that can appear in both nodes (to avoid\n  // merging completely incompatible nodes).\n  canAppend(other) {\n    if (other.content.size) return this.canReplace(this.childCount, this.childCount, other.content)\n    else return this.type.compatibleContent(other.type)\n  }\n\n  // :: ()\n  // Check whether this node and its descendants conform to the\n  // schema, and raise error when they do not.\n  check() {\n    if (!this.type.validContent(this.content))\n      throw new RangeError(`Invalid content for node ${this.type.name}: ${this.content.toString().slice(0, 50)}`)\n    let copy = Mark.none\n    for (let i = 0; i < this.marks.length; i++) copy = this.marks[i].addToSet(copy)\n    if (!Mark.sameSet(copy, this.marks))\n      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`)\n    this.content.forEach(node => node.check())\n  }\n\n  // :: () → Object\n  // Return a JSON-serializeable representation of this node.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    if (this.content.size)\n      obj.content = this.content.toJSON()\n    if (this.marks.length)\n      obj.marks = this.marks.map(n => n.toJSON())\n    return obj\n  }\n\n  // :: (Schema, Object) → Node\n  // Deserialize a node from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Node.fromJSON\")\n    let marks = null\n    if (json.marks) {\n      if (!Array.isArray(json.marks)) throw new RangeError(\"Invalid mark data for Node.fromJSON\")\n      marks = json.marks.map(schema.markFromJSON)\n    }\n    if (json.type == \"text\") {\n      if (typeof json.text != \"string\") throw new RangeError(\"Invalid text node in JSON\")\n      return schema.text(json.text, marks)\n    }\n    let content = Fragment.fromJSON(schema, json.content)\n    return schema.nodeType(json.type).create(json.attrs, content, marks)\n  }\n}\n\nexport class TextNode extends Node {\n  constructor(type, attrs, content, marks) {\n    super(type, attrs, null, marks)\n\n    if (!content) throw new RangeError(\"Empty text nodes are not allowed\")\n\n    this.text = content\n  }\n\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  }\n\n  get textContent() { return this.text }\n\n  textBetween(from, to) { return this.text.slice(from, to) }\n\n  get nodeSize() { return this.text.length }\n\n  mark(marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  }\n\n  withText(text) {\n    if (text == this.text) return this\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  }\n\n  cut(from = 0, to = this.text.length) {\n    if (from == 0 && to == this.text.length) return this\n    return this.withText(this.text.slice(from, to))\n  }\n\n  eq(other) {\n    return this.sameMarkup(other) && this.text == other.text\n  }\n\n  toJSON() {\n    let base = super.toJSON()\n    base.text = this.text\n    return base\n  }\n}\n\nfunction wrapMarks(marks, str) {\n  for (let i = marks.length - 1; i >= 0; i--)\n    str = marks[i].type.name + \"(\" + str + \")\"\n  return str\n}\n","import {Fragment} from \"./fragment\"\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nexport class ContentMatch {\n  constructor(validEnd) {\n    // :: bool\n    // True when this match state represents a valid end of the node.\n    this.validEnd = validEnd\n    this.next = []\n    this.wrapCache = []\n  }\n\n  static parse(string, nodeTypes) {\n    let stream = new TokenStream(string, nodeTypes)\n    if (stream.next == null) return ContentMatch.empty\n    let expr = parseExpr(stream)\n    if (stream.next) stream.err(\"Unexpected trailing text\")\n    let match = dfa(nfa(expr))\n    checkForDeadEnds(match, stream)\n    return match\n  }\n\n  // :: (NodeType) → ?ContentMatch\n  // Match a node type, returning a match after that node if\n  // successful.\n  matchType(type) {\n    for (let i = 0; i < this.next.length; i += 2)\n      if (this.next[i] == type) return this.next[i + 1]\n    return null\n  }\n\n  // :: (Fragment, ?number, ?number) → ?ContentMatch\n  // Try to match a fragment. Returns the resulting match when\n  // successful.\n  matchFragment(frag, start = 0, end = frag.childCount) {\n    let cur = this\n    for (let i = start; cur && i < end; i++)\n      cur = cur.matchType(frag.child(i).type)\n    return cur\n  }\n\n  get inlineContent() {\n    let first = this.next[0]\n    return first ? first.isInline : false\n  }\n\n  // :: ?NodeType\n  // Get the first matching node type at this match position that can\n  // be generated.\n  get defaultType() {\n    for (let i = 0; i < this.next.length; i += 2) {\n      let type = this.next[i]\n      if (!(type.isText || type.hasRequiredAttrs())) return type\n    }\n  }\n\n  compatible(other) {\n    for (let i = 0; i < this.next.length; i += 2)\n      for (let j = 0; j < other.next.length; j += 2)\n        if (this.next[i] == other.next[j]) return true\n    return false\n  }\n\n  // :: (Fragment, bool, ?number) → ?Fragment\n  // Try to match the given fragment, and if that fails, see if it can\n  // be made to match by inserting nodes in front of it. When\n  // successful, return a fragment of inserted nodes (which may be\n  // empty if nothing had to be inserted). When `toEnd` is true, only\n  // return a fragment if the resulting match goes to the end of the\n  // content expression.\n  fillBefore(after, toEnd = false, startIndex = 0) {\n    let seen = [this]\n    function search(match, types) {\n      let finished = match.matchFragment(after, startIndex)\n      if (finished && (!toEnd || finished.validEnd))\n        return Fragment.from(types.map(tp => tp.createAndFill()))\n\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i], next = match.next[i + 1]\n        if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n          seen.push(next)\n          let found = search(next, types.concat(type))\n          if (found) return found\n        }\n      }\n    }\n\n    return search(this, [])\n  }\n\n  // :: (NodeType) → ?[NodeType]\n  // Find a set of wrapping node types that would allow a node of the\n  // given type to appear at this position. The result may be empty\n  // (when it fits directly) and will be null when no such wrapping\n  // exists.\n  findWrapping(target) {\n    for (let i = 0; i < this.wrapCache.length; i += 2)\n      if (this.wrapCache[i] == target) return this.wrapCache[i + 1]\n    let computed = this.computeWrapping(target)\n    this.wrapCache.push(target, computed)\n    return computed\n  }\n\n  computeWrapping(target) {\n    let seen = Object.create(null), active = [{match: this, type: null, via: null}]\n    while (active.length) {\n      let current = active.shift(), match = current.match\n      if (match.matchType(target)) {\n        let result = []\n        for (let obj = current; obj.type; obj = obj.via)\n          result.push(obj.type)\n        return result.reverse()\n      }\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i]\n        if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n          active.push({match: type.contentMatch, type, via: current})\n          seen[type.name] = true\n        }\n      }\n    }\n  }\n\n  // :: number\n  // The number of outgoing edges this node has in the finite\n  // automaton that describes the content expression.\n  get edgeCount() {\n    return this.next.length >> 1\n  }\n\n  // :: (number) → {type: NodeType, next: ContentMatch}\n  // Get the _n_​th outgoing edge from this node in the finite\n  // automaton that describes the content expression.\n  edge(n) {\n    let i = n << 1\n    if (i >= this.next.length) throw new RangeError(`There's no ${n}th edge in this content match`)\n    return {type: this.next[i], next: this.next[i + 1]}\n  }\n\n  toString() {\n    let seen = []\n    function scan(m) {\n      seen.push(m)\n      for (let i = 1; i < m.next.length; i += 2)\n        if (seen.indexOf(m.next[i]) == -1) scan(m.next[i])\n    }\n    scan(this)\n    return seen.map((m, i) => {\n      let out = i + (m.validEnd ? \"*\" : \" \") + \" \"\n      for (let i = 0; i < m.next.length; i += 2)\n        out += (i ? \", \" : \"\") + m.next[i].name + \"->\" + seen.indexOf(m.next[i + 1])\n      return out\n    }).join(\"\\n\")\n  }\n}\n\nContentMatch.empty = new ContentMatch(true)\n\nclass TokenStream {\n  constructor(string, nodeTypes) {\n    this.string = string\n    this.nodeTypes = nodeTypes\n    this.inline = null\n    this.pos = 0\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/)\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop()\n    if (this.tokens[0] == \"\") this.tokens.shift()\n  }\n\n  get next() { return this.tokens[this.pos] }\n\n  eat(tok) { return this.next == tok && (this.pos++ || true) }\n\n  err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") }\n}\n\nfunction parseExpr(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSeq(stream)) }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n}\n\nfunction parseExprSeq(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSubscript(stream)) }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  let expr = parseExprAtom(stream)\n  for (;;) {\n    if (stream.eat(\"+\"))\n      expr = {type: \"plus\", expr}\n    else if (stream.eat(\"*\"))\n      expr = {type: \"star\", expr}\n    else if (stream.eat(\"?\"))\n      expr = {type: \"opt\", expr}\n    else if (stream.eat(\"{\"))\n      expr = parseExprRange(stream, expr)\n    else break\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\")\n  let result = Number(stream.next)\n  stream.pos++\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  let min = parseNum(stream), max = min\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream)\n    else max = -1\n  }\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\")\n  return {type: \"range\", min, max, expr}\n}\n\nfunction resolveName(stream, name) {\n  let types = stream.nodeTypes, type = types[name]\n  if (type) return [type]\n  let result = []\n  for (let typeName in types) {\n    let type = types[typeName]\n    if (type.groups.indexOf(name) > -1) result.push(type)\n  }\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\")\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    let expr = parseExpr(stream)\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\")\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    let exprs = resolveName(stream, stream.next).map(type => {\n      if (stream.inline == null) stream.inline = type.isInline\n      else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\")\n      return {type: \"name\", value: type}\n    })\n    stream.pos++\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\")\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  let nfa = [[]]\n  connect(compile(expr, 0), node())\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    let edge = {term, to}\n    nfa[from].push(edge)\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(edge => edge.to = to) }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), [])\n    } else if (expr.type == \"seq\") {\n      for (let i = 0;; i++) {\n        let next = compile(expr.exprs[i], from)\n        if (i == expr.exprs.length - 1) return next\n        connect(next, from = node())\n      }\n    } else if (expr.type == \"star\") {\n      let loop = node()\n      edge(from, loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      let loop = node()\n      connect(compile(expr.expr, from), loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      let cur = from\n      for (let i = 0; i < expr.min; i++) {\n        let next = node()\n        connect(compile(expr.expr, cur), next)\n        cur = next\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur)\n      } else {\n        for (let i = expr.min; i < expr.max; i++) {\n          let next = node()\n          edge(cur, next)\n          connect(compile(expr.expr, cur), next)\n          cur = next\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  let result = []\n  scan(node)\n  return result.sort(cmp)\n\n  function scan(node) {\n    let edges = nfa[node]\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to)\n    result.push(node)\n    for (let i = 0; i < edges.length; i++) {\n      let {term, to} = edges[i]\n      if (!term && result.indexOf(to) == -1) scan(to)\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  let labeled = Object.create(null)\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    let out = []\n    states.forEach(node => {\n      nfa[node].forEach(({term, to}) => {\n        if (!term) return\n        let known = out.indexOf(term), set = known > -1 && out[known + 1]\n        nullFrom(nfa, to).forEach(node => {\n          if (!set) out.push(term, set = [])\n          if (set.indexOf(node) == -1) set.push(node)\n        })\n      })\n    })\n    let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1)\n    for (let i = 0; i < out.length; i += 2) {\n      let states = out[i + 1].sort(cmp)\n      state.next.push(out[i], labeled[states.join(\",\")] || explore(states))\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (let i = 0, work = [match]; i < work.length; i++) {\n    let state = work[i], dead = !state.validEnd, nodes = []\n    for (let j = 0; j < state.next.length; j += 2) {\n      let node = state.next[j], next = state.next[j + 1]\n      nodes.push(node.name)\n      if (dead && !(node.isText || node.hasRequiredAttrs())) dead = false\n      if (work.indexOf(next) == -1) work.push(next)\n    }\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\")\n  }\n}\n","import OrderedMap from \"orderedmap\"\n\nimport {Node, TextNode} from \"./node\"\nimport {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {ContentMatch} from \"./content\"\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  let defaults = Object.create(null)\n  for (let attrName in attrs) {\n    let attr = attrs[attrName]\n    if (!attr.hasDefault) return null\n    defaults[attrName] = attr.default\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  let built = Object.create(null)\n  for (let name in attrs) {\n    let given = value && value[name]\n    if (given === undefined) {\n      let attr = attrs[name]\n      if (attr.hasDefault) given = attr.default\n      else throw new RangeError(\"No value supplied for attribute \" + name)\n    }\n    built[name] = given\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  let result = Object.create(null)\n  if (attrs) for (let name in attrs) result[name] = new Attribute(attrs[name])\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nexport class NodeType {\n  constructor(name, schema, spec) {\n    // :: string\n    // The name the node type has in this schema.\n    this.name = name\n\n    // :: Schema\n    // A link back to the `Schema` the node type belongs to.\n    this.schema = schema\n\n    // :: NodeSpec\n    // The spec that this type is based on\n    this.spec = spec\n\n    this.groups = spec.group ? spec.group.split(\" \") : []\n    this.attrs = initAttrs(spec.attrs)\n\n    this.defaultAttrs = defaultAttrs(this.attrs)\n\n    // :: ContentMatch\n    // The starting match of the node type's content expression.\n    this.contentMatch = null\n\n    // : ?[MarkType]\n    // The set of marks allowed in this node. `null` means all marks\n    // are allowed.\n    this.markSet = null\n\n    // :: bool\n    // True if this node type has inline content.\n    this.inlineContent = null\n\n    // :: bool\n    // True if this is a block type\n    this.isBlock = !(spec.inline || name == \"text\")\n\n    // :: bool\n    // True if this is the text node type.\n    this.isText = name == \"text\"\n  }\n\n  // :: bool\n  // True if this is an inline type.\n  get isInline() { return !this.isBlock }\n\n  // :: bool\n  // True if this is a textblock type, a block that contains inline\n  // content.\n  get isTextblock() { return this.isBlock && this.inlineContent }\n\n  // :: bool\n  // True for node types that allow no content.\n  get isLeaf() { return this.contentMatch == ContentMatch.empty }\n\n  // :: bool\n  // True when this node is an atom, i.e. when it does not have\n  // directly editable content.\n  get isAtom() { return this.isLeaf || this.spec.atom }\n\n  // :: union<\"pre\", \"normal\">\n  // The node type's [whitespace](#view.NodeSpec.whitespace) option.\n  get whitespace() { return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\") }\n\n  // :: () → bool\n  // Tells you whether this node type has any required attributes.\n  hasRequiredAttrs() {\n    for (let n in this.attrs) if (this.attrs[n].isRequired) return true\n    return false\n  }\n\n  compatibleContent(other) {\n    return this == other || this.contentMatch.compatible(other.contentMatch)\n  }\n\n  computeAttrs(attrs) {\n    if (!attrs && this.defaultAttrs) return this.defaultAttrs\n    else return computeAttrs(this.attrs, attrs)\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a `Node` of this type. The given attributes are\n  // checked and defaulted (you can pass `null` to use the type's\n  // defaults entirely, if no required attributes exist). `content`\n  // may be a `Fragment`, a node, an array of nodes, or\n  // `null`. Similarly `marks` may be `null` to default to the empty\n  // set of marks.\n  create(attrs, content, marks) {\n    if (this.isText) throw new Error(\"NodeType.create can't construct text nodes\")\n    return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Like [`create`](#model.NodeType.create), but check the given content\n  // against the node type's content restrictions, and throw an error\n  // if it doesn't match.\n  createChecked(attrs, content, marks) {\n    content = Fragment.from(content)\n    if (!this.validContent(content))\n      throw new RangeError(\"Invalid content for node \" + this.name)\n    return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n  // Like [`create`](#model.NodeType.create), but see if it is necessary to\n  // add nodes to the start or end of the given fragment to make it\n  // fit the node. If no fitting wrapping can be found, return null.\n  // Note that, due to the fact that required nodes can always be\n  // created, this will always succeed if you pass null or\n  // `Fragment.empty` as content.\n  createAndFill(attrs, content, marks) {\n    attrs = this.computeAttrs(attrs)\n    content = Fragment.from(content)\n    if (content.size) {\n      let before = this.contentMatch.fillBefore(content)\n      if (!before) return null\n      content = before.append(content)\n    }\n    let after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true)\n    if (!after) return null\n    return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n  }\n\n  // :: (Fragment) → bool\n  // Returns true if the given fragment is valid content for this node\n  // type with the given attributes.\n  validContent(content) {\n    let result = this.contentMatch.matchFragment(content)\n    if (!result || !result.validEnd) return false\n    for (let i = 0; i < content.childCount; i++)\n      if (!this.allowsMarks(content.child(i).marks)) return false\n    return true\n  }\n\n  // :: (MarkType) → bool\n  // Check whether the given mark type is allowed in this node.\n  allowsMarkType(markType) {\n    return this.markSet == null || this.markSet.indexOf(markType) > -1\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether the given set of marks are allowed in this node.\n  allowsMarks(marks) {\n    if (this.markSet == null) return true\n    for (let i = 0; i < marks.length; i++) if (!this.allowsMarkType(marks[i].type)) return false\n    return true\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Removes the marks that are not allowed in this node from the given set.\n  allowedMarks(marks) {\n    if (this.markSet == null) return marks\n    let copy\n    for (let i = 0; i < marks.length; i++) {\n      if (!this.allowsMarkType(marks[i].type)) {\n        if (!copy) copy = marks.slice(0, i)\n      } else if (copy) {\n        copy.push(marks[i])\n      }\n    }\n    return !copy ? marks : copy.length ? copy : Mark.empty\n  }\n\n  static compile(nodes, schema) {\n    let result = Object.create(null)\n    nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec))\n\n    let topType = schema.spec.topNode || \"doc\"\n    if (!result[topType]) throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\")\n    if (!result.text) throw new RangeError(\"Every schema needs a 'text' type\")\n    for (let _ in result.text.attrs) throw new RangeError(\"The text node type should not have attributes\")\n\n    return result\n  }\n}\n\n// Attribute descriptors\n\nclass Attribute {\n  constructor(options) {\n    this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\")\n    this.default = options.default\n  }\n\n  get isRequired() {\n    return !this.hasDefault\n  }\n}\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nexport class MarkType {\n  constructor(name, rank, schema, spec) {\n    // :: string\n    // The name of the mark type.\n    this.name = name\n\n    // :: Schema\n    // The schema that this mark type instance is part of.\n    this.schema = schema\n\n    // :: MarkSpec\n    // The spec on which the type is based.\n    this.spec = spec\n\n    this.attrs = initAttrs(spec.attrs)\n\n    this.rank = rank\n    this.excluded = null\n    let defaults = defaultAttrs(this.attrs)\n    this.instance = defaults && new Mark(this, defaults)\n  }\n\n  // :: (?Object) → Mark\n  // Create a mark of this type. `attrs` may be `null` or an object\n  // containing only some of the mark's attributes. The others, if\n  // they have defaults, will be added.\n  create(attrs) {\n    if (!attrs && this.instance) return this.instance\n    return new Mark(this, computeAttrs(this.attrs, attrs))\n  }\n\n  static compile(marks, schema) {\n    let result = Object.create(null), rank = 0\n    marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec))\n    return result\n  }\n\n  // :: ([Mark]) → [Mark]\n  // When there is a mark of this type in the given set, a new set\n  // without it is returned. Otherwise, the input set is returned.\n  removeFromSet(set) {\n    for (var i = 0; i < set.length; i++) if (set[i].type == this) {\n      set = set.slice(0, i).concat(set.slice(i + 1))\n      i--\n    }\n    return set\n  }\n\n  // :: ([Mark]) → ?Mark\n  // Tests whether there is a mark of this type in the given set.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (set[i].type == this) return set[i]\n  }\n\n  // :: (MarkType) → bool\n  // Queries whether a given mark type is\n  // [excluded](#model.MarkSpec.excludes) by this one.\n  excludes(other) {\n    return this.excluded.indexOf(other) > -1\n  }\n}\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   whitespace:: ?union<\"pre\", \"normal\">\n//   Controls way whitespace in this a node is parsed. The default is\n//   `\"normal\"`, which causes the [DOM parser](#model.DOMParser) to\n//   collapse whitespace in normal mode, and normalize it (replacing\n//   newlines and such with spaces) otherwise. `\"pre\"` causes the\n//   parser to preserve spaces inside the node. When this option isn't\n//   given, but [`code`](#model.NodeSpec.code) is true, `whitespace`\n//   will default to `\"pre\"`. Note that this option doesn't influence\n//   the way the node is rendered—that should be handled by `toDOM`\n//   and/or styling.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nexport class Schema {\n  // :: (SchemaSpec)\n  // Construct a schema from a schema [specification](#model.SchemaSpec).\n  constructor(spec) {\n    // :: SchemaSpec\n    // The [spec](#model.SchemaSpec) on which the schema is based,\n    // with the added guarantee that its `nodes` and `marks`\n    // properties are\n    // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n    // (not raw objects).\n    this.spec = {}\n    for (let prop in spec) this.spec[prop] = spec[prop]\n    this.spec.nodes = OrderedMap.from(spec.nodes)\n    this.spec.marks = OrderedMap.from(spec.marks)\n\n    // :: Object<NodeType>\n    // An object mapping the schema's node names to node type objects.\n    this.nodes = NodeType.compile(this.spec.nodes, this)\n\n    // :: Object<MarkType>\n    // A map from mark names to mark type objects.\n    this.marks = MarkType.compile(this.spec.marks, this)\n\n    let contentExprCache = Object.create(null)\n    for (let prop in this.nodes) {\n      if (prop in this.marks)\n        throw new RangeError(prop + \" can not be both a node and a mark\")\n      let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks\n      type.contentMatch = contentExprCache[contentExpr] ||\n        (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes))\n      type.inlineContent = type.contentMatch.inlineContent\n      type.markSet = markExpr == \"_\" ? null :\n        markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n        markExpr == \"\" || !type.inlineContent ? [] : null\n    }\n    for (let prop in this.marks) {\n      let type = this.marks[prop], excl = type.spec.excludes\n      type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"))\n    }\n\n    this.nodeFromJSON = this.nodeFromJSON.bind(this)\n    this.markFromJSON = this.markFromJSON.bind(this)\n\n    // :: NodeType\n    // The type of the [default top node](#model.SchemaSpec.topNode)\n    // for this schema.\n    this.topNodeType = this.nodes[this.spec.topNode || \"doc\"]\n\n    // :: Object\n    // An object for storing whatever values modules may want to\n    // compute and cache per schema. (If you want to store something\n    // in it, try to use property names unlikely to clash.)\n    this.cached = Object.create(null)\n    this.cached.wrappings = Object.create(null)\n  }\n\n  // :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a node in this schema. The `type` may be a string or a\n  // `NodeType` instance. Attributes will be extended\n  // with defaults, `content` may be a `Fragment`,\n  // `null`, a `Node`, or an array of nodes.\n  node(type, attrs, content, marks) {\n    if (typeof type == \"string\")\n      type = this.nodeType(type)\n    else if (!(type instanceof NodeType))\n      throw new RangeError(\"Invalid node type: \" + type)\n    else if (type.schema != this)\n      throw new RangeError(\"Node type from different schema used (\" + type.name + \")\")\n\n    return type.createChecked(attrs, content, marks)\n  }\n\n  // :: (string, ?[Mark]) → Node\n  // Create a text node in the schema. Empty text nodes are not\n  // allowed.\n  text(text, marks) {\n    let type = this.nodes.text\n    return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks))\n  }\n\n  // :: (union<string, MarkType>, ?Object) → Mark\n  // Create a mark with the given type and attributes.\n  mark(type, attrs) {\n    if (typeof type == \"string\") type = this.marks[type]\n    return type.create(attrs)\n  }\n\n  // :: (Object) → Node\n  // Deserialize a node from its JSON representation. This method is\n  // bound.\n  nodeFromJSON(json) {\n    return Node.fromJSON(this, json)\n  }\n\n  // :: (Object) → Mark\n  // Deserialize a mark from its JSON representation. This method is\n  // bound.\n  markFromJSON(json) {\n    return Mark.fromJSON(this, json)\n  }\n\n  nodeType(name) {\n    let found = this.nodes[name]\n    if (!found) throw new RangeError(\"Unknown node type: \" + name)\n    return found\n  }\n}\n\nfunction gatherMarks(schema, marks) {\n  let found = []\n  for (let i = 0; i < marks.length; i++) {\n    let name = marks[i], mark = schema.marks[name], ok = mark\n    if (mark) {\n      found.push(mark)\n    } else {\n      for (let prop in schema.marks) {\n        let mark = schema.marks[prop]\n        if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n          found.push(ok = mark)\n      }\n    }\n    if (!ok) throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\")\n  }\n  return found\n}\n","import {Fragment} from \"./fragment\"\nimport {Slice} from \"./replace\"\nimport {Mark} from \"./mark\"\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nexport class DOMParser {\n  // :: (Schema, [ParseRule])\n  // Create a parser that targets the given schema, using the given\n  // parsing rules.\n  constructor(schema, rules) {\n    // :: Schema\n    // The schema into which the parser parses.\n    this.schema = schema\n    // :: [ParseRule]\n    // The set of [parse rules](#model.ParseRule) that the parser\n    // uses, in order of precedence.\n    this.rules = rules\n    this.tags = []\n    this.styles = []\n\n    rules.forEach(rule => {\n      if (rule.tag) this.tags.push(rule)\n      else if (rule.style) this.styles.push(rule)\n    })\n\n    // Only normalize list elements when lists in the schema can't directly contain themselves\n    this.normalizeLists = !this.tags.some(r => {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false\n      let node = schema.nodes[r.node]\n      return node.contentMatch.matchType(node)\n    })\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Node\n  // Parse a document from the content of a DOM node.\n  parse(dom, options = {}) {\n    let context = new ParseContext(this, options, false)\n    context.addAll(dom, null, options.from, options.to)\n    return context.finish()\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Slice\n  // Parses the content of the given DOM node, like\n  // [`parse`](#model.DOMParser.parse), and takes the same set of\n  // options. But unlike that method, which produces a whole node,\n  // this one returns a slice that is open at the sides, meaning that\n  // the schema constraints aren't applied to the start of nodes to\n  // the left of the input and the end of nodes at the end.\n  parseSlice(dom, options = {}) {\n    let context = new ParseContext(this, options, true)\n    context.addAll(dom, null, options.from, options.to)\n    return Slice.maxOpen(context.finish())\n  }\n\n  matchTag(dom, context, after) {\n    for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n      let rule = this.tags[i]\n      if (matches(dom, rule.tag) &&\n          (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n          (!rule.context || context.matchesContext(rule.context))) {\n        if (rule.getAttrs) {\n          let result = rule.getAttrs(dom)\n          if (result === false) continue\n          rule.attrs = result\n        }\n        return rule\n      }\n    }\n  }\n\n  matchStyle(prop, value, context, after) {\n    for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n      let rule = this.styles[i]\n      if (rule.style.indexOf(prop) != 0 ||\n          rule.context && !context.matchesContext(rule.context) ||\n          // Test that the style string either precisely matches the prop,\n          // or has an '=' sign after the prop, followed by the given\n          // value.\n          rule.style.length > prop.length &&\n          (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n        continue\n      if (rule.getAttrs) {\n        let result = rule.getAttrs(value)\n        if (result === false) continue\n        rule.attrs = result\n      }\n      return rule\n    }\n  }\n\n  // : (Schema) → [ParseRule]\n  static schemaRules(schema) {\n    let result = []\n    function insert(rule) {\n      let priority = rule.priority == null ? 50 : rule.priority, i = 0\n      for (; i < result.length; i++) {\n        let next = result[i], nextPriority = next.priority == null ? 50 : next.priority\n        if (nextPriority < priority) break\n      }\n      result.splice(i, 0, rule)\n    }\n\n    for (let name in schema.marks) {\n      let rules = schema.marks[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.mark = name\n      })\n    }\n    for (let name in schema.nodes) {\n      let rules = schema.nodes[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.node = name\n      })\n    }\n    return result\n  }\n\n  // :: (Schema) → DOMParser\n  // Construct a DOM parser using the parsing rules listed in a\n  // schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n  // [priority](#model.ParseRule.priority).\n  static fromSchema(schema) {\n    return schema.cached.domParser ||\n      (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n  }\n}\n\n// : Object<bool> The block-level tags in HTML5\nconst blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n}\n\n// : Object<bool> The tags that we normally ignore.\nconst ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n}\n\n// : Object<bool> List tags.\nconst listTags = {ol: true, ul: true}\n\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4\n\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n  if (preserveWhitespace != null) return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n    (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n  return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT\n}\n\nclass NodeContext {\n  constructor(type, attrs, marks, pendingMarks, solid, match, options) {\n    this.type = type\n    this.attrs = attrs\n    this.solid = solid\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch)\n    this.options = options\n    this.content = []\n    // Marks applied to this node itself\n    this.marks = marks\n    // Marks applied to its children\n    this.activeMarks = Mark.none\n    // Marks that can't apply here, but will be used in children if possible\n    this.pendingMarks = pendingMarks\n    // Nested Marks with same type\n    this.stashMarks = []\n  }\n\n  findWrapping(node) {\n    if (!this.match) {\n      if (!this.type) return []\n      let fill = this.type.contentMatch.fillBefore(Fragment.from(node))\n      if (fill) {\n        this.match = this.type.contentMatch.matchFragment(fill)\n      } else {\n        let start = this.type.contentMatch, wrap\n        if (wrap = start.findWrapping(node.type)) {\n          this.match = start\n          return wrap\n        } else {\n          return null\n        }\n      }\n    }\n    return this.match.findWrapping(node.type)\n  }\n\n  finish(openEnd) {\n    if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n      let last = this.content[this.content.length - 1], m\n      if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n        if (last.text.length == m[0].length) this.content.pop()\n        else this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length))\n      }\n    }\n    let content = Fragment.from(this.content)\n    if (!openEnd && this.match)\n      content = content.append(this.match.fillBefore(Fragment.empty, true))\n    return this.type ? this.type.create(this.attrs, content, this.marks) : content\n  }\n\n  popFromStashMark(mark) {\n    for (let i = this.stashMarks.length - 1; i >= 0; i--)\n      if (mark.eq(this.stashMarks[i])) return this.stashMarks.splice(i, 1)[0]\n  }\n\n  applyPending(nextType) {\n    for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n      let mark = pending[i]\n      if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n          !mark.isInSet(this.activeMarks)) {\n        this.activeMarks = mark.addToSet(this.activeMarks)\n        this.pendingMarks = mark.removeFromSet(this.pendingMarks)\n      }\n    }\n  }\n\n  inlineContext(node) {\n    if (this.type) return this.type.inlineContent\n    if (this.content.length) return this.content[0].isInline\n    return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase())\n  }\n}\n\nclass ParseContext {\n  // : (DOMParser, Object)\n  constructor(parser, options, open) {\n    // : DOMParser The parser we are using.\n    this.parser = parser\n    // : Object The options passed to this parse.\n    this.options = options\n    this.isOpen = open\n    let topNode = options.topNode, topContext\n    let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (open ? OPT_OPEN_LEFT : 0)\n    if (topNode)\n      topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                   options.topMatch || topNode.type.contentMatch, topOptions)\n    else if (open)\n      topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions)\n    else\n      topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions)\n    this.nodes = [topContext]\n    // : [Mark] The current set of marks\n    this.open = 0\n    this.find = options.findPositions\n    this.needsBlock = false\n  }\n\n  get top() {\n    return this.nodes[this.open]\n  }\n\n  // : (dom.Node)\n  // Add a DOM node to the content. Text is inserted as text node,\n  // otherwise, the node is passed to `addElement` or, if it has a\n  // `style` attribute, `addElementWithStyles`.\n  addDOM(dom) {\n    if (dom.nodeType == 3) {\n      this.addTextNode(dom)\n    } else if (dom.nodeType == 1) {\n      let style = dom.getAttribute(\"style\")\n      let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.addPendingMark(marks[i])\n      this.addElement(dom)\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.removePendingMark(marks[i], top)\n    }\n  }\n\n  addTextNode(dom) {\n    let value = dom.nodeValue\n    let top = this.top\n    if (top.options & OPT_PRESERVE_WS_FULL ||\n        top.inlineContext(dom) ||\n        /[^ \\t\\r\\n\\u000c]/.test(value)) {\n      if (!(top.options & OPT_PRESERVE_WS)) {\n        value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \")\n        // If this starts with whitespace, and there is no node before it, or\n        // a hard break, or a text node that ends with whitespace, strip the\n        // leading space.\n        if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n          let nodeBefore = top.content[top.content.length - 1]\n          let domNodeBefore = dom.previousSibling\n          if (!nodeBefore ||\n              (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n              (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n            value = value.slice(1)\n        }\n      } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n        value = value.replace(/\\r?\\n|\\r/g, \" \")\n      } else {\n        value = value.replace(/\\r\\n?/g, \"\\n\")\n      }\n      if (value) this.insertNode(this.parser.schema.text(value))\n      this.findInText(dom)\n    } else {\n      this.findInside(dom)\n    }\n  }\n\n  // : (dom.Element, ?ParseRule)\n  // Try to find a handler for the given tag and use that to parse. If\n  // none is found, the element's content nodes are added directly.\n  addElement(dom, matchAfter) {\n    let name = dom.nodeName.toLowerCase(), ruleID\n    if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom)\n    let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n        (ruleID = this.parser.matchTag(dom, this, matchAfter))\n    if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n      this.findInside(dom)\n      this.ignoreFallback(dom)\n    } else if (!rule || rule.skip || rule.closeParent) {\n      if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1)\n      else if (rule && rule.skip.nodeType) dom = rule.skip\n      let sync, top = this.top, oldNeedsBlock = this.needsBlock\n      if (blockTags.hasOwnProperty(name)) {\n        sync = true\n        if (!top.type) this.needsBlock = true\n      } else if (!dom.firstChild) {\n        this.leafFallback(dom)\n        return\n      }\n      this.addAll(dom)\n      if (sync) this.sync(top)\n      this.needsBlock = oldNeedsBlock\n    } else {\n      this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null)\n    }\n  }\n\n  // Called for leaf DOM nodes that would otherwise be ignored\n  leafFallback(dom) {\n    if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n      this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"))\n  }\n\n  // Called for ignored nodes\n  ignoreFallback(dom) {\n    // Ignored BR nodes should at least create an inline context\n    if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n      this.findPlace(this.parser.schema.text(\"-\"))\n  }\n\n  // Run any style parser associated with the node's styles. Either\n  // return an array of marks, or null to indicate some of the styles\n  // had a rule with `ignore` set.\n  readStyles(styles) {\n    let marks = Mark.none\n    style: for (let i = 0; i < styles.length; i += 2) {\n      for (let after = null;;) {\n        let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after)\n        if (!rule) continue style\n        if (rule.ignore) return null\n        marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks)\n        if (rule.consuming === false) after = rule\n        else break\n      }\n    }\n    return marks\n  }\n\n  // : (dom.Element, ParseRule) → bool\n  // Look up a handler for the given node. If none are found, return\n  // false. Otherwise, apply it, use its return value to drive the way\n  // the node's content is wrapped, and return true.\n  addElementByRule(dom, rule, continueAfter) {\n    let sync, nodeType, markType, mark\n    if (rule.node) {\n      nodeType = this.parser.schema.nodes[rule.node]\n      if (!nodeType.isLeaf) {\n        sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace)\n      } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n        this.leafFallback(dom)\n      }\n    } else {\n      markType = this.parser.schema.marks[rule.mark]\n      mark = markType.create(rule.attrs)\n      this.addPendingMark(mark)\n    }\n    let startIn = this.top\n\n    if (nodeType && nodeType.isLeaf) {\n      this.findInside(dom)\n    } else if (continueAfter) {\n      this.addElement(dom, continueAfter)\n    } else if (rule.getContent) {\n      this.findInside(dom)\n      rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node))\n    } else {\n      let contentDOM = rule.contentElement\n      if (typeof contentDOM == \"string\") contentDOM = dom.querySelector(contentDOM)\n      else if (typeof contentDOM == \"function\") contentDOM = contentDOM(dom)\n      if (!contentDOM) contentDOM = dom\n      this.findAround(dom, contentDOM, true)\n      this.addAll(contentDOM, sync)\n    }\n    if (sync) { this.sync(startIn); this.open-- }\n    if (mark) this.removePendingMark(mark, startIn)\n  }\n\n  // : (dom.Node, ?NodeBuilder, ?number, ?number)\n  // Add all child nodes between `startIndex` and `endIndex` (or the\n  // whole node, if not given). If `sync` is passed, use it to\n  // synchronize after every block element.\n  addAll(parent, sync, startIndex, endIndex) {\n    let index = startIndex || 0\n    for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n             end = endIndex == null ? null : parent.childNodes[endIndex];\n         dom != end; dom = dom.nextSibling, ++index) {\n      this.findAtPoint(parent, index)\n      this.addDOM(dom)\n      if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n        this.sync(sync)\n    }\n    this.findAtPoint(parent, index)\n  }\n\n  // Try to find a way to fit the given node type into the current\n  // context. May add intermediate wrappers and/or leave non-solid\n  // nodes that we're in.\n  findPlace(node) {\n    let route, sync\n    for (let depth = this.open; depth >= 0; depth--) {\n      let cx = this.nodes[depth]\n      let found = cx.findWrapping(node)\n      if (found && (!route || route.length > found.length)) {\n        route = found\n        sync = cx\n        if (!found.length) break\n      }\n      if (cx.solid) break\n    }\n    if (!route) return false\n    this.sync(sync)\n    for (let i = 0; i < route.length; i++)\n      this.enterInner(route[i], null, false)\n    return true\n  }\n\n  // : (Node) → ?Node\n  // Try to insert the given node, adjusting the context when needed.\n  insertNode(node) {\n    if (node.isInline && this.needsBlock && !this.top.type) {\n      let block = this.textblockFromContext()\n      if (block) this.enterInner(block)\n    }\n    if (this.findPlace(node)) {\n      this.closeExtra()\n      let top = this.top\n      top.applyPending(node.type)\n      if (top.match) top.match = top.match.matchType(node.type)\n      let marks = top.activeMarks\n      for (let i = 0; i < node.marks.length; i++)\n        if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n          marks = node.marks[i].addToSet(marks)\n      top.content.push(node.mark(marks))\n      return true\n    }\n    return false\n  }\n\n  // : (NodeType, ?Object) → bool\n  // Try to start a node of the given type, adjusting the context when\n  // necessary.\n  enter(type, attrs, preserveWS) {\n    let ok = this.findPlace(type.create(attrs))\n    if (ok) this.enterInner(type, attrs, true, preserveWS)\n    return ok\n  }\n\n  // Open a node of the given type\n  enterInner(type, attrs, solid, preserveWS) {\n    this.closeExtra()\n    let top = this.top\n    top.applyPending(type)\n    top.match = top.match && top.match.matchType(type, attrs)\n    let options = wsOptionsFor(type, preserveWS, top.options)\n    if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) options |= OPT_OPEN_LEFT\n    this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options))\n    this.open++\n  }\n\n  // Make sure all nodes above this.open are finished and added to\n  // their parents\n  closeExtra(openEnd) {\n    let i = this.nodes.length - 1\n    if (i > this.open) {\n      for (; i > this.open; i--) this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd))\n      this.nodes.length = this.open + 1\n    }\n  }\n\n  finish() {\n    this.open = 0\n    this.closeExtra(this.isOpen)\n    return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n  }\n\n  sync(to) {\n    for (let i = this.open; i >= 0; i--) if (this.nodes[i] == to) {\n      this.open = i\n      return\n    }\n  }\n\n  get currentPos() {\n    this.closeExtra()\n    let pos = 0\n    for (let i = this.open; i >= 0; i--) {\n      let content = this.nodes[i].content\n      for (let j = content.length - 1; j >= 0; j--)\n        pos += content[j].nodeSize\n      if (i) pos++\n    }\n    return pos\n  }\n\n  findAtPoint(parent, offset) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == parent && this.find[i].offset == offset)\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findInside(parent) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findAround(parent, content, before) {\n    if (parent != content && this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n        let pos = content.compareDocumentPosition(this.find[i].node)\n        if (pos & (before ? 2 : 4))\n          this.find[i].pos = this.currentPos\n      }\n    }\n  }\n\n  findInText(textNode) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == textNode)\n        this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset)\n    }\n  }\n\n  // : (string) → bool\n  // Determines whether the given [context\n  // string](#ParseRule.context) matches this context.\n  matchesContext(context) {\n    if (context.indexOf(\"|\") > -1)\n      return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this)\n\n    let parts = context.split(\"/\")\n    let option = this.options.context\n    let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type)\n    let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1)\n    let match = (i, depth) => {\n      for (; i >= 0; i--) {\n        let part = parts[i]\n        if (part == \"\") {\n          if (i == parts.length - 1 || i == 0) continue\n          for (; depth >= minDepth; depth--)\n            if (match(i - 1, depth)) return true\n          return false\n        } else {\n          let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n              : option && depth >= minDepth ? option.node(depth - minDepth).type\n              : null\n          if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n            return false\n          depth--\n        }\n      }\n      return true\n    }\n    return match(parts.length - 1, this.open)\n  }\n\n  textblockFromContext() {\n    let $context = this.options.context\n    if ($context) for (let d = $context.depth; d >= 0; d--) {\n      let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType\n      if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt\n    }\n    for (let name in this.parser.schema.nodes) {\n      let type = this.parser.schema.nodes[name]\n      if (type.isTextblock && type.defaultAttrs) return type\n    }\n  }\n\n  addPendingMark(mark) {\n    let found = findSameMarkInSet(mark, this.top.pendingMarks)\n    if (found) this.top.stashMarks.push(found)\n    this.top.pendingMarks = mark.addToSet(this.top.pendingMarks)\n  }\n\n  removePendingMark(mark, upto) {\n    for (let depth = this.open; depth >= 0; depth--) {\n      let level = this.nodes[depth]\n      let found = level.pendingMarks.lastIndexOf(mark)\n      if (found > -1) {\n        level.pendingMarks = mark.removeFromSet(level.pendingMarks)\n      } else {\n        level.activeMarks = mark.removeFromSet(level.activeMarks)\n        let stashMark = level.popFromStashMark(mark)\n        if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n          level.activeMarks = stashMark.addToSet(level.activeMarks)\n      }\n      if (level == upto) break\n    }\n  }\n}\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child)\n      child = prevItem\n    } else if (name == \"li\") {\n      prevItem = child\n    } else if (name) {\n      prevItem = null\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = []\n  while (m = re.exec(style)) result.push(m[1], m[2].trim())\n  return result\n}\n\nfunction copy(obj) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  let nodes = nodeType.schema.nodes\n  for (let name in nodes) {\n    let parent = nodes[name]\n    if (!parent.allowsMarkType(markType)) continue\n    let seen = [], scan = match => {\n      seen.push(match)\n      for (let i = 0; i < match.edgeCount; i++) {\n        let {type, next} = match.edge(i)\n        if (type == nodeType) return true\n        if (seen.indexOf(next) < 0 && scan(next)) return true\n      }\n    }\n    if (scan(parent.contentMatch)) return true\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (let i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) return set[i]\n  }\n}\n","// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nexport class DOMSerializer {\n  // :: (Object<(node: Node) → DOMOutputSpec>, Object<?(mark: Mark, inline: bool) → DOMOutputSpec>)\n  // Create a serializer. `nodes` should map node names to functions\n  // that take a node and return a description of the corresponding\n  // DOM. `marks` does the same for mark names, but also gets an\n  // argument that tells it whether the mark's content is block or\n  // inline content (for typical use, it'll always be inline). A mark\n  // serializer may be `null` to indicate that marks of that type\n  // should not be serialized.\n  constructor(nodes, marks) {\n    // :: Object<(node: Node) → DOMOutputSpec>\n    // The node serialization functions.\n    this.nodes = nodes || {}\n    // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n    // The mark serialization functions.\n    this.marks = marks || {}\n  }\n\n  // :: (Fragment, ?Object) → dom.DocumentFragment\n  // Serialize the content of this fragment to a DOM fragment. When\n  // not in the browser, the `document` option, containing a DOM\n  // document, should be passed so that the serializer can create\n  // nodes.\n  serializeFragment(fragment, options = {}, target) {\n    if (!target) target = doc(options).createDocumentFragment()\n\n    let top = target, active = null\n    fragment.forEach(node => {\n      if (active || node.marks.length) {\n        if (!active) active = []\n        let keep = 0, rendered = 0\n        while (keep < active.length && rendered < node.marks.length) {\n          let next = node.marks[rendered]\n          if (!this.marks[next.type.name]) { rendered++; continue }\n          if (!next.eq(active[keep]) || next.type.spec.spanning === false) break\n          keep += 2; rendered++\n        }\n        while (keep < active.length) {\n          top = active.pop()\n          active.pop()\n        }\n        while (rendered < node.marks.length) {\n          let add = node.marks[rendered++]\n          let markDOM = this.serializeMark(add, node.isInline, options)\n          if (markDOM) {\n            active.push(add, top)\n            top.appendChild(markDOM.dom)\n            top = markDOM.contentDOM || markDOM.dom\n          }\n        }\n      }\n      top.appendChild(this.serializeNodeInner(node, options))\n    })\n\n    return target\n  }\n\n  serializeNodeInner(node, options = {}) {\n    let {dom, contentDOM} =\n        DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node))\n    if (contentDOM) {\n      if (node.isLeaf)\n        throw new RangeError(\"Content hole not allowed in a leaf node spec\")\n      if (options.onContent)\n        options.onContent(node, contentDOM, options)\n      else\n        this.serializeFragment(node.content, options, contentDOM)\n    }\n    return dom\n  }\n\n  // :: (Node, ?Object) → dom.Node\n  // Serialize this node to a DOM node. This can be useful when you\n  // need to serialize a part of a document, as opposed to the whole\n  // document. To serialize a whole document, use\n  // [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n  // its [content](#model.Node.content).\n  serializeNode(node, options = {}) {\n    let dom = this.serializeNodeInner(node, options)\n    for (let i = node.marks.length - 1; i >= 0; i--) {\n      let wrap = this.serializeMark(node.marks[i], node.isInline, options)\n      if (wrap) {\n        ;(wrap.contentDOM || wrap.dom).appendChild(dom)\n        dom = wrap.dom\n      }\n    }\n    return dom\n  }\n\n  serializeMark(mark, inline, options = {}) {\n    let toDOM = this.marks[mark.type.name]\n    return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n  }\n\n  // :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n  // Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n  // the spec has a hole (zero) in it, `contentDOM` will point at the\n  // node with the hole.\n  static renderSpec(doc, structure, xmlNS = null) {\n    if (typeof structure == \"string\")\n      return {dom: doc.createTextNode(structure)}\n    if (structure.nodeType != null)\n      return {dom: structure}\n    if (structure.dom && structure.dom.nodeType != null)\n      return structure\n    let tagName = structure[0], space = tagName.indexOf(\" \")\n    if (space > 0) {\n      xmlNS = tagName.slice(0, space)\n      tagName = tagName.slice(space + 1)\n    }\n    let contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName)\n    let attrs = structure[1], start = 1\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n      start = 2\n      for (let name in attrs) if (attrs[name] != null) {\n        let space = name.indexOf(\" \")\n        if (space > 0) dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name])\n        else dom.setAttribute(name, attrs[name])\n      }\n    }\n    for (let i = start; i < structure.length; i++) {\n      let child = structure[i]\n      if (child === 0) {\n        if (i < structure.length - 1 || i > start)\n          throw new RangeError(\"Content hole must be the only child of its parent node\")\n        return {dom, contentDOM: dom}\n      } else {\n        let {dom: inner, contentDOM: innerContent} = DOMSerializer.renderSpec(doc, child, xmlNS)\n        dom.appendChild(inner)\n        if (innerContent) {\n          if (contentDOM) throw new RangeError(\"Multiple content holes\")\n          contentDOM = innerContent\n        }\n      }\n    }\n    return {dom, contentDOM}\n  }\n\n  // :: (Schema) → DOMSerializer\n  // Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n  // properties in a schema's node and mark specs.\n  static fromSchema(schema) {\n    return schema.cached.domSerializer ||\n      (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n  }\n\n  // : (Schema) → Object<(node: Node) → DOMOutputSpec>\n  // Gather the serializers in a schema's node specs into an object.\n  // This can be useful as a base to build a custom serializer from.\n  static nodesFromSchema(schema) {\n    let result = gatherToDOM(schema.nodes)\n    if (!result.text) result.text = node => node.text\n    return result\n  }\n\n  // : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n  // Gather the serializers in a schema's mark specs into an object.\n  static marksFromSchema(schema) {\n    return gatherToDOM(schema.marks)\n  }\n}\n\nfunction gatherToDOM(obj) {\n  let result = {}\n  for (let name in obj) {\n    let toDOM = obj[name].spec.toDOM\n    if (toDOM) result[name] = toDOM\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n","import {findWrapping, liftTarget, canSplit, ReplaceAroundStep} from \"prosemirror-transform\"\nimport {Slice, Fragment, NodeRange} from \"prosemirror-model\"\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0]\n\n// :: NodeSpec\n// An ordered list [node spec](#model.NodeSpec). Has a single\n// attribute, `order`, which determines the number at which the list\n// starts counting, and defaults to 1. Represented as an `<ol>`\n// element.\nexport const orderedList = {\n  attrs: {order: {default: 1}},\n  parseDOM: [{tag: \"ol\", getAttrs(dom) {\n    return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1}\n  }}],\n  toDOM(node) {\n    return node.attrs.order == 1 ? olDOM : [\"ol\", {start: node.attrs.order}, 0]\n  }\n}\n\n// :: NodeSpec\n// A bullet list node spec, represented in the DOM as `<ul>`.\nexport const bulletList = {\n  parseDOM: [{tag: \"ul\"}],\n  toDOM() { return ulDOM }\n}\n\n// :: NodeSpec\n// A list item (`<li>`) spec.\nexport const listItem = {\n  parseDOM: [{tag: \"li\"}],\n  toDOM() { return liDOM },\n  defining: true\n}\n\nfunction add(obj, props) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  for (let prop in props) copy[prop] = props[prop]\n  return copy\n}\n\n// :: (OrderedMap<NodeSpec>, string, ?string) → OrderedMap<NodeSpec>\n// Convenience function for adding list-related node types to a map\n// specifying the nodes for a schema. Adds\n// [`orderedList`](#schema-list.orderedList) as `\"ordered_list\"`,\n// [`bulletList`](#schema-list.bulletList) as `\"bullet_list\"`, and\n// [`listItem`](#schema-list.listItem) as `\"list_item\"`.\n//\n// `itemContent` determines the content expression for the list items.\n// If you want the commands defined in this module to apply to your\n// list structure, it should have a shape like `\"paragraph block*\"` or\n// `\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\n// given to assign a group name to the list node types, for example\n// `\"block\"`.\nexport function addListNodes(nodes, itemContent, listGroup) {\n  return nodes.append({\n    ordered_list: add(orderedList, {content: \"list_item+\", group: listGroup}),\n    bullet_list: add(bulletList, {content: \"list_item+\", group: listGroup}),\n    list_item: add(listItem, {content: itemContent})\n  })\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command function that wraps the selection in a list with\n// the given type an attributes. If `dispatch` is null, only return a\n// value to indicate whether this is possible, but don't actually\n// perform the change.\nexport function wrapInList(listType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), doJoin = false, outerRange = range\n    if (!range) return false\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n      // Don't do anything if this is the top of the list\n      if ($from.index(range.depth - 1) == 0) return false\n      let $insert = state.doc.resolve(range.start - 2)\n      outerRange = new NodeRange($insert, $insert, range.depth)\n      if (range.endIndex < range.parent.childCount)\n        range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth)\n      doJoin = true\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range)\n    if (!wrap) return false\n    if (dispatch) dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView())\n    return true\n  }\n}\n\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end,\n                                new Slice(content, 0, 0), wrappers.length, true))\n\n  let found = 0\n  for (let i = 0; i < wrappers.length; i++) if (wrappers[i].type == listType) found = i + 1\n  let splitDepth = wrappers.length - found\n\n  let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent\n  for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n    if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n      tr.split(splitPos, splitDepth)\n      splitPos += 2 * splitDepth\n    }\n    splitPos += parent.child(i).nodeSize\n  }\n  return tr\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Build a command that splits a non-empty textblock at the top level\n// of a list item by also splitting that list item.\nexport function splitListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to, node} = state.selection\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) return false\n    let grandParent = $from.node(-1)\n    if (grandParent.type != itemType) return false\n    if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType ||\n          $from.index(-2) != $from.node(-2).childCount - 1) return false\n      if (dispatch) {\n        let wrap = Fragment.empty\n        let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n          wrap = Fragment.from($from.node(d).copy(wrap))\n        let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n            : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()))\n        let start = $from.before($from.depth - (depthBefore - 1))\n        let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0))\n        let sel = -1\n        tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n          if (sel > -1) return false\n          if (node.isTextblock && node.content.size == 0) sel = pos + 1\n        })\n        if (sel > -1) tr.setSelection(state.selection.constructor.near(tr.doc.resolve(sel)))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n    let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n    let tr = state.tr.delete($from.pos, $to.pos)\n    let types = nextType && [null, {type: nextType}]\n    if (!canSplit(tr.doc, $from.pos, 2, types)) return false\n    if (dispatch) dispatch(tr.split($from.pos, 2, types).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to lift the list item around the selection up into\n// a wrapping list.\nexport function liftListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    if (!dispatch) return true\n    if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n      return liftToOuterList(state, dispatch, itemType, range)\n    else // Outer list node\n      return liftOutOfList(state, dispatch, range)\n  }\n}\n\nfunction liftToOuterList(state, dispatch, itemType, range) {\n  let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth)\n  if (end < endOfList) {\n    // There are siblings after the lifted items, which must become\n    // children of the last item\n    tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList,\n                                  new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true))\n    range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth)\n  }\n  dispatch(tr.lift(range, liftTarget(range)).scrollIntoView())\n  return true\n}\n\nfunction liftOutOfList(state, dispatch, range) {\n  let tr = state.tr, list = range.parent\n  // Merge the list items into a single big item\n  for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n    pos -= list.child(i).nodeSize\n    tr.delete(pos - 1, pos + 1)\n  }\n  let $start = tr.doc.resolve(range.start), item = $start.nodeAfter\n  if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize) return false\n  let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount\n  let parent = $start.node(-1), indexBefore = $start.index(-1)\n  if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1,\n                         item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n    return false\n  let start = $start.pos, end = start + item.nodeSize\n  // Strip off the surrounding list. At the sides where we're not at\n  // the end of the list, the existing list is closed. At sides where\n  // this is the end, it is overwritten to its end.\n  tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1,\n                                new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n                                          .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))),\n                                          atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1))\n  dispatch(tr.scrollIntoView())\n  return true\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to sink the list item around the selection down\n// into an inner list.\nexport function sinkListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    let startIndex = range.startIndex\n    if (startIndex == 0) return false\n    let parent = range.parent, nodeBefore = parent.child(startIndex - 1)\n    if (nodeBefore.type != itemType) return false\n\n    if (dispatch) {\n      let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type\n      let inner = Fragment.from(nestedBefore ? itemType.create() : null)\n      let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))),\n                            nestedBefore ? 3 : 1, 0)\n      let before = range.start, after = range.end\n      dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after,\n                                                   before, after, slice, 1, true))\n               .scrollIntoView())\n    }\n    return true\n  }\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\nimport {ReplaceStep, ReplaceAroundStep} from \"prosemirror-transform\"\n\nconst classesById = Object.create(null)\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nexport class Selection {\n  // :: (ResolvedPos, ResolvedPos, ?[SelectionRange])\n  // Initialize a selection with the head and anchor and ranges. If no\n  // ranges are given, constructs a single range across `$anchor` and\n  // `$head`.\n  constructor($anchor, $head, ranges) {\n    // :: [SelectionRange]\n    // The ranges covered by the selection.\n    this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))]\n    // :: ResolvedPos\n    // The resolved anchor of the selection (the side that stays in\n    // place when the selection is modified).\n    this.$anchor = $anchor\n    // :: ResolvedPos\n    // The resolved head of the selection (the side that moves when\n    // the selection is modified).\n    this.$head = $head\n  }\n\n  // :: number\n  // The selection's anchor, as an unresolved position.\n  get anchor() { return this.$anchor.pos }\n\n  // :: number\n  // The selection's head.\n  get head() { return this.$head.pos }\n\n  // :: number\n  // The lower bound of the selection's main range.\n  get from() { return this.$from.pos }\n\n  // :: number\n  // The upper bound of the selection's main range.\n  get to() { return this.$to.pos }\n\n  // :: ResolvedPos\n  // The resolved lower  bound of the selection's main range.\n  get $from() {\n    return this.ranges[0].$from\n  }\n\n  // :: ResolvedPos\n  // The resolved upper bound of the selection's main range.\n  get $to() {\n    return this.ranges[0].$to\n  }\n\n  // :: bool\n  // Indicates whether the selection contains any content.\n  get empty() {\n    let ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++)\n      if (ranges[i].$from.pos != ranges[i].$to.pos) return false\n    return true\n  }\n\n  // eq:: (Selection) → bool\n  // Test whether the selection is the same as another selection.\n\n  // map:: (doc: Node, mapping: Mappable) → Selection\n  // Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n  // should be the new document to which we are mapping.\n\n  // :: () → Slice\n  // Get the content of this selection as a slice.\n  content() {\n    return this.$from.node(0).slice(this.from, this.to, true)\n  }\n\n  // :: (Transaction, ?Slice)\n  // Replace the selection with a slice or, if no slice is given,\n  // delete the selection. Will append to the given transaction.\n  replace(tr, content = Slice.empty) {\n    // Put the new selection at the position after the inserted\n    // content. When that ended in an inline node, search backwards,\n    // to get the position after that node. If not, search forward.\n    let lastNode = content.content.lastChild, lastParent = null\n    for (let i = 0; i < content.openEnd; i++) {\n      lastParent = lastNode\n      lastNode = lastNode.lastChild\n    }\n\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n      if (i == 0)\n        selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1)\n    }\n  }\n\n  // :: (Transaction, Node)\n  // Replace the selection with the given node, appending the changes\n  // to the given transaction.\n  replaceWith(tr, node) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      let from = mapping.map($from.pos), to = mapping.map($to.pos)\n      if (i) {\n        tr.deleteRange(from, to)\n      } else {\n        tr.replaceRangeWith(from, to, node)\n        selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1)\n      }\n    }\n  }\n\n  // toJSON:: () → Object\n  // Convert the selection to a JSON representation. When implementing\n  // this for a custom selection class, make sure to give the object a\n  // `type` property whose value matches the ID under which you\n  // [registered](#state.Selection^jsonID) your class.\n\n  // :: (ResolvedPos, number, ?bool) → ?Selection\n  // Find a valid cursor or leaf node selection starting at the given\n  // position and searching back if `dir` is negative, and forward if\n  // positive. When `textOnly` is true, only consider cursor\n  // selections. Will return null when no valid selection position is\n  // found.\n  static findFrom($pos, dir, textOnly) {\n    let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n        : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly)\n    if (inner) return inner\n\n    for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n      let found = dir < 0\n          ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n          : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly)\n      if (found) return found\n    }\n  }\n\n  // :: (ResolvedPos, ?number) → Selection\n  // Find a valid cursor or leaf node selection near the given\n  // position. Searches forward first by default, but if `bias` is\n  // negative, it will search backwards first.\n  static near($pos, bias = 1) {\n    return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the start of\n  // the given document. Will return an\n  // [`AllSelection`](#state.AllSelection) if no valid position\n  // exists.\n  static atStart(doc) {\n    return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the end of the\n  // given document.\n  static atEnd(doc) {\n    return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n  }\n\n  // :: (Node, Object) → Selection\n  // Deserialize the JSON representation of a selection. Must be\n  // implemented for custom classes (as a static class method).\n  static fromJSON(doc, json) {\n    if (!json || !json.type) throw new RangeError(\"Invalid input for Selection.fromJSON\")\n    let cls = classesById[json.type]\n    if (!cls) throw new RangeError(`No selection type ${json.type} defined`)\n    return cls.fromJSON(doc, json)\n  }\n\n  // :: (string, constructor<Selection>)\n  // To be able to deserialize selections from JSON, custom selection\n  // classes must register themselves with an ID string, so that they\n  // can be disambiguated. Try to pick something that's unlikely to\n  // clash with classes from other modules.\n  static jsonID(id, selectionClass) {\n    if (id in classesById) throw new RangeError(\"Duplicate use of selection JSON ID \" + id)\n    classesById[id] = selectionClass\n    selectionClass.prototype.jsonID = id\n    return selectionClass\n  }\n\n  // :: () → SelectionBookmark\n  // Get a [bookmark](#state.SelectionBookmark) for this selection,\n  // which is a value that can be mapped without having access to a\n  // current document, and later resolved to a real selection for a\n  // given document again. (This is used mostly by the history to\n  // track and restore old selections.) The default implementation of\n  // this method just converts the selection to a text selection and\n  // returns the bookmark for that.\n  getBookmark() {\n    return TextSelection.between(this.$anchor, this.$head).getBookmark()\n  }\n}\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nexport class SelectionRange {\n  // :: (ResolvedPos, ResolvedPos)\n  constructor($from, $to) {\n    // :: ResolvedPos\n    // The lower bound of the range.\n    this.$from = $from\n    // :: ResolvedPos\n    // The upper bound of the range.\n    this.$to = $to\n  }\n}\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nexport class TextSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // Construct a text selection between the given points.\n  constructor($anchor, $head = $anchor) {\n    super($anchor, $head)\n  }\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null }\n\n  map(doc, mapping) {\n    let $head = doc.resolve(mapping.map(this.head))\n    if (!$head.parent.inlineContent) return Selection.near($head)\n    let $anchor = doc.resolve(mapping.map(this.anchor))\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  }\n\n  replace(tr, content = Slice.empty) {\n    super.replace(tr, content)\n    if (content == Slice.empty) {\n      let marks = this.$from.marksAcross(this.$to)\n      if (marks) tr.ensureMarks(marks)\n    }\n  }\n\n  eq(other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  }\n\n  getBookmark() {\n    return new TextBookmark(this.anchor, this.head)\n  }\n\n  toJSON() {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      throw new RangeError(\"Invalid input for TextSelection.fromJSON\")\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  static create(doc, anchor, head = anchor) {\n    let $anchor = doc.resolve(anchor)\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  }\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  static between($anchor, $head, bias) {\n    let dPos = $anchor.pos - $head.pos\n    if (!bias || dPos) bias = dPos >= 0 ? 1 : -1\n    if (!$head.parent.inlineContent) {\n      let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true)\n      if (found) $head = found.$head\n      else return Selection.near($head, bias)\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor\n        if (($anchor.pos < $head.pos) != (dPos < 0)) $anchor = $head\n      }\n    }\n    return new TextSelection($anchor, $head)\n  }\n}\n\nSelection.jsonID(\"text\", TextSelection)\n\nclass TextBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n  }\n}\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nexport class NodeSelection extends Selection {\n  // :: (ResolvedPos)\n  // Create a node selection. Does not verify the validity of its\n  // argument.\n  constructor($pos) {\n    let node = $pos.nodeAfter\n    let $end = $pos.node(0).resolve($pos.pos + node.nodeSize)\n    super($pos, $end)\n    // :: Node The selected node.\n    this.node = node\n  }\n\n  map(doc, mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    let $pos = doc.resolve(pos)\n    if (deleted) return Selection.near($pos)\n    return new NodeSelection($pos)\n  }\n\n  content() {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  }\n\n  eq(other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  }\n\n  toJSON() {\n    return {type: \"node\", anchor: this.anchor}\n  }\n\n  getBookmark() { return new NodeBookmark(this.anchor) }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\")\n      throw new RangeError(\"Invalid input for NodeSelection.fromJSON\")\n    return new NodeSelection(doc.resolve(json.anchor))\n  }\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  static create(doc, from) {\n    return new this(doc.resolve(from))\n  }\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  static isSelectable(node) {\n    return !node.isText && node.type.spec.selectable !== false\n  }\n}\n\nNodeSelection.prototype.visible = false\n\nSelection.jsonID(\"node\", NodeSelection)\n\nclass NodeBookmark {\n  constructor(anchor) {\n    this.anchor = anchor\n  }\n  map(mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter\n    if (node && NodeSelection.isSelectable(node)) return new NodeSelection($pos)\n    return Selection.near($pos)\n  }\n}\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nexport class AllSelection extends Selection {\n  // :: (Node)\n  // Create an all-selection over the given document.\n  constructor(doc) {\n    super(doc.resolve(0), doc.resolve(doc.content.size))\n  }\n\n  replace(tr, content = Slice.empty) {\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size)\n      let sel = Selection.atStart(tr.doc)\n      if (!sel.eq(tr.selection)) tr.setSelection(sel)\n    } else {\n      super.replace(tr, content)\n    }\n  }\n\n  toJSON() { return {type: \"all\"} }\n\n  static fromJSON(doc) { return new AllSelection(doc) }\n\n  map(doc) { return new AllSelection(doc) }\n\n  eq(other) { return other instanceof AllSelection }\n\n  getBookmark() { return AllBookmark }\n}\n\nSelection.jsonID(\"all\", AllSelection)\n\nconst AllBookmark = {\n  map() { return this },\n  resolve(doc) { return new AllSelection(doc) }\n}\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) return TextSelection.create(doc, pos)\n  for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    let child = node.child(i)\n    if (!child.isAtom) {\n      let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text)\n      if (inner) return inner\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  let last = tr.steps.length - 1\n  if (last < startLen) return\n  let step = tr.steps[last]\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) return\n  let map = tr.mapping.maps[last], end\n  map.forEach((_from, _to, _newFrom, newTo) => { if (end == null) end = newTo })\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n","import {Transform} from \"prosemirror-transform\"\nimport {Mark} from \"prosemirror-model\"\nimport {Selection} from \"./selection\"\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nexport class Transaction extends Transform {\n  constructor(state) {\n    super(state.doc)\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now()\n    this.curSelection = state.selection\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null)\n  }\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  get selection() {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor))\n      this.curSelectionFor = this.steps.length\n    }\n    return this.curSelection\n  }\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  setSelection(selection) {\n    if (selection.$from.doc != this.doc)\n      throw new RangeError(\"Selection passed to setSelection must point at the current document\")\n    this.curSelection = selection\n    this.curSelectionFor = this.steps.length\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS\n    this.storedMarks = null\n    return this\n  }\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  get selectionSet() {\n    return (this.updated & UPDATED_SEL) > 0\n  }\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  setStoredMarks(marks) {\n    this.storedMarks = marks\n    this.updated |= UPDATED_MARKS\n    return this\n  }\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  ensureMarks(marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      this.setStoredMarks(marks)\n    return this\n  }\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  addStoredMark(mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  removeStoredMark(mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  get storedMarksSet() {\n    return (this.updated & UPDATED_MARKS) > 0\n  }\n\n  addStep(step, doc) {\n    super.addStep(step, doc)\n    this.updated = this.updated & ~UPDATED_MARKS\n    this.storedMarks = null\n  }\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  setTime(time) {\n    this.time = time\n    return this\n  }\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  replaceSelection(slice) {\n    this.selection.replace(this, slice)\n    return this\n  }\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  replaceSelectionWith(node, inheritMarks) {\n    let selection = this.selection\n    if (inheritMarks !== false)\n      node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)))\n    selection.replaceWith(this, node)\n    return this\n  }\n\n  // :: () → Transaction\n  // Delete the selection.\n  deleteSelection() {\n    this.selection.replace(this)\n    return this\n  }\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  insertText(text, from, to = from) {\n    let schema = this.doc.type.schema\n    if (from == null) {\n      if (!text) return this.deleteSelection()\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) return this.deleteRange(from, to)\n      let marks = this.storedMarks\n      if (!marks) {\n        let $from = this.doc.resolve(from)\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to))\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks))\n      if (!this.selection.empty) this.setSelection(Selection.near(this.selection.$to))\n      return this\n    }\n  }\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  setMeta(key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value\n    return this\n  }\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  getMeta(key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  }\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  get isGeneric() {\n    for (let _ in this.meta) return false\n    return true\n  }\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  scrollIntoView() {\n    this.updated |= UPDATED_SCROLL\n    return this\n  }\n\n  get scrolledIntoView() {\n    return (this.updated & UPDATED_SCROLL) > 0\n  }\n}\n","import {Node} from \"prosemirror-model\"\n\nimport {Selection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nclass FieldDesc {\n  constructor(name, desc, self) {\n    this.name = name\n    this.init = bind(desc.init, self)\n    this.apply = bind(desc.apply, self)\n  }\n}\n\nconst baseFields = [\n  new FieldDesc(\"doc\", {\n    init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init(config) { return config.storedMarks || null },\n    apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init() { return 0 },\n    apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n]\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n  constructor(schema, plugins) {\n    this.schema = schema\n    this.fields = baseFields.concat()\n    this.plugins = []\n    this.pluginsByKey = Object.create(null)\n    if (plugins) plugins.forEach(plugin => {\n      if (this.pluginsByKey[plugin.key])\n        throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\")\n      this.plugins.push(plugin)\n      this.pluginsByKey[plugin.key] = plugin\n      if (plugin.spec.state)\n        this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin))\n    })\n  }\n}\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nexport class EditorState {\n  constructor(config) {\n    this.config = config\n  }\n\n  // doc:: Node\n  // The current document.\n\n  // selection:: Selection\n  // The selection.\n\n  // storedMarks:: ?[Mark]\n  // A set of marks to apply to the next input. Will be null when\n  // no explicit marks have been set.\n\n  // :: Schema\n  // The schema of the state's document.\n  get schema() {\n    return this.config.schema\n  }\n\n  // :: [Plugin]\n  // The plugins that are active in this state.\n  get plugins() {\n    return this.config.plugins\n  }\n\n  // :: (Transaction) → EditorState\n  // Apply the given transaction to produce a new state.\n  apply(tr) {\n    return this.applyTransaction(tr).state\n  }\n\n  // : (Transaction) → bool\n  filterTransaction(tr, ignore = -1) {\n    for (let i = 0; i < this.config.plugins.length; i++) if (i != ignore) {\n      let plugin = this.config.plugins[i]\n      if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n        return false\n    }\n    return true\n  }\n\n  // :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n  // Verbose variant of [`apply`](#state.EditorState.apply) that\n  // returns the precise transactions that were applied (which might\n  // be influenced by the [transaction\n  // hooks](#state.PluginSpec.filterTransaction) of\n  // plugins) along with the new state.\n  applyTransaction(rootTr) {\n    if (!this.filterTransaction(rootTr)) return {state: this, transactions: []}\n\n    let trs = [rootTr], newState = this.applyInner(rootTr), seen = null\n    // This loop repeatedly gives plugins a chance to respond to\n    // transactions as new transactions are added, making sure to only\n    // pass the transactions the plugin did not see before.\n    outer: for (;;) {\n      let haveNew = false\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        let plugin = this.config.plugins[i]\n        if (plugin.spec.appendTransaction) {\n          let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this\n          let tr = n < trs.length &&\n              plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState)\n          if (tr && newState.filterTransaction(tr, i)) {\n            tr.setMeta(\"appendedTransaction\", rootTr)\n            if (!seen) {\n              seen = []\n              for (let j = 0; j < this.config.plugins.length; j++)\n                seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0})\n            }\n            trs.push(tr)\n            newState = newState.applyInner(tr)\n            haveNew = true\n          }\n          if (seen) seen[i] = {state: newState, n: trs.length}\n        }\n      }\n      if (!haveNew) return {state: newState, transactions: trs}\n    }\n  }\n\n  // : (Transaction) → EditorState\n  applyInner(tr) {\n    if (!tr.before.eq(this.doc)) throw new RangeError(\"Applying a mismatched transaction\")\n    let newInstance = new EditorState(this.config), fields = this.config.fields\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i]\n      newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance)\n    }\n    for (let i = 0; i < applyListeners.length; i++) applyListeners[i](this, tr, newInstance)\n    return newInstance\n  }\n\n  // :: Transaction\n  // Start a [transaction](#state.Transaction) from this state.\n  get tr() { return new Transaction(this) }\n\n  // :: (Object) → EditorState\n  // Create a new state.\n  //\n  //   config::- Configuration options. Must contain `schema` or `doc` (or both).\n  //\n  //      schema:: ?Schema\n  //      The schema to use (only relevant if no `doc` is specified).\n  //\n  //      doc:: ?Node\n  //      The starting document.\n  //\n  //      selection:: ?Selection\n  //      A valid selection in the document.\n  //\n  //      storedMarks:: ?[Mark]\n  //      The initial set of [stored marks](#state.EditorState.storedMarks).\n  //\n  //      plugins:: ?[Plugin]\n  //      The plugins that should be active in this state.\n  static create(config) {\n    let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins)\n    let instance = new EditorState($config)\n    for (let i = 0; i < $config.fields.length; i++)\n      instance[$config.fields[i].name] = $config.fields[i].init(config, instance)\n    return instance\n  }\n\n  // :: (Object) → EditorState\n  // Create a new state based on this one, but with an adjusted set of\n  // active plugins. State fields that exist in both sets of plugins\n  // are kept unchanged. Those that no longer exist are dropped, and\n  // those that are new are initialized using their\n  // [`init`](#state.StateField.init) method, passing in the new\n  // configuration object..\n  //\n  //   config::- configuration options\n  //\n  //     plugins:: [Plugin]\n  //     New set of active plugins.\n  reconfigure(config) {\n    let $config = new Configuration(this.schema, config.plugins)\n    let fields = $config.fields, instance = new EditorState($config)\n    for (let i = 0; i < fields.length; i++) {\n      let name = fields[i].name\n      instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance)\n    }\n    return instance\n  }\n\n  // :: (?union<Object<Plugin>, string, number>) → Object\n  // Serialize this state to JSON. If you want to serialize the state\n  // of plugins, pass an object mapping property names to use in the\n  // resulting JSON object to plugin objects. The argument may also be\n  // a string or number, in which case it is ignored, to support the\n  // way `JSON.stringify` calls `toString` methods.\n  toJSON(pluginFields) {\n    let result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()}\n    if (this.storedMarks) result.storedMarks = this.storedMarks.map(m => m.toJSON())\n    if (pluginFields && typeof pluginFields == 'object') for (let prop in pluginFields) {\n      if (prop == \"doc\" || prop == \"selection\")\n        throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\")\n      let plugin = pluginFields[prop], state = plugin.spec.state\n      if (state && state.toJSON) result[prop] = state.toJSON.call(plugin, this[plugin.key])\n    }\n    return result\n  }\n\n  // :: (Object, Object, ?Object<Plugin>) → EditorState\n  // Deserialize a JSON representation of a state. `config` should\n  // have at least a `schema` field, and should contain array of\n  // plugins to initialize the state with. `pluginFields` can be used\n  // to deserialize the state of plugins, by associating plugin\n  // instances with the property names they use in the JSON object.\n  //\n  //   config::- configuration options\n  //\n  //     schema:: Schema\n  //     The schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     The set of active plugins.\n  static fromJSON(config, json, pluginFields) {\n    if (!json) throw new RangeError(\"Invalid input for EditorState.fromJSON\")\n    if (!config.schema) throw new RangeError(\"Required config field 'schema' missing\")\n    let $config = new Configuration(config.schema, config.plugins)\n    let instance = new EditorState($config)\n    $config.fields.forEach(field => {\n      if (field.name == \"doc\") {\n        instance.doc = Node.fromJSON(config.schema, json.doc)\n      } else if (field.name == \"selection\") {\n        instance.selection = Selection.fromJSON(instance.doc, json.selection)\n      } else if (field.name == \"storedMarks\") {\n        if (json.storedMarks) instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON)\n      } else {\n        if (pluginFields) for (let prop in pluginFields) {\n          let plugin = pluginFields[prop], state = plugin.spec.state\n          if (plugin.key == field.name && state && state.fromJSON &&\n              Object.prototype.hasOwnProperty.call(json, prop)) {\n            // This field belongs to a plugin mapped to a JSON field, read it from there.\n            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance)\n            return\n          }\n        }\n        instance[field.name] = field.init(config, instance)\n      }\n    })\n    return instance\n  }\n\n  // Kludge to allow the view to track mappings between different\n  // instances of a state.\n  //\n  // FIXME this is no longer needed as of prosemirror-view 1.9.0,\n  // though due to backwards-compat we should probably keep it around\n  // for a while (if only as a no-op)\n  static addApplyListener(f) {\n    applyListeners.push(f)\n  }\n  static removeApplyListener(f) {\n    let found = applyListeners.indexOf(f)\n    if (found > -1) applyListeners.splice(found, 1)\n  }\n}\n\nconst applyListeners = []\n","// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (let prop in obj) {\n    let val = obj[prop]\n    if (val instanceof Function) val = val.bind(self)\n    else if (prop == \"handleDOMEvents\") val = bindProps(val, self, {})\n    target[prop] = val\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nexport class Plugin {\n  // :: (PluginSpec)\n  // Create a plugin.\n  constructor(spec) {\n    // :: EditorProps\n    // The [props](#view.EditorProps) exported by this plugin.\n    this.props = {}\n    if (spec.props) bindProps(spec.props, this, this.props)\n    // :: Object\n    // The plugin's [spec object](#state.PluginSpec).\n    this.spec = spec\n    this.key = spec.key ? spec.key.key : createKey(\"plugin\")\n  }\n\n  // :: (EditorState) → any\n  // Extract the plugin's state field from an editor state.\n  getState(state) { return state[this.key] }\n}\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nconst keys = Object.create(null)\n\nfunction createKey(name) {\n  if (name in keys) return name + \"$\" + ++keys[name]\n  keys[name] = 0\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nexport class PluginKey {\n  // :: (?string)\n  // Create a plugin key.\n  constructor(name = \"key\") { this.key = createKey(name) }\n\n  // :: (EditorState) → ?Plugin\n  // Get the active plugin with this key, if any, from an editor\n  // state.\n  get(state) { return state.config.pluginsByKey[this.key] }\n\n  // :: (EditorState) → ?any\n  // Get the plugin's state from an editor state.\n  getState(state) { return state[this.key] }\n}\n","// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nconst lower16 = 0xffff\nconst factor16 = Math.pow(2, 16)\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nexport class MapResult {\n  constructor(pos, deleted = false, recover = null) {\n    // :: number The mapped version of the position.\n    this.pos = pos\n    // :: bool Tells you whether the position was deleted, that is,\n    // whether the step removed its surroundings from the document.\n    this.deleted = deleted\n    this.recover = recover\n  }\n}\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nexport class StepMap {\n  // :: ([number])\n  // Create a position map. The modifications to the document are\n  // represented as an array of numbers, in which each group of three\n  // represents a modified chunk as `[start, oldSize, newSize]`.\n  constructor(ranges, inverted = false) {\n    if (!ranges.length && StepMap.empty) return StepMap.empty\n    this.ranges = ranges\n    this.inverted = inverted\n  }\n\n  recover(value) {\n    let diff = 0, index = recoverIndex(value)\n    if (!this.inverted) for (let i = 0; i < index; i++)\n      diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]\n    return this.ranges[index * 3] + diff + recoverOffset(value)\n  }\n\n  // : (number, ?number) → MapResult\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  // : (number, ?number) → number\n  map(pos, assoc = 1) { return this._map(pos, assoc, true) }\n\n  _map(pos, assoc, simple) {\n    let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize\n      if (pos <= end) {\n        let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc\n        let result = start + diff + (side < 0 ? 0 : newSize)\n        if (simple) return result\n        let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start)\n        return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n      }\n      diff += newSize - oldSize\n    }\n    return simple ? pos + diff : new MapResult(pos + diff)\n  }\n\n  touches(pos, recover) {\n    let diff = 0, index = recoverIndex(recover)\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], end = start + oldSize\n      if (pos <= end && i == index * 3) return true\n      diff += this.ranges[i + newIndex] - oldSize\n    }\n    return false\n  }\n\n  // :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n  // Calls the given function on each of the changed ranges included in\n  // this map.\n  forEach(f) {\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff)\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex]\n      f(oldStart, oldStart + oldSize, newStart, newStart + newSize)\n      diff += newSize - oldSize\n    }\n  }\n\n  // :: () → StepMap\n  // Create an inverted version of this map. The result can be used to\n  // map positions in the post-step document to the pre-step document.\n  invert() {\n    return new StepMap(this.ranges, !this.inverted)\n  }\n\n  toString() {\n    return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n  }\n\n  // :: (n: number) → StepMap\n  // Create a map that moves all positions by offset `n` (which may be\n  // negative). This can be useful when applying steps meant for a\n  // sub-document to a larger document, or vice-versa.\n  static offset(n) {\n    return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n  }\n}\n\nStepMap.empty = new StepMap([])\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nexport class Mapping {\n  // :: (?[StepMap])\n  // Create a new mapping with the given position maps.\n  constructor(maps, mirror, from, to) {\n    // :: [StepMap]\n    // The step maps in this mapping.\n    this.maps = maps || []\n    // :: number\n    // The starting position in the `maps` array, used when `map` or\n    // `mapResult` is called.\n    this.from = from || 0\n    // :: number\n    // The end position in the `maps` array.\n    this.to = to == null ? this.maps.length : to\n    this.mirror = mirror\n  }\n\n  // :: (?number, ?number) → Mapping\n  // Create a mapping that maps only through a part of this one.\n  slice(from = 0, to = this.maps.length) {\n    return new Mapping(this.maps, this.mirror, from, to)\n  }\n\n  copy() {\n    return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n  }\n\n  // :: (StepMap, ?number)\n  // Add a step map to the end of this mapping. If `mirrors` is\n  // given, it should be the index of the step map that is the mirror\n  // image of this one.\n  appendMap(map, mirrors) {\n    this.to = this.maps.push(map)\n    if (mirrors != null) this.setMirror(this.maps.length - 1, mirrors)\n  }\n\n  // :: (Mapping)\n  // Add all the step maps in a given mapping to this one (preserving\n  // mirroring information).\n  appendMapping(mapping) {\n    for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null)\n    }\n  }\n\n  // :: (number) → ?number\n  // Finds the offset of the step map that mirrors the map at the\n  // given offset, in this mapping (as per the second argument to\n  // `appendMap`).\n  getMirror(n) {\n    if (this.mirror) for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n  }\n\n  setMirror(n, m) {\n    if (!this.mirror) this.mirror = []\n    this.mirror.push(n, m)\n  }\n\n  // :: (Mapping)\n  // Append the inverse of the given mapping to this one.\n  appendMappingInverted(mapping) {\n    for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null)\n    }\n  }\n\n  // :: () → Mapping\n  // Create an inverted version of this mapping.\n  invert() {\n    let inverse = new Mapping\n    inverse.appendMappingInverted(this)\n    return inverse\n  }\n\n  // : (number, ?number) → number\n  // Map a position through this mapping.\n  map(pos, assoc = 1) {\n    if (this.mirror) return this._map(pos, assoc, true)\n    for (let i = this.from; i < this.to; i++)\n      pos = this.maps[i].map(pos, assoc)\n    return pos\n  }\n\n  // : (number, ?number) → MapResult\n  // Map a position through this mapping, returning a mapping\n  // result.\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  _map(pos, assoc, simple) {\n    let deleted = false\n\n    for (let i = this.from; i < this.to; i++) {\n      let map = this.maps[i], result = map.mapResult(pos, assoc)\n      if (result.recover != null) {\n        let corr = this.getMirror(i)\n        if (corr != null && corr > i && corr < this.to) {\n          i = corr\n          pos = this.maps[corr].recover(result.recover)\n          continue\n        }\n      }\n\n      if (result.deleted) deleted = true\n      pos = result.pos\n    }\n\n    return simple ? pos : new MapResult(pos, deleted)\n  }\n}\n","import {Mapping} from \"./map\"\n\nexport function TransformError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = TransformError.prototype\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype)\nTransformError.prototype.constructor = TransformError\nTransformError.prototype.name = \"TransformError\"\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nexport class Transform {\n  // :: (Node)\n  // Create a transform that starts with the given document.\n  constructor(doc) {\n    // :: Node\n    // The current document (the result of applying the steps in the\n    // transform).\n    this.doc = doc\n    // :: [Step]\n    // The steps in this transform.\n    this.steps = []\n    // :: [Node]\n    // The documents before each of the steps.\n    this.docs = []\n    // :: Mapping\n    // A mapping with the maps for each of the steps in this transform.\n    this.mapping = new Mapping\n  }\n\n  // :: Node The starting document.\n  get before() { return this.docs.length ? this.docs[0] : this.doc }\n\n  // :: (step: Step) → this\n  // Apply a new step in this transform, saving the result. Throws an\n  // error when the step fails.\n  step(object) {\n    let result = this.maybeStep(object)\n    if (result.failed) throw new TransformError(result.failed)\n    return this\n  }\n\n  // :: (Step) → StepResult\n  // Try to apply a step in this transformation, ignoring it if it\n  // fails. Returns the step result.\n  maybeStep(step) {\n    let result = step.apply(this.doc)\n    if (!result.failed) this.addStep(step, result.doc)\n    return result\n  }\n\n  // :: bool\n  // True when the document has been changed (when there are any\n  // steps).\n  get docChanged() {\n    return this.steps.length > 0\n  }\n\n  addStep(step, doc) {\n    this.docs.push(this.doc)\n    this.steps.push(step)\n    this.mapping.appendMap(step.getMap())\n    this.doc = doc\n  }\n}\n","import {ReplaceError} from \"prosemirror-model\"\n\nimport {StepMap} from \"./map\"\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nconst stepsByID = Object.create(null)\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nexport class Step {\n  // :: (doc: Node) → StepResult\n  // Applies this step to the given document, returning a result\n  // object that either indicates failure, if the step can not be\n  // applied to this document, or indicates success by containing a\n  // transformed document.\n  apply(_doc) { return mustOverride() }\n\n  // :: () → StepMap\n  // Get the step map that represents the changes made by this step,\n  // and which can be used to transform between positions in the old\n  // and the new document.\n  getMap() { return StepMap.empty }\n\n  // :: (doc: Node) → Step\n  // Create an inverted version of this step. Needs the document as it\n  // was before the step as argument.\n  invert(_doc) { return mustOverride() }\n\n  // :: (mapping: Mappable) → ?Step\n  // Map this step through a mappable thing, returning either a\n  // version of that step with its positions adjusted, or `null` if\n  // the step was entirely deleted by the mapping.\n  map(_mapping) { return mustOverride() }\n\n  // :: (other: Step) → ?Step\n  // Try to merge this step with another one, to be applied directly\n  // after it. Returns the merged step when possible, null if the\n  // steps can't be merged.\n  merge(_other) { return null }\n\n  // :: () → Object\n  // Create a JSON-serializeable representation of this step. When\n  // defining this for a custom subclass, make sure the result object\n  // includes the step type's [JSON id](#transform.Step^jsonID) under\n  // the `stepType` property.\n  toJSON() { return mustOverride() }\n\n  // :: (Schema, Object) → Step\n  // Deserialize a step from its JSON representation. Will call\n  // through to the step class' own implementation of this method.\n  static fromJSON(schema, json) {\n    if (!json || !json.stepType) throw new RangeError(\"Invalid input for Step.fromJSON\")\n    let type = stepsByID[json.stepType]\n    if (!type) throw new RangeError(`No step type ${json.stepType} defined`)\n    return type.fromJSON(schema, json)\n  }\n\n  // :: (string, constructor<Step>)\n  // To be able to serialize steps to JSON, each step needs a string\n  // ID to attach to its JSON representation. Use this method to\n  // register an ID for your step classes. Try to pick something\n  // that's unlikely to clash with steps from other modules.\n  static jsonID(id, stepClass) {\n    if (id in stepsByID) throw new RangeError(\"Duplicate use of step JSON ID \" + id)\n    stepsByID[id] = stepClass\n    stepClass.prototype.jsonID = id\n    return stepClass\n  }\n}\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nexport class StepResult {\n  // : (?Node, ?string)\n  constructor(doc, failed) {\n    // :: ?Node The transformed document.\n    this.doc = doc\n    // :: ?string Text providing information about a failed step.\n    this.failed = failed\n  }\n\n  // :: (Node) → StepResult\n  // Create a successful step result.\n  static ok(doc) { return new StepResult(doc, null) }\n\n  // :: (string) → StepResult\n  // Create a failed step result.\n  static fail(message) { return new StepResult(null, message) }\n\n  // :: (Node, number, number, Slice) → StepResult\n  // Call [`Node.replace`](#model.Node.replace) with the given\n  // arguments. Create a successful result if it succeeds, and a\n  // failed one if it throws a `ReplaceError`.\n  static fromReplace(doc, from, to, slice) {\n    try {\n      return StepResult.ok(doc.replace(from, to, slice))\n    } catch (e) {\n      if (e instanceof ReplaceError) return StepResult.fail(e.message)\n      throw e\n    }\n  }\n}\n","import {Slice} from \"prosemirror-model\"\n\nimport {Step, StepResult} from \"./step\"\nimport {StepMap} from \"./map\"\n\n// ::- Replace a part of the document with a slice of new content.\nexport class ReplaceStep extends Step {\n  // :: (number, number, Slice, ?bool)\n  // The given `slice` should fit the 'gap' between `from` and\n  // `to`—the depths must line up, and the surrounding nodes must be\n  // able to be joined with the open sides of the slice. When\n  // `structure` is true, the step will fail if the content between\n  // from and to is not just a sequence of closing and then opening\n  // tokens (this is to guard against rebased replace steps\n  // overwriting something they weren't supposed to).\n  constructor(from, to, slice, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      return StepResult.fail(\"Structure replace would overwrite content\")\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  }\n\n  invert(doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted) return null\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  }\n\n  merge(other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) return null\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd)\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd)\n      return new ReplaceStep(other.from, this.to, slice, this.structure)\n    } else {\n      return null\n    }\n  }\n\n  toJSON() {\n    let json = {stepType: \"replace\", from: this.from, to: this.to}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\")\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  }\n}\n\nStep.jsonID(\"replace\", ReplaceStep)\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nexport class ReplaceAroundStep extends Step {\n  // :: (number, number, number, number, Slice, number, ?bool)\n  // Create a replace-around step with the given range and gap.\n  // `insert` should be the point in the slice into which the content\n  // of the gap should be moved. `structure` has the same meaning as\n  // it has in the [`ReplaceStep`](#transform.ReplaceStep) class.\n  constructor(from, to, gapFrom, gapTo, slice, insert, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      return StepResult.fail(\"Structure gap-replace would overwrite content\")\n\n    let gap = doc.slice(this.gapFrom, this.gapTo)\n    if (gap.openStart || gap.openEnd)\n      return StepResult.fail(\"Gap is not a flat range\")\n    let inserted = this.slice.insertAt(this.insert, gap.content)\n    if (!inserted) return StepResult.fail(\"Content does not fit in gap\")\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  }\n\n  invert(doc) {\n    let gap = this.gapTo - this.gapFrom\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1)\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) return null\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  }\n\n  toJSON() {\n    let json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\")\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  }\n}\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep)\n\nfunction contentBetween(doc, from, to) {\n  let $from = doc.resolve(from), dist = to - from, depth = $from.depth\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--\n    dist--\n  }\n  if (dist > 0) {\n    let next = $from.node(depth).maybeChild($from.indexAfter(depth))\n    while (dist > 0) {\n      if (!next || next.isLeaf) return true\n      next = next.firstChild\n      dist--\n    }\n  }\n  return false\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nexport function liftTarget(range) {\n  let parent = range.parent\n  let content = parent.content.cutByIndex(range.startIndex, range.endIndex)\n  for (let depth = range.depth;; --depth) {\n    let node = range.$from.node(depth)\n    let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth)\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      return depth\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) break\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  let {$from, $to, depth} = range\n\n  let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1)\n  let start = gapStart, end = gapEnd\n\n  let before = Fragment.empty, openStart = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $from.index(d) > 0) {\n      splitting = true\n      before = Fragment.from($from.node(d).copy(before))\n      openStart++\n    } else {\n      start--\n    }\n  let after = Fragment.empty, openEnd = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $to.after(d + 1) < $to.end(d)) {\n      splitting = true\n      after = Fragment.from($to.node(d).copy(after))\n      openEnd++\n    } else {\n      end++\n    }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n}\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nexport function findWrapping(range, nodeType, attrs, innerRange = range) {\n  let around = findWrappingOutside(range, nodeType)\n  let inner = around && findWrappingInside(innerRange, nodeType)\n  if (!inner) return null\n  return around.map(withAttrs).concat({type: nodeType, attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let around = parent.contentMatchAt(startIndex).findWrapping(type)\n  if (!around) return null\n  let outer = around.length ? around[0] : type\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let inner = parent.child(startIndex)\n  let inside = type.contentMatch.findWrapping(inner.type)\n  if (!inside) return null\n  let lastType = inside.length ? inside[inside.length - 1] : type\n  let innerMatch = lastType.contentMatch\n  for (let i = startIndex; innerMatch && i < endIndex; i++)\n    innerMatch = innerMatch.matchType(parent.child(i).type)\n  if (!innerMatch || !innerMatch.validEnd) return null\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--) {\n    if (content.size) {\n      let match = wrappers[i].type.contentMatch.matchFragment(content)\n      if (!match || !match.validEnd)\n        throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\")\n    }\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n  }\n\n  let start = range.start, end = range.end\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n}\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to = from, type, attrs) {\n  if (!type.isTextblock) throw new RangeError(\"Type given to setBlockType should be a textblock\")\n  let mapFrom = this.steps.length\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this.doc, this.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this.clearIncompatible(this.mapping.slice(mapFrom).map(pos, 1), type)\n      let mapping = this.mapping.slice(mapFrom)\n      let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1)\n      this.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true))\n      return false\n    }\n  })\n  return this\n}\n\nfunction canChangeType(doc, pos, type) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  let node = this.doc.nodeAt(pos)\n  if (!node) throw new RangeError(\"No node at given position\")\n  if (!type) type = node.type\n  let newNode = type.create(attrs, null, marks || node.marks)\n  if (node.isLeaf)\n    return this.replaceWith(pos, pos + node.nodeSize, newNode)\n\n  if (!type.validContent(node.content))\n    throw new RangeError(\"Invalid content for node type \" + type.name)\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n}\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nexport function canSplit(doc, pos, depth = 1, typesAfter) {\n  let $pos = doc.resolve(pos), base = $pos.depth - depth\n  let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    return false\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    let node = $pos.node(d), index = $pos.index(d)\n    if (node.type.spec.isolating) return false\n    let rest = node.content.cutByIndex(index, node.childCount)\n    let after = (typesAfter && typesAfter[i]) || node\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs))\n    if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n      return false\n  }\n  let index = $pos.indexAfter(base)\n  let baseType = typesAfter && typesAfter[0]\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth = 1, typesAfter) {\n  let $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty\n  for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before))\n    let typeAfter = typesAfter && typesAfter[i]\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after))\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n}\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nexport function canJoin(doc, pos) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nexport function joinPoint(doc, pos, dir = -1) {\n  let $pos = doc.resolve(pos)\n  for (let d = $pos.depth;; d--) {\n    let before, after, index = $pos.index(d)\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore\n      after = $pos.nodeAfter\n    } else if (dir > 0) {\n      before = $pos.node(d + 1)\n      index++\n      after = $pos.node(d).maybeChild(index)\n    } else {\n      before = $pos.node(d).maybeChild(index - 1)\n      after = $pos.node(d + 1)\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) return pos\n    if (d == 0) break\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d)\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth = 1) {\n  let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true)\n  return this.step(step)\n}\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nexport function insertPoint(doc, pos, nodeType) {\n  let $pos = doc.resolve(pos)\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) return pos\n\n  if ($pos.parentOffset == 0)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.index(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.before(d + 1)\n      if (index > 0) return null\n    }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.indexAfter(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.after(d + 1)\n      if (index < $pos.node(d).childCount) return null\n    }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nexport function dropPoint(doc, pos, slice) {\n  let $pos = doc.resolve(pos)\n  if (!slice.content.size) return pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (let d = $pos.depth; d >= 0; d--) {\n      let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n      let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n      let parent = $pos.node(d), fits = false\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content)\n      } else {\n        let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type)\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0])\n      }\n      if (fits)\n        return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n    }\n  }\n  return null\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\nimport {Step, StepResult} from \"./step\"\n\nfunction mapFragment(fragment, f, parent) {\n  let mapped = []\n  for (let i = 0; i < fragment.childCount; i++) {\n    let child = fragment.child(i)\n    if (child.content.size) child = child.copy(mapFragment(child.content, f, child))\n    if (child.isInline) child = f(child, parent, i)\n    mapped.push(child)\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nexport class AddMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the marked range.\n    this.from = from\n    // :: number\n    // The end of the marked range.\n    this.to = to\n    // :: Mark\n    // The mark to add.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from)\n    let parent = $from.node($from.sharedDepth(this.to))\n    let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n      if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type)) return node\n      return node.mark(this.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\")\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"addMark\", AddMarkStep)\n\n// ::- Remove a mark from all inline content between two positions.\nexport class RemoveMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the unmarked range.\n    this.from = from\n    // :: number\n    // The end of the unmarked range.\n    this.to = to\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to)\n    let slice = new Slice(mapFragment(oldSlice.content, node => {\n      return node.mark(this.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\")\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"removeMark\", RemoveMarkStep)\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","\n    /*!\n    * tiptap-commands v1.17.0\n    * (c) 2021 überdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { setBlockType, lift, wrapIn } from 'prosemirror-commands';\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, setBlockType, splitBlock, splitBlockKeepMarks, toggleMark, wrapIn } from 'prosemirror-commands';\nimport { liftListItem, wrapInList } from 'prosemirror-schema-list';\nexport { addListNodes, liftListItem, sinkListItem, splitListItem, wrapInList } from 'prosemirror-schema-list';\nimport { InputRule } from 'prosemirror-inputrules';\nexport { textblockTypeInputRule, wrappingInputRule } from 'prosemirror-inputrules';\nimport { Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { getMarkRange, nodeIsActive, findParentNode } from 'tiptap-utils';\n\nfunction insertText (text = '') {\n  return (state, dispatch) => {\n    const {\n      $from\n    } = state.selection;\n    const {\n      pos\n    } = $from.pos;\n    dispatch(state.tr.insertText(text, pos));\n    return true;\n  };\n}\n\nfunction getMarksBetween(start, end, state) {\n  let marks = [];\n  state.doc.nodesBetween(start, end, (node, pos) => {\n    marks = [...marks, ...node.marks.map(mark => ({\n      start: pos,\n      end: pos + node.nodeSize,\n      mark\n    }))];\n  });\n  return marks;\n}\n\nfunction markInputRule (regexp, markType, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const {\n      tr\n    } = state;\n    const m = match.length - 1;\n    let markEnd = end;\n    let markStart = start;\n\n    if (match[m]) {\n      const matchStart = start + match[0].indexOf(match[m - 1]);\n      const matchEnd = matchStart + match[m - 1].length - 1;\n      const textStart = matchStart + match[m - 1].lastIndexOf(match[m]);\n      const textEnd = textStart + match[m].length;\n      const excludedMarks = getMarksBetween(start, end, state).filter(item => {\n        const {\n          excluded\n        } = item.mark.type;\n        return excluded.find(type => type.name === markType.name);\n      }).filter(item => item.end > matchStart);\n\n      if (excludedMarks.length) {\n        return false;\n      }\n\n      if (textEnd < matchEnd) {\n        tr.delete(textEnd, matchEnd);\n      }\n\n      if (textStart > matchStart) {\n        tr.delete(matchStart, textStart);\n      }\n\n      markStart = matchStart;\n      markEnd = markStart + match[m].length;\n    }\n\n    tr.addMark(markStart, markEnd, markType.create(attrs));\n    tr.removeStoredMark(markType);\n    return tr;\n  });\n}\n\nfunction nodeInputRule (regexp, type, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const {\n      tr\n    } = state;\n\n    if (match[0]) {\n      tr.replaceWith(start - 1, end, type.create(attrs));\n    }\n\n    return tr;\n  });\n}\n\nfunction pasteRule (regexp, type, getAttrs) {\n  const handler = fragment => {\n    const nodes = [];\n    fragment.forEach(child => {\n      if (child.isText) {\n        const {\n          text\n        } = child;\n        let pos = 0;\n        let match;\n\n        do {\n          match = regexp.exec(text);\n\n          if (match) {\n            const start = match.index;\n            const end = start + match[0].length;\n            const attrs = getAttrs instanceof Function ? getAttrs(match[0]) : getAttrs;\n\n            if (start > 0) {\n              nodes.push(child.cut(pos, start));\n            }\n\n            nodes.push(child.cut(start, end).mark(type.create(attrs).addToSet(child.marks)));\n            pos = end;\n          }\n        } while (match);\n\n        if (pos < text.length) {\n          nodes.push(child.cut(pos));\n        }\n      } else {\n        nodes.push(child.copy(handler(child.content)));\n      }\n    });\n    return Fragment.fromArray(nodes);\n  };\n\n  return new Plugin({\n    props: {\n      transformPasted: slice => new Slice(handler(slice.content), slice.openStart, slice.openEnd)\n    }\n  });\n}\n\nfunction markPasteRule (regexp, type, getAttrs) {\n  const handler = (fragment, parent) => {\n    const nodes = [];\n    fragment.forEach(child => {\n      if (child.isText) {\n        const {\n          text,\n          marks\n        } = child;\n        let pos = 0;\n        let match;\n        const isLink = !!marks.filter(x => x.type.name === 'link')[0]; // eslint-disable-next-line\n\n        while (!isLink && (match = regexp.exec(text)) !== null) {\n          if (parent && parent.type.allowsMarkType(type) && match[1]) {\n            const start = match.index;\n            const end = start + match[0].length;\n            const textStart = start + match[0].indexOf(match[1]);\n            const textEnd = textStart + match[1].length;\n            const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs; // adding text before markdown to nodes\n\n            if (start > 0) {\n              nodes.push(child.cut(pos, start));\n            } // adding the markdown part to nodes\n\n\n            nodes.push(child.cut(textStart, textEnd).mark(type.create(attrs).addToSet(child.marks)));\n            pos = end;\n          }\n        } // adding rest of text to nodes\n\n\n        if (pos < text.length) {\n          nodes.push(child.cut(pos));\n        }\n      } else {\n        nodes.push(child.copy(handler(child.content, child)));\n      }\n    });\n    return Fragment.fromArray(nodes);\n  };\n\n  return new Plugin({\n    props: {\n      transformPasted: slice => new Slice(handler(slice.content), slice.openStart, slice.openEnd)\n    }\n  });\n}\n\nfunction removeMark (type) {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection\n    } = state;\n    let {\n      from,\n      to\n    } = selection;\n    const {\n      $from,\n      empty\n    } = selection;\n\n    if (empty) {\n      const range = getMarkRange($from, type);\n      from = range.from;\n      to = range.to;\n    }\n\n    tr.removeMark(from, to, type);\n    return dispatch(tr);\n  };\n}\n\nfunction replaceText (range = null, type, attrs = {}, fragment = Fragment.empty) {\n  return (state, dispatch) => {\n    const {\n      $from,\n      $to\n    } = state.selection;\n    const index = $from.index();\n    const from = range ? range.from : $from.pos;\n    const to = range ? range.to : $to.pos;\n\n    if (!$from.parent.canReplaceWith(index, index, type)) {\n      return false;\n    }\n\n    if (dispatch) {\n      dispatch(state.tr.replaceWith(from, to, type.create(attrs, fragment)));\n    }\n\n    return true;\n  };\n}\n\nfunction setInlineBlockType (type, attrs = {}) {\n  return (state, dispatch) => {\n    const {\n      $from\n    } = state.selection;\n    const index = $from.index();\n\n    if (!$from.parent.canReplaceWith(index, index, type)) {\n      return false;\n    }\n\n    if (dispatch) {\n      dispatch(state.tr.replaceSelectionWith(type.create(attrs)));\n    }\n\n    return true;\n  };\n}\n\n// see https://github.com/ProseMirror/prosemirror-transform/blob/main/src/structure.js\n// Since this piece of code was \"borrowed\" from prosemirror, ESLint rules are ignored.\n\n/* eslint-disable max-len, no-plusplus, no-undef, eqeqeq */\n\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n  const $pos = doc.resolve(pos);\n  const base = $pos.depth - depth;\n  const innerType = typesAfter && typesAfter[typesAfter.length - 1] || $pos.parent;\n  if (base < 0 || $pos.parent.type.spec.isolating || !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) || !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount))) return false;\n\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    const node = $pos.node(d);\n    const index = $pos.index(d);\n    if (node.type.spec.isolating) return false;\n    let rest = node.content.cutByIndex(index, node.childCount);\n    const after = typesAfter && typesAfter[i] || node;\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs));\n    /* Change starts from here */\n    // if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n    //   return false\n\n    if (!node.canReplace(index + 1, node.childCount)) return false;\n    /* Change ends here */\n  }\n\n  const index = $pos.indexAfter(base);\n  const baseType = typesAfter && typesAfter[0];\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n} // this is a copy of splitListItem\n// see https://github.com/ProseMirror/prosemirror-schema-list/blob/main/src/schema-list.js\n\n\nfunction splitToDefaultListItem(itemType) {\n  return function (state, dispatch) {\n    const {\n      $from,\n      $to,\n      node\n    } = state.selection;\n    if (node && node.isBlock || $from.depth < 2 || !$from.sameParent($to)) return false;\n    const grandParent = $from.node(-1);\n    if (grandParent.type != itemType) return false;\n\n    if ($from.parent.content.size == 0) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType || $from.index(-2) != $from.node(-2).childCount - 1) return false;\n\n      if (dispatch) {\n        let wrap = Fragment.empty;\n        const keepItem = $from.index(-1) > 0; // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n\n        for (let d = $from.depth - (keepItem ? 1 : 2); d >= $from.depth - 3; d--) wrap = Fragment.from($from.node(d).copy(wrap)); // Add a second list item with an empty default start node\n\n\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n        const tr = state.tr.replace($from.before(keepItem ? null : -1), $from.after(-3), new Slice(wrap, keepItem ? 3 : 2, 2));\n        tr.setSelection(state.selection.constructor.near(tr.doc.resolve($from.pos + (keepItem ? 3 : 2))));\n        dispatch(tr.scrollIntoView());\n      }\n\n      return true;\n    }\n\n    const nextType = $to.pos == $from.end() ? grandParent.contentMatchAt($from.indexAfter(-1)).defaultType : null;\n    const tr = state.tr.delete($from.pos, $to.pos);\n    /* Change starts from here */\n    // let types = nextType && [null, {type: nextType}]\n\n    let types = nextType && [{\n      type: itemType\n    }, {\n      type: nextType\n    }];\n    if (!types) types = [{\n      type: itemType\n    }, null];\n    /* Change ends here */\n\n    if (!canSplit(tr.doc, $from.pos, 2, types)) return false;\n    if (dispatch) dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n    return true;\n  };\n}\n/* eslint-enable max-len, no-plusplus, no-undef, eqeqeq */\n\nfunction toggleBlockType (type, toggletype, attrs = {}) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggletype)(state, dispatch, view);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch, view);\n  };\n}\n\nfunction isList(node, schema) {\n  return node.type === schema.nodes.bullet_list || node.type === schema.nodes.ordered_list || node.type === schema.nodes.todo_list;\n}\n\nfunction toggleList(listType, itemType) {\n  return (state, dispatch, view) => {\n    const {\n      schema,\n      selection\n    } = state;\n    const {\n      $from,\n      $to\n    } = selection;\n    const range = $from.blockRange($to);\n\n    if (!range) {\n      return false;\n    }\n\n    const parentList = findParentNode(node => isList(node, schema))(selection);\n\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n      if (parentList.node.type === listType) {\n        return liftListItem(itemType)(state, dispatch, view);\n      }\n\n      if (isList(parentList.node, schema) && listType.validContent(parentList.node.content)) {\n        const {\n          tr\n        } = state;\n        tr.setNodeMarkup(parentList.pos, listType);\n\n        if (dispatch) {\n          dispatch(tr);\n        }\n\n        return false;\n      }\n    }\n\n    return wrapInList(listType)(state, dispatch, view);\n  };\n}\n\nfunction toggleWrap (type, attrs = {}) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(state, type, attrs);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type, attrs)(state, dispatch, view);\n  };\n}\n\nfunction updateMark (type, attrs) {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection,\n      doc\n    } = state;\n    const {\n      ranges,\n      empty\n    } = selection;\n\n    if (empty) {\n      const {\n        from,\n        to\n      } = getMarkRange(selection.$from, type);\n\n      if (doc.rangeHasMark(from, to, type)) {\n        tr.removeMark(from, to, type);\n      }\n\n      tr.addMark(from, to, type.create(attrs));\n    } else {\n      ranges.forEach(ref$1 => {\n        const {\n          $to,\n          $from\n        } = ref$1;\n\n        if (doc.rangeHasMark($from.pos, $to.pos, type)) {\n          tr.removeMark($from.pos, $to.pos, type);\n        }\n\n        tr.addMark($from.pos, $to.pos, type.create(attrs));\n      });\n    }\n\n    return dispatch(tr);\n  };\n}\n\nexport { insertText, markInputRule, markPasteRule, nodeInputRule, pasteRule, removeMark, replaceText, setInlineBlockType, splitToDefaultListItem, toggleBlockType, toggleList, toggleWrap, updateMark };\n","\n    /*!\n    * tiptap-utils v1.13.0\n    * (c) 2021 überdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { NodeSelection } from 'prosemirror-state';\n\nfunction createCell(cellType, cellContent) {\n  if (cellContent) {\n    return cellType.createChecked(null, cellContent);\n  }\n\n  return cellType.createAndFill();\n}\n\nfunction getTableNodeTypes(schema) {\n  if (schema.cached.tableNodeTypes) {\n    return schema.cached.tableNodeTypes;\n  }\n\n  const roles = {};\n  Object.keys(schema.nodes).forEach(type => {\n    const nodeType = schema.nodes[type];\n\n    if (nodeType.spec.tableRole) {\n      roles[nodeType.spec.tableRole] = nodeType;\n    }\n  }); // eslint-disable-next-line\n\n  schema.cached.tableNodeTypes = roles;\n  return roles;\n}\n\nfunction createTable(schema, rowsCount, colsCount, withHeaderRow, cellContent) {\n  const types = getTableNodeTypes(schema);\n  const headerCells = [];\n  const cells = [];\n\n  for (let index = 0; index < colsCount; index += 1) {\n    const cell = createCell(types.cell, cellContent);\n\n    if (cell) {\n      cells.push(cell);\n    }\n\n    if (withHeaderRow) {\n      const headerCell = createCell(types.header_cell, cellContent);\n\n      if (headerCell) {\n        headerCells.push(headerCell);\n      }\n    }\n  }\n\n  const rows = [];\n\n  for (let index = 0; index < rowsCount; index += 1) {\n    rows.push(types.row.createChecked(null, withHeaderRow && index === 0 ? headerCells : cells));\n  }\n\n  return types.table.createChecked(null, rows);\n}\n\nfunction equalNodeType(nodeType, node) {\n  return Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1 || node.type === nodeType;\n}\n\nfunction flatten(node) {\n  // eslint-disable-next-line\n  const descend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  }\n\n  const result = []; // eslint-disable-next-line\n\n  node.descendants((child, pos) => {\n    result.push({\n      node: child,\n      pos\n    });\n\n    if (!descend) {\n      return false;\n    }\n  });\n  return result;\n}\n\nfunction findChildren(node, predicate, descend) {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  } else if (!predicate) {\n    throw new Error('Invalid \"predicate\" parameter');\n  }\n\n  return flatten(node, descend).filter(child => predicate(child.node));\n}\n\nfunction findBlockNodes(node, descend) {\n  return findChildren(node, child => child.isBlock, descend);\n}\n\n// eslint-disable-next-line\nfunction findParentNodeClosestToPos($pos, predicate) {\n  for (let i = $pos.depth; i > 0; i -= 1) {\n    const node = $pos.node(i);\n\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node\n      };\n    }\n  }\n}\n\nfunction findParentNode(predicate) {\n  return selection => findParentNodeClosestToPos(selection.$from, predicate);\n}\n\nfunction isNodeSelection(selection) {\n  return selection instanceof NodeSelection;\n}\n\nfunction findSelectedNodeOfType(nodeType) {\n  // eslint-disable-next-line\n  return function (selection) {\n    if (isNodeSelection(selection)) {\n      const {\n        node\n      } = selection;\n      const {\n        $from\n      } = selection;\n\n      if (equalNodeType(nodeType, node)) {\n        return {\n          node,\n          pos: $from.pos,\n          depth: $from.depth\n        };\n      }\n    }\n  };\n}\n\nfunction getMarkAttrs(state, type) {\n  const {\n    from,\n    to\n  } = state.selection;\n  let marks = [];\n  state.doc.nodesBetween(from, to, node => {\n    marks = [...marks, ...node.marks];\n  });\n  const mark = marks.find(markItem => markItem.type.name === type.name);\n\n  if (mark) {\n    return mark.attrs;\n  }\n\n  return {};\n}\n\nfunction getMarkRange($pos = null, type = null) {\n  if (!$pos || !type) {\n    return false;\n  }\n\n  const start = $pos.parent.childAfter($pos.parentOffset);\n\n  if (!start.node) {\n    return false;\n  }\n\n  const link = start.node.marks.find(mark => mark.type === type);\n\n  if (!link) {\n    return false;\n  }\n\n  let startIndex = $pos.index();\n  let startPos = $pos.start() + start.offset;\n  let endIndex = startIndex + 1;\n  let endPos = startPos + start.node.nodeSize;\n\n  while (startIndex > 0 && link.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1;\n    startPos -= $pos.parent.child(startIndex).nodeSize;\n  }\n\n  while (endIndex < $pos.parent.childCount && link.isInSet($pos.parent.child(endIndex).marks)) {\n    endPos += $pos.parent.child(endIndex).nodeSize;\n    endIndex += 1;\n  }\n\n  return {\n    from: startPos,\n    to: endPos\n  };\n}\n\nfunction getNodeAttrs(state, type) {\n  const {\n    from,\n    to\n  } = state.selection;\n  let nodes = [];\n  state.doc.nodesBetween(from, to, node => {\n    nodes = [...nodes, node];\n  });\n  const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name);\n\n  if (node) {\n    return node.attrs;\n  }\n\n  return {};\n}\n\nfunction markIsActive(state, type) {\n  const {\n    from,\n    $from,\n    to,\n    empty\n  } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  }\n\n  return !!state.doc.rangeHasMark(from, to, type);\n}\n\nfunction nodeEqualsType({\n  types,\n  node\n}) {\n  return Array.isArray(types) && types.includes(node.type) || node.type === types;\n}\n\nfunction nodeIsActive(state, type, attrs = {}) {\n  const predicate = node => node.type === type;\n\n  const node = findSelectedNodeOfType(type)(state.selection) || findParentNode(predicate)(state.selection);\n\n  if (!Object.keys(attrs).length || !node) {\n    return !!node;\n  }\n\n  return node.node.hasMarkup(type, { ...node.node.attrs,\n    ...attrs\n  });\n}\n\nexport { createCell, createTable, equalNodeType, findBlockNodes, findChildren, findParentNode, findParentNodeClosestToPos, findSelectedNodeOfType, flatten, getMarkAttrs, getMarkRange, getNodeAttrs, getTableNodeTypes, isNodeSelection, markIsActive, nodeEqualsType, nodeIsActive };\n","import Button from 'flarum/common/components/Button';\r\nimport extractText from 'flarum/common/utils/extractText';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport Dropdown from 'flarum/common/components/Dropdown';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport styleSelectedText from 'flarum/common/utils/styleSelectedText';\r\nimport ItemList from 'flarum/common/utils/ItemList';\r\n\r\nimport { removeMark, updateMark } from 'tiptap-commands';\r\n\r\n//borrowed from askvortsov1/flarum-rich-text\r\nexport default class InsertReferenceDropdown extends Dropdown  {\r\n  static initAttrs(attrs) {\r\n    attrs.buttonClassName = 'Button Button--icon Button--link Button--menuDropdown';\r\n  }\r\n  \r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.state = this.attrs.state;\r\n\r\n    this.text = Stream('');\r\n    this.href = Stream('');\r\n\r\n    // this.state.addItem(\r\n    //   this.attrs.type,\r\n    //   (state, dispatch) => {\r\n    //     this.command(state, dispatch);\r\n    //   },\r\n    //   this.onEditorUpdate.bind(this)\r\n    // );\r\n\r\n    this.selectionEmpty = true;\r\n  }\r\n\r\n  oncreate(vnode) {\r\n    super.oncreate(vnode);\r\n\r\n    this.$().on('click', (e) => {\r\n      if ($('.App').is('.mobile-safari')) {\r\n        // Mobile Safari doesn't support fixed items\r\n        // So, we wrap them in a modal.\r\n        app.modal.show(SafariModalHack, {\r\n          title: this.attrs.tooltip,\r\n          vnodeContent: this.fields().toArray(),\r\n          onsubmit: this.onsubmit.bind(this),\r\n        });\r\n        e.stopPropagation();\r\n      }\r\n    });\r\n\r\n    this.$().on('shown.bs.dropdown', () => {\r\n      this.$('.Dropdown-menu').find('input, select, textarea').first().focus().select();\r\n    });\r\n  }\r\n\r\n  getButtonContent(children) {\r\n    return (\r\n      <Tooltip text={this.attrs.tooltip}>\r\n        <span>{icon(this.attrs.icon)}</span>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  getMenu(items) {\r\n    return (\r\n      <ul className={'Dropdown-menu dropdown-menu FormDropdown'}>\r\n        <form className=\"Form\" onsubmit={this.onsubmit.bind(this)}>\r\n          {this.fields().toArray()}\r\n        </form>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  onsubmit(e) {\r\n    // Here for the safari workaround\r\n    app.modal.close();\r\n    e.preventDefault();\r\n    $('body').trigger('click');\r\n    this.insert(e);\r\n    app.composer.editor.focus();\r\n  }\r\n\r\n  fields() {\r\n    const items = new ItemList();\r\n\r\n    items.add(\r\n      'insert',\r\n      <Button type=\"submit\" className=\"Button Button--primary\">\r\n        {app.translator.trans('flarum-references.forum.composer.insert_button')}\r\n      </Button>\r\n    );\r\n\r\n    if (this.selectionEmpty && !this.active) {\r\n      items.add(\r\n        'text',\r\n        <div className=\"Form-group\">\r\n          <input\r\n            className=\"FormControl\"\r\n            name=\"text\"\r\n            placeholder={extractText(app.translator.trans('flarum-references.forum.composer.insert_link.text_placeholder'))}\r\n            bidi={this.text}\r\n            required\r\n          />\r\n        </div>,\r\n        10\r\n      );\r\n    }\r\n\r\n    items.add(\r\n      'href',\r\n      <div className=\"Form-group\">\r\n        <input\r\n          className=\"FormControl\"\r\n          name=\"href\"\r\n          type=\"url\"\r\n          placeholder={extractText(app.translator.trans('flarum-references.forum.composer.insert_link.href_placeholder'))}\r\n          bidi={this.href}\r\n          required\r\n        />\r\n      </div>,\r\n      10\r\n    );\r\n\r\n    if (this.active) {\r\n      items.add(\r\n        'remove',\r\n        <Button onclick={this.remove.bind(this)} className=\"Button Button--danger\">\r\n          {app.translator.trans('flarum-references.forum.composer.insert_link.remove_button')}\r\n        </Button>,\r\n        -10\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  insert(e) {\r\n    const linkAttrs = { href: this.href(), text: this.text() };\r\n\r\n    if (this.selectionEmpty && !this.active) {\r\n      //this.command = dispatch(state.tr.replaceSelectionWith(state.schema.text(this.text(), [this.attrs.mark.create(linkAttrs)]), false));\r\n\r\n      styleSelectedText(app.composer.editor.el, \r\n        //{ prefix: '![', suffix: '](https://)', replaceNext: 'https://', scanFor: 'https?://' }\r\n        { prefix: '[ref][' + linkAttrs.text, suffix: ']('+ linkAttrs.href +')[/ref]' }\r\n      );\r\n      //$('.TextEditor-editor')\r\n      this.text('');\r\n      this.href('');\r\n    } else {\r\n      this.command = updateMark(this.attrs.mark, linkAttrs);\r\n    }\r\n  }\r\n\r\n  remove(e) {\r\n    $('body').trigger('click');\r\n    this.command = removeMark(this.attrs.mark);\r\n    this.state.run(this.attrs.type);\r\n    app.composer.editor.focus();\r\n  }\r\n\r\n  onEditorUpdate() {\r\n    this.active = !!this.state.markActive(this.attrs.mark);\r\n    this.$('.Dropdown-toggle').toggleClass('active', this.active);\r\n\r\n    const attrs = this.state.markAttrs(this.attrs.mark);\r\n\r\n    this.href(attrs.href);\r\n    this.text(attrs.text);\r\n\r\n    this.selectionEmpty = this.state.selectionEmpty();\r\n  }\r\n}","import Modal from \"flarum/components/Modal\";\r\nimport Button from 'flarum/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\n\r\nexport default class BookRefModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.value = app.composer.fields.content() || '';\r\n    // this.allReferences = this.value.match(/\\[reference\\ id=[\\w]*\\][\\w\\ \\(\\)\\[\\]\\.\\,\\/\\\\\\-_\\+;:\"'?&]*\\[\\/reference\\]/gm);\r\n    this.allReferences = this.value.match(/\\[reference\\ id=[\\w]* type=[\\w]*\\].*\\[\\/reference\\]/gm);\r\n    this.referenceId = this.allReferences?.length || 0;\r\n\r\n    this.fields = {\r\n      title: Stream(''),\r\n      link: Stream(''),\r\n      author: Stream(''),\r\n      year: Stream(''),\r\n      editura: Stream(''),\r\n    };\r\n  }\r\n\r\n  className() {\r\n    return \"\";\r\n  }\r\n\r\n  title() {\r\n    return \"Carte\";\r\n  }\r\n\r\n  content() {\r\n    return [\r\n      m('.Modal-body',\r\n        m('Form.Form--left',\r\n        m('span.description', app.translator.trans('Realizarea de referințe bibliografice la publicații de carte.')),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Link')),\r\n          m('input.FormControl', {\r\n            type: \"url\",\r\n            value: this.fields.link(),\r\n            placeholder: \"ex. http://example.com\",\r\n            oninput: (e) => {\r\n              this.fields.link(e.target.value);\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Author')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            placeholder: \"ex. L. Rebreanu\",\r\n            value: this.fields.author(),\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.author(e.target.value);\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Titlul')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            value: this.fields.title(),\r\n            placeholder: \"ex. Pădurea spânzuraților\",\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.title(e.target.value);\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Anul')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            placeholder: \"ex. 1970\",\r\n            pattern: \"^(?:(?:1[6-9]|[2-9]\\\\d)\\\\d{2})$\",\r\n            value: this.fields.year(),\r\n            oninput: (e) => {\r\n              this.fields.year(e.target.value);\r\n              this.removeRedStyle();\r\n            }\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Editura')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            value: this.fields.editura(),\r\n            placeholder: \"ex. Lumina\",\r\n            oninput: (e) => {\r\n              this.fields.editura(e.target.value);\r\n              this.removeRedStyle();\r\n            }\r\n          },\r\n          )\r\n        ),\r\n          Button.component(\r\n            {\r\n              className: \"Button Button--primary\",\r\n              onclick: () => this.addReference(),\r\n            },\r\n            \"Adaugare\"\r\n          ),\r\n        )\r\n      )\r\n    ];\r\n  }\r\n\r\n  removeRedStyle() {\r\n    const requiredFields = this.$('input');\r\n\r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (requiredFields[k].validity.valid) {\r\n        requiredFields[k].removeAttribute(\"style\");\r\n      }\r\n    }\r\n  }\r\n\r\n  areSetRequiredFields() {\r\n    const requiredFields = this.$('input');\r\n    let i = 0;\r\n    \r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (!requiredFields[k].validity.valid) {\r\n        requiredFields[k].style.setProperty('border-color', 'red', 'important');\r\n        i++;\r\n      }\r\n    }\r\n\r\n    if (i == 0) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  addReference() {\r\n    if (!this.areSetRequiredFields()) return;\r\n\r\n    let date = new Date();\r\n    // console.log(flarum.extensions['askvortsov-rich-text']);\r\n    if (flarum.extensions['askvortsov-rich-text']) { // implements for askvortsov-rich-text editor\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n      \r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"Referinte:\");\r\n        app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        this.referenceId +\r\n        \". [reference id=ref\" + this.referenceId + \" type=book] \" +\r\n        this.fields.author() +\r\n        \". \" +\r\n        this.fields.title() +\r\n        \". \" +\r\n        this.fields.editura() +\r\n        ((this.fields.editura().length === 0) ? \"\" : (this.fields.year().length === 0) ? \"\" : \", \") +\r\n        this.fields.year() +\r\n        ((this.fields.year().length === 0) ? \" \" : \". \") +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        ((this.fields.link().length === 0) ? \"[/reference]\" : \" [/reference]\")\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n      app.composer.editor.setEnter();\r\n      app.composer.editor.delete();\r\n\r\n      // this.array[0] = \"Alt ceva\"\r\n      // console.log(\"rich-text\");\r\n    } else { // implements for flarum-markdown editor\r\n      console.log(app.composer.editor.el.value);\r\n      console.log(app.composer.fields.content());\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n\r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        // app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"\\n\\nReferinte:\\n\");\r\n        // app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        app.composer.editor.insertAtCursor(\"\\n\");\r\n        // app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        \"\\n\" +\r\n        this.referenceId +\r\n        \"\\\\. [reference id=ref\" + this.referenceId + \" type=book] \" +\r\n        this.fields.author() +\r\n        \". \" +\r\n        this.fields.title() +\r\n        \". \" +\r\n        this.fields.editura() +\r\n        ((this.fields.editura().length === 0) ? \"\" : (this.fields.year().length === 0) ? \"\" : \", \") +\r\n        this.fields.year() +\r\n        ((this.fields.year().length === 0) ? \" \" : \". \") +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        ((this.fields.link().length === 0) ? \"[/reference]\" : \" [/reference]\")\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n\r\n      // console.log(\"non rich-text\");\r\n      // app.composer.editor.moveCursorTo(app.composer.fields.content().length + 1);\r\n    }\r\n\r\n    app.modal.close();\r\n  }\r\n}","import Modal from \"flarum/components/Modal\";\r\nimport Button from 'flarum/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\n\r\nexport default class DefaultRefModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.value = app.composer.fields.content() || '';\r\n    // this.allReferences = this.value.match(/\\[reference\\ id=[\\w]*\\][\\w\\ \\(\\)\\[\\]\\.\\,\\/\\\\\\-_\\+;:\"'?&]*\\[\\/reference\\]/gm);\r\n    this.allReferences = this.value.match(/\\[reference\\ id=[\\w]* type=[\\w]*\\].*\\[\\/reference\\]/gm);\r\n    this.referenceId = this.allReferences?.length || 0;\r\n\r\n    // console.log(this.value);\r\n    // console.log(this.allReferences);\r\n    // console.log(this.referenceId);\r\n    this.fields = {\r\n      title: Stream(''),\r\n      link: Stream(''),\r\n    };\r\n  }\r\n\r\n  className() {\r\n    return \"\";\r\n  }\r\n\r\n  title() {\r\n    return \"De baza\";\r\n  }\r\n\r\n  content() {\r\n    // console.log(this.$('input[required]')[0]?.validity.valid);\r\n    // console.log(app.composer.editor.attrs.menuState.editorView.dom.outerText);\r\n    // console.log(app.composer.editor.attrs.menuState.editorView.dom.outerText.length);\r\n    return [\r\n      m('.Modal-body',\r\n        m('Form.Form--left',\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Titlul')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            value: this.fields.title(),\r\n            placeholder: \"ex. Pădurea spânzuraților\",\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.title(e.target.value);\r\n              this.removeRedStyle();\r\n              // if (e.target.hasAttribute(\"style\")) {\r\n              //   e.target.removeAttribute(\"style\");\r\n              // }\r\n            }\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Link')),\r\n          m('input.FormControl', {\r\n            type: \"url\",\r\n            placeholder: \"ex. http://example.com\",\r\n            value: this.fields.link(),\r\n            oninput: (e) => {\r\n              this.fields.link(e.target.value);\r\n              this.removeRedStyle();\r\n            }\r\n          },\r\n          )\r\n        ),\r\n          Button.component(\r\n            {\r\n              className: \"Button Button--primary\",\r\n              onclick: () => this.addReference(),\r\n            },\r\n            \"Adaugare\"\r\n          ),\r\n        )\r\n      )\r\n    ];\r\n  }\r\n\r\n  removeRedStyle() {\r\n    const requiredFields = this.$('input');\r\n\r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (requiredFields[k].validity.valid) {\r\n        requiredFields[k].removeAttribute(\"style\");\r\n      }\r\n    }\r\n  }\r\n\r\n  areSetRequiredFields() {\r\n    const requiredFields = this.$('input');\r\n    let i = 0;\r\n    // console.log(requiredFields);\r\n    \r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (!requiredFields[k].validity.valid) {\r\n        requiredFields[k].style.setProperty('border-color', 'red', 'important');\r\n        i++;\r\n      }\r\n    }\r\n\r\n    if (i == 0) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  addReference() {\r\n    if (!this.areSetRequiredFields()) return;\r\n\r\n    let date = new Date();\r\n    // console.log(flarum.extensions['askvortsov-rich-text']);\r\n    if (flarum.extensions['askvortsov-rich-text']) { // implements for askvortsov-rich-text editor\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n      \r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"Referinte:\");\r\n        app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        this.referenceId +\r\n        \". [reference id=ref\" + this.referenceId + \" type=default] \" +\r\n        this.fields.title() +\r\n        \". \" +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        ((this.fields.link().length === 0) ? \"[/reference]\" : \" [/reference]\")\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n      app.composer.editor.setEnter();\r\n      app.composer.editor.delete();\r\n\r\n      // this.array[0] = \"Alt ceva\"\r\n      // console.log(\"rich-text\");\r\n    } else { // implements for flarum-markdown editor\r\n      console.log(app.composer.editor.el.value);\r\n      console.log(app.composer.fields.content());\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n\r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        // app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"\\n\\nReferinte:\\n\");\r\n        // app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        app.composer.editor.insertAtCursor(\"\\n\");\r\n        // app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        \"\\n\" +\r\n        this.referenceId +\r\n        \"\\\\. [reference id=ref\" + this.referenceId + \" type=default] \" +\r\n        this.fields.title() +\r\n        \". \" +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        ((this.fields.link().length === 0) ? \"[/reference]\" : \" [/reference]\")\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n\r\n      // console.log(\"non rich-text\");\r\n      // app.composer.editor.moveCursorTo(app.composer.fields.content().length + 1);\r\n    }\r\n\r\n    // console.log(this.fields.link().length);\r\n    app.modal.close();\r\n  }\r\n}","import Modal from \"flarum/components/Modal\";\r\nimport Button from 'flarum/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\n\r\nexport default class JournalRefModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.value = app.composer.fields.content() || '';\r\n    // this.allReferences = this.value.match(/\\[reference\\ id=[\\w]*\\][\\w\\ \\(\\)\\[\\]\\.\\,\\/\\\\\\-_\\+;:\"'?&]*\\[\\/reference\\]/gm);\r\n    this.allReferences = this.value.match(/\\[reference\\ id=[\\w]* type=[\\w]*\\].*\\[\\/reference\\]/gm);\r\n    this.referenceId = this.allReferences?.length || 0;\r\n\r\n    this.fields = {\r\n      title: Stream(''),\r\n      author: Stream(''),\r\n    };\r\n  }\r\n\r\n  className() {\r\n    return \"\";\r\n  }\r\n\r\n  title() {\r\n    return \"Jurnal\";\r\n  }\r\n\r\n  content() {\r\n    return [\r\n      m('.Modal-body',\r\n        m('Form.Form--left',\r\n        // m('span.description', app.translator.trans('Model pentru plasarea referințelor bibliografice la articole din reviste și periodice.')),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Titlul')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            value: this.fields.title(),\r\n            placeholder: \"ex. Pădurea spânzuraților\",\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.title(e.target.value);\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Author')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            placeholder: \"ex. L. Rebreanu\",\r\n            bidi: this.fields.author,\r\n          },\r\n          )\r\n        ),\r\n          Button.component(\r\n            {\r\n              className: \"Button Button--primary\",\r\n              onclick: () => this.addReference(),\r\n            },\r\n            \"Adaugare\"\r\n          ),\r\n        )\r\n      )\r\n    ];\r\n  }\r\n\r\n  removeRedStyle() {\r\n    const requiredFields = this.$('input');\r\n\r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (requiredFields[k].validity.valid) {\r\n        requiredFields[k].removeAttribute(\"style\");\r\n      }\r\n    }\r\n  }\r\n\r\n  areSetRequiredFields() {\r\n    const requiredFields = this.$('input');\r\n    let i = 0;\r\n    \r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (!requiredFields[k].validity.valid) {\r\n        requiredFields[k].style.setProperty('border-color', 'red', 'important');\r\n        i++;\r\n      }\r\n    }\r\n\r\n    if (i == 0) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  addReference() {\r\n    if (!this.areSetRequiredFields()) return;\r\n\r\n    let date = new Date();\r\n    // console.log(flarum.extensions['askvortsov-rich-text']);\r\n    if (flarum.extensions['askvortsov-rich-text']) { // implements for askvortsov-rich-text editor\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n      \r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"Referinte:\");\r\n        app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        this.referenceId +\r\n        \". [reference id=ref\" + this.referenceId + \" type=journal] \" +\r\n        this.fields.author() +\r\n        ((this.fields.author().length === 0) ? \"\" : \". \") +\r\n        this.fields.title() +\r\n        \". \" +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        \"[/reference]\"\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n      app.composer.editor.setEnter();\r\n      app.composer.editor.delete();\r\n\r\n      // this.array[0] = \"Alt ceva\"\r\n      // console.log(\"rich-text\");\r\n    } else { // implements for flarum-markdown editor\r\n      console.log(app.composer.editor.el.value);\r\n      console.log(app.composer.fields.content());\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n\r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        // app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"\\n\\nReferinte:\\n\");\r\n        // app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        app.composer.editor.insertAtCursor(\"\\n\");\r\n        // app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        \"\\n\" +\r\n        this.referenceId +\r\n        \"\\\\. [reference id=ref\" + this.referenceId + \" type=journal] \" +\r\n        this.fields.author() +\r\n        ((this.fields.author().length === 0) ? \"\" : \". \") +\r\n        this.fields.title() +\r\n        \". \" +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        \"[/reference]\"\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n\r\n      // console.log(\"non rich-text\");\r\n      // app.composer.editor.moveCursorTo(app.composer.fields.content().length + 1);\r\n    }\r\n\r\n    app.modal.close();\r\n  }\r\n}","import Modal from \"flarum/components/Modal\";\r\nimport Button from 'flarum/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\n\r\nexport default class NewsRefModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.value = app.composer.fields.content() || '';\r\n    // this.allReferences = this.value.match(/\\[reference\\ id=[\\w]*\\][\\w\\ \\(\\)\\[\\]\\.\\,\\/\\\\\\-_\\+;:\"'?&]*\\[\\/reference\\]/gm);\r\n    this.allReferences = this.value.match(/\\[reference\\ id=[\\w]* type=[\\w]*\\].*\\[\\/reference\\]/gm);\r\n    this.referenceId = this.allReferences?.length || 0;\r\n\r\n    this.fields = {\r\n      title: Stream(''),\r\n      link: Stream(''),\r\n      author: Stream(''),\r\n      createAt: Stream(''),\r\n      siteName: Stream(''),\r\n    };\r\n  }\r\n\r\n  className() {\r\n    return \"\";\r\n  }\r\n\r\n  title() {\r\n    return \"Stire\";\r\n  }\r\n\r\n  content() {\r\n    return [\r\n      m('.Modal-body',\r\n        m('Form.Form--left',\r\n        m('span.description', app.translator.trans('Crearea de link-uri către știri surse de informații.')),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Titlul')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            value: this.fields.title(),\r\n            placeholder: \"ex. Pădurea spânzuraților\",\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.title(e.target.value);\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Author')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            placeholder: \"ex. L. Rebreanu\",\r\n            bidi: this.fields.author,\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('URL Link')),\r\n          m('input.FormControl', {\r\n            type: \"url\",\r\n            value: this.fields.link(),\r\n            placeholder: \"ex. http://example.com\",\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.link(e.target.value);\r\n              this.fields.siteName(e.target.value?.split('//')[1]?.split('/')[0] || \"\");\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Denumirea sursei')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            value: this.fields.siteName(),\r\n            placeholder: \"ex. example.com\",\r\n            required: true,\r\n            oninput: (e) => {\r\n              this.fields.siteName(e.target.value);\r\n              this.removeRedStyle();\r\n            },\r\n          },\r\n          )\r\n        ),\r\n        m('.Form-group',\r\n          m('label', app.translator.trans('Data publicării')),\r\n          m('input.FormControl', {\r\n            type: \"text\",\r\n            placeholder: \"ex. 01.01.1970\",\r\n            pattern: \"^(?:(?:31(\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$\",\r\n            value: this.fields.createAt(),\r\n            oninput: (e) => {\r\n              this.fields.createAt(e.target.value);\r\n              this.removeRedStyle();\r\n            }\r\n          },\r\n          )\r\n        ),\r\n          Button.component(\r\n            {\r\n              className: \"Button Button--primary\",\r\n              onclick: () => this.addReference(),\r\n            },\r\n            \"Adaugare\"\r\n          ),\r\n        )\r\n      )\r\n    ];\r\n  }\r\n\r\n  removeRedStyle() {\r\n    const requiredFields = this.$('input');\r\n\r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (requiredFields[k].validity.valid) {\r\n        requiredFields[k].removeAttribute(\"style\");\r\n      }\r\n    }\r\n  }\r\n\r\n  areSetRequiredFields() {\r\n    const requiredFields = this.$('input');\r\n    let i = 0;\r\n    \r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (!requiredFields[k].validity.valid) {\r\n        requiredFields[k].style.setProperty('border-color', 'red', 'important');\r\n        i++;\r\n      }\r\n    }\r\n\r\n    if (i == 0) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  addReference() {\r\n    if (!this.areSetRequiredFields()) return;\r\n    \r\n    let date = new Date();\r\n    // console.log(flarum.extensions['askvortsov-rich-text']);\r\n    if (flarum.extensions['askvortsov-rich-text']) { // implements for askvortsov-rich-text editor\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n      \r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"Referinte:\");\r\n        app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        this.referenceId +\r\n        \". [reference id=ref\" + this.referenceId + \" type=news] \" +\r\n        this.fields.author() +\r\n        ((this.fields.author().length === 0) ? \"\" : \". \") +\r\n        this.fields.title() +\r\n        \". \" +\r\n        this.fields.siteName() +\r\n        ((this.fields.createAt().length === 0) ? \". \" : \", \") +\r\n        this.fields.createAt() +\r\n        ((this.fields.createAt().length === 0) ? \"\" : \". \") +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        \" [/reference]\"\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n      app.composer.editor.setEnter();\r\n      app.composer.editor.delete();\r\n\r\n      // this.array[0] = \"Alt ceva\"\r\n      // console.log(\"rich-text\");\r\n    } else { // implements for flarum-markdown editor\r\n      console.log(app.composer.editor.el.value);\r\n      console.log(app.composer.fields.content());\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n\r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        // app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"\\n\\nReferinte:\\n\");\r\n        // app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        app.composer.editor.insertAtCursor(\"\\n\");\r\n        // app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        \"\\n\" +\r\n        this.referenceId +\r\n        \"\\\\. [reference id=ref\" + this.referenceId + \" type=news] \" +\r\n        this.fields.author() +\r\n        ((this.fields.author().length === 0) ? \"\" : \". \") +\r\n        this.fields.title() +\r\n        \". \" +\r\n        this.fields.siteName() +\r\n        ((this.fields.createAt().length === 0) ? \". \" : \", \") +\r\n        this.fields.createAt() +\r\n        ((this.fields.createAt().length === 0) ? \"\" : \". \") +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        \" [/reference]\"\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n\r\n      // console.log(\"non rich-text\");\r\n      // app.composer.editor.moveCursorTo(app.composer.fields.content().length + 1);\r\n    }\r\n\r\n    app.modal.close();\r\n  }\r\n}","import Modal from \"flarum/components/Modal\";\r\n\r\nimport DefaultRefModal from './DefaultRefModal';\r\nimport SiteRefModal from './SiteRefModal';\r\nimport BookRefModal from './BookRefModal';\r\nimport NewsRefModal from './NewsRefModal';\r\nimport JournalRefModal from './JournalRefModal';\r\n\r\nexport default class ReferencesModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n  }\r\n\r\n  className() {\r\n    return \"DiscussionType\";\r\n  }\r\n\r\n  title() {\r\n    return \"Selectare tip referinta\";\r\n  }\r\n\r\n  content() {\r\n    return [\r\n      m('.Modal-body',\r\n        m('.Form.Form--centered div_referinta',\r\n          m('.Form-group',\r\n            m('.choiceBox', {\r\n              onclick: () => app.modal.show(SiteRefModal),\r\n            },\r\n              (<i class=\"icon fas fa-window-maximize Button-icon\"></i>),\r\n              m('span', app.translator.trans('Site web')),\r\n              /* m('p', app.translator.trans('Site web')) */\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('.choiceBox', {\r\n              onclick: () => app.modal.show(BookRefModal),\r\n            },\r\n              (<i class=\"icon fas fa-book Button-icon\"></i>),\r\n              m('span', app.translator.trans('Carte')),\r\n              /* m('p', app.translator.trans('Carte')) */\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('.choiceBox', {\r\n              onclick: () => app.modal.show(NewsRefModal),\r\n            },\r\n              (<i class=\"icon fas fa-newspaper Button-icon\"></i>),\r\n              m('span', app.translator.trans('Stire')),\r\n              /* m('p', app.translator.trans('Stire')) */\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('.choiceBox', {\r\n              onclick: () => app.modal.show(JournalRefModal),\r\n            },\r\n              (<i class=\"icon fas fa-book-open Button-icon\"></i>),\r\n              m('span', app.translator.trans('Jurnal')),\r\n              /* m('p', app.translator.trans('Jurnal')) */\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('.choiceBox', {\r\n              onclick: () => app.modal.show(DefaultRefModal),\r\n            },\r\n              (<i class=\"icon fas fa-bookmark Button-icon\"></i>),\r\n              m('span', app.translator.trans('De baza')),\r\n              /* m('p', app.translator.trans('De baza')) */\r\n            )\r\n          ),\r\n        )\r\n      )\r\n    ];\r\n  }\r\n}","import Modal from \"flarum/components/Modal\";\r\nimport Button from 'flarum/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\n\r\nexport default class SiteRefModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.value = app.composer.fields.content() || '';\r\n    // this.allReferences = this.value.match(/\\[reference\\ id=[\\w]*\\][\\w\\ \\(\\)\\[\\]\\.\\,\\/\\\\\\-_\\+;:\"'?&]*\\[\\/reference\\]/gm);\r\n    this.allReferences = this.value.match(/\\[reference\\ id=[\\w]* type=[\\w]*\\].*\\[\\/reference\\]/gm);\r\n    this.referenceId = this.allReferences?.length || 0;\r\n\r\n    this.fields = {\r\n      title: Stream(''),\r\n      link: Stream(''),\r\n      author: Stream(''),\r\n      createAt: Stream(''),\r\n      siteName: Stream(''),\r\n    };\r\n  }\r\n\r\n  className() {\r\n    return \"\";\r\n  }\r\n\r\n  title() {\r\n    return \"Site web\";\r\n  }\r\n\r\n  content() {\r\n    return [\r\n      m('.Modal-body',\r\n        m('Form.Form--left',\r\n         m('span.description', app.translator.trans('Înregistrarea referințelor bibliografice la publicațiile postate pe Internet.')),\r\n          m('.Form-group',\r\n            m('label', app.translator.trans('Titlul referintei')),\r\n            m('input.FormControl', {\r\n              type: \"text\",\r\n              value: this.fields.title(),\r\n              placeholder: \"ex. Pădurea spânzuraților\",\r\n              required: true,\r\n              oninput: (e) => {\r\n                this.fields.title(e.target.value);\r\n                this.removeRedStyle();\r\n              }\r\n            },\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('label', app.translator.trans('Link')),\r\n            m('input.FormControl', {\r\n              type: \"url\",\r\n              value: this.fields.link(),\r\n              placeholder: \"ex. http://example.com\",\r\n              required: true,\r\n              oninput: (e) => {\r\n                this.fields.link(e.target.value);\r\n                this.fields.siteName(e.target.value?.split('//')[1]?.split('/')[0] || \"\");\r\n                this.removeRedStyle();\r\n              },\r\n            },\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('label', app.translator.trans('Author')),\r\n            m('input.FormControl', {\r\n              type: \"text\",\r\n              placeholder: \"ex. L. Rebreanu\",\r\n              bidi: this.fields.author,\r\n            },\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('label', app.translator.trans('Data plasarii pe site')),\r\n            m('input.FormControl', {\r\n              type: \"text\",\r\n              placeholder: \"ex. 01.01.1970\",\r\n              pattern: \"^(?:(?:31(\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$\",\r\n              value: this.fields.createAt(),\r\n              oninput: (e) => {\r\n                this.fields.createAt(e.target.value);\r\n                this.removeRedStyle();\r\n              }\r\n            },\r\n            )\r\n          ),\r\n          m('.Form-group',\r\n            m('label', app.translator.trans('Denumirea Web-site')),\r\n            m('input.FormControl', {\r\n              type: \"text\",\r\n              value: this.fields.siteName(),\r\n              placeholder: \"ex. example.com\",\r\n              required: true,\r\n              oninput: (e) => {\r\n                this.fields.siteName(e.target.value);\r\n                this.removeRedStyle();\r\n              },\r\n            },\r\n            )\r\n          ),\r\n          Button.component(\r\n            {\r\n              className: \"Button Button--primary\",\r\n              onclick: () => this.addReference(),\r\n            },\r\n            \"Adaugare\"\r\n          ),\r\n        )\r\n      )\r\n    ];\r\n  }\r\n  \r\n  removeRedStyle() {\r\n    const requiredFields = this.$('input');\r\n\r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (requiredFields[k].validity.valid) {\r\n        requiredFields[k].removeAttribute(\"style\");\r\n      }\r\n    }\r\n  }\r\n\r\n  areSetRequiredFields() {\r\n    const requiredFields = this.$('input');\r\n    let i = 0;\r\n    \r\n    for (let k = 0; k < requiredFields.length; k++) {\r\n      if (!requiredFields[k].validity.valid) {\r\n        requiredFields[k].style.setProperty('border-color', 'red', 'important');\r\n        i++;\r\n      }\r\n    }\r\n\r\n    if (i == 0) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  addReference() {\r\n    if (!this.areSetRequiredFields()) return;\r\n\r\n    let date = new Date();\r\n    // console.log(flarum.extensions['askvortsov-rich-text']);\r\n    if (flarum.extensions['askvortsov-rich-text']) { // implements for askvortsov-rich-text editor\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n      \r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"Referinte:\");\r\n        app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.attrs.menuState.editorView.dom.outerText.length + 1);\r\n        app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        this.referenceId +\r\n        \". [reference id=ref\" + this.referenceId + \" type=site] \" +\r\n        this.fields.author() +\r\n        ((this.fields.author().length === 0) ? \"\" : \". \") +\r\n        this.fields.title() +\r\n        \". \" +\r\n        this.fields.siteName() +\r\n        ((this.fields.createAt().length === 0) ? \". \" : \", \") +\r\n        this.fields.createAt() +\r\n        ((this.fields.createAt().length === 0) ? \"\" : \". \") +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        \" [/reference]\"\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n      app.composer.editor.setEnter();\r\n      app.composer.editor.delete();\r\n\r\n      // this.array[0] = \"Alt ceva\"\r\n      // console.log(\"rich-text\");\r\n    } else { // implements for flarum-markdown editor\r\n      console.log(app.composer.editor.el.value);\r\n      console.log(app.composer.fields.content());\r\n      app.composer.editor.insertAtCursor(\"[ref id=ref\" + ++this.referenceId + \"]\" + this.referenceId + \"[/ref]\");\r\n\r\n      const position = app.composer.editor.getSelectionRange();\r\n\r\n      if (this.referenceId == 1) {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        // app.composer.editor.setEnter();\r\n        app.composer.editor.insertAtCursor(\"\\n\\nReferinte:\\n\");\r\n        // app.composer.editor.setEnter();\r\n      } else {\r\n        app.composer.editor.moveCursorTo(app.composer.editor.el.value.length + 1);\r\n        app.composer.editor.insertAtCursor(\"\\n\");\r\n        // app.composer.editor.setEnter();\r\n      }\r\n\r\n      app.composer.editor.insertAtCursor(\r\n        \"\\n\" +\r\n        this.referenceId +\r\n        \"\\\\. [reference id=ref\" + this.referenceId + \" type=site] \" +\r\n        this.fields.author() +\r\n        ((this.fields.author().length === 0) ? \"\" : \". \") +\r\n        this.fields.title() +\r\n        \". \" +\r\n        this.fields.siteName() +\r\n        ((this.fields.createAt().length === 0) ? \". \" : \", \") +\r\n        this.fields.createAt() +\r\n        ((this.fields.createAt().length === 0) ? \"\" : \". \") +\r\n        \"[citat la \" +\r\n        date.getDate() + \r\n        \".\" + (date.getMonth() + 1) +\r\n        \".\" + date.getFullYear() +\r\n        \"] \" +\r\n        this.fields.link() +\r\n        \" [/reference]\"\r\n      );\r\n\r\n      app.composer.editor.setSelectionRange(position[0], position[1]);\r\n\r\n      // console.log(\"non rich-text\");\r\n      // app.composer.editor.moveCursorTo(app.composer.fields.content().length + 1);\r\n    }\r\n\r\n    app.modal.close();\r\n  }\r\n}","import {extend} from 'flarum/common/extend';\r\nimport { baseKeymap } from 'tiptap-commands';\r\nimport app from 'flarum/app';\r\nimport InsertReferenceDropdown from './InsertReferenceDropdown';\r\nimport TextEditorButton from 'flarum/components/TextEditorButton';\r\nimport TextEditor from 'flarum/common/components/TextEditor';\r\nimport CommentPost from 'flarum/forum/components/CommentPost';\r\nimport ComposerBody from 'flarum/components/ComposerBody';\r\nimport Button from 'flarum/components/Button';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\nimport ItemList from 'flarum/common/utils/ItemList';\r\nimport listItems from 'flarum/common/helpers/listItems';\r\n\r\nimport ReferencesModal from './components/ReferencesModal';\r\n\r\n// import {components} from '@block-cat-components';\r\n// const components = require('@block-cat-components');\r\n\r\n// function getStatus(url) {\r\n//   var request = new XMLHttpRequest();\r\n//   request.open(\"GET\", url, true);\r\n//   request.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n//   request.setRequestHeader('Access-Control-Allow-Methods', 'GET');\r\n//   request.onreadystatechange = function() {\r\n//         if (request.readyState === 4){\r\n//             console.log(request.status);//this contains the status code\r\n//         }\r\n//     };\r\n//   request.send();\r\n//   // return request.status;\r\n// }\r\n\r\napp.initializers.add('aradeid/flarum-references', () => {\r\n  // console.log(app);\r\n  // console.log(flarum);\r\n  // console.log(flarum.extensions['block-cat-components']);\r\n  // console.log(components);\r\n  // adaugarea metodei pentru simularea tastei enter in rich-text\r\n  if (flarum.extensions['askvortsov-rich-text']) {\r\n    const {\r\n      ProseMirrorEditorDriver\r\n    } = flarum.extensions['askvortsov-rich-text'].proseMirror;\r\n\r\n    ProseMirrorEditorDriver.prototype.setEnter = function() {\r\n      // console.log(this.view.state);\r\n      baseKeymap['Enter'](this.view.state, this.view.dispatch);\r\n      // baseKeymap['Enter'];\r\n    }\r\n    ProseMirrorEditorDriver.prototype.delete = function() {\r\n      // console.log(\"sters\");\r\n      baseKeymap['Backspace'](this.view.state, this.view.dispatch);\r\n    }\r\n  }\r\n  // console.log(app.composer.editor);\r\n\r\n  // adaugarea butonului pentru referinte in Editor la optiuni\r\n  extend(TextEditor.prototype, 'toolbarItems', function (items) {\r\n    // console.log(app.composer.editor);\r\n    // by Aradeid\r\n    //() => this.attrs.composer.editor.insertAtCursor(' :')\r\n    /*items.add(\r\n      'addReference',\r\n      (\r\n        <TextEditorButton onclick={addReference.bind(this)} icon=\"fas fa-paper-plane\">\r\n          {app.translator.trans('flarum-references.forum.composer.addReferenceButton')}\r\n        </TextEditorButton>\r\n      )\r\n    );*/\r\n    \r\n    // items.add(\r\n    //   'link',\r\n    //   InsertReferenceDropdown.component({\r\n    //     type: 'link',\r\n    //     icon: 'fas fa-link',\r\n    //     tooltip: app.translator.trans('flarum-references.forum.composer.addReferenceButton'),\r\n    //     state: this.attrs.state,\r\n    //   }),\r\n    //   50\r\n    // );\r\n\r\n    // console.log(this.attrs.composer.fields.content());\r\n    // by BlockCat\r\n    items.add(\r\n      'references',\r\n      Tooltip.component(\r\n        {\r\n          text: \"Referinta\",\r\n        },\r\n        Button.component(\r\n          {\r\n            className: 'Button Button--icon Button--link',\r\n            icon: 'fas fa-link',\r\n            onclick: () => app.modal.show(ReferencesModal),\r\n          },\r\n        ),\r\n      ),\r\n    );\r\n    return items;\r\n  });\r\n\r\n  // adaugarea butonului pentru referinte in Editor in partea dreapta (portlet-ui)\r\n  ComposerBody.prototype.sidebarMenu = function () {\r\n    const items = new ItemList();\r\n\r\n    items.add(\r\n      'reference_button',\r\n      Button.component(\r\n          {\r\n              // icon: 'fas fa-pencil-alt',\r\n              className: 'Button Button--secondary',\r\n              onclick: () => app.modal.show(ReferencesModal),\r\n          },\r\n          \"Referinte\"),\r\n    );\r\n\r\n    items.add(\r\n      'reference_ctrl_button',\r\n      Button.component(\r\n        {\r\n          className: 'Button Button--secondary',\r\n          onclick: () => this.linkControl(),\r\n        },\r\n        \"Control\"\r\n      ),\r\n    );\r\n\r\n    return items;\r\n  }\r\n\r\n  ComposerBody.prototype.linkControl = async function () {\r\n    // let response = await fetch('https://cors-anywhere.herokuapp.com/https://code.visualstudio.com/docs/java/java-tutorial', {\r\n    let response = await fetch('https://tools.emoldova.org/tools/validate-source', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        url: 'https://code.visualstudio.com/docs/java/java-tutorial'\r\n      }),\r\n      // headers: {\r\n      //   // 'Access-Control-Allow-Origin' : '*',\r\n      //   // 'Access-Control-Request-Method' : 'GET',\r\n      //   'origin': '*'\r\n      // },\r\n    });\r\n\r\n    // console.log(getStatus('https://cors-anywhere.herokuapp.com/https://code.visualstudio.com/docs/java/java-tutorial'));\r\n    console.log(response.json());\r\n  }\r\n\r\n  extend(ComposerBody.prototype, 'view', function (view) {\r\n    view.children[0].children[1].children.push(<ul className=\"sidebarMenu\">{listItems(this.sidebarMenu().toArray())}</ul>);\r\n  });\r\n\r\n  // Implementarea accesarii link-urilor interne in articole si comentarii\r\n  // by BlockCat\r\n  extend(CommentPost.prototype, ['oncreate', 'onupdate'], function () {\r\n    const baseUrl = app.forum.attribute('baseUrl');\r\n    const postBody = this.element.querySelector('.Post-body');\r\n    const elements = postBody.querySelectorAll('a');\r\n\r\n    for (const link of elements) {\r\n      if (link.classList.contains('PostMention')) {\r\n          continue;\r\n      }\r\n\r\n      const href = link.href;\r\n      \r\n      if (!href.startsWith(baseUrl)) {\r\n        continue;\r\n      }\r\n      \r\n      const path = href.replace(baseUrl, '');\r\n      const elements = path.split('/');\r\n      const isFile = elements[elements.length-1].match(/(.*)\\.(.*)/i);\r\n      \r\n      if (isFile) {\r\n        continue;\r\n      }\r\n      \r\n      const separateId = elements[elements.length-1].split('#');\r\n      const referenceId = separateId[separateId.length - 1];\r\n\r\n      link.addEventListener('click', function (e) {\r\n          e.preventDefault();\r\n\r\n          var reference = document.getElementById(referenceId);\r\n          reference?.scrollIntoView({behavior: 'smooth'});\r\n      });\r\n    }\r\n  });\r\n}, -21);\r\n\r\n// by Aradeid\r\n// function addReference() {\r\n//   styleSelectedText(app.composer.editor.el, \r\n//     //{ prefix: '![', suffix: '](https://)', replaceNext: 'https://', scanFor: 'https?://' }\r\n//     { prefix: '[ref][', suffix: '](https://insertLinkHere)[/ref]' }\r\n//   );\r\n// }","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/components/TextEditor'];","module.exports = flarum.core.compat['common/components/Tooltip'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/utils/styleSelectedText'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/ComposerBody'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/TextEditorButton'];","module.exports = flarum.core.compat['forum/components/CommentPost'];"],"sourceRoot":""}